[
  {
    "objectID": "03-13-Ejemplo7.html#diferenciación-y-logaritmo",
    "href": "03-13-Ejemplo7.html#diferenciación-y-logaritmo",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "2.1 Diferenciación y logaritmo",
    "text": "2.1 Diferenciación y logaritmo\nEl esquema multiplicativo de la serie aconseja el uso de la transformación logarítmica. Además, vamos a ver que para que la serie sea estacionaria es necesario diferenciarla tanto regular como estacionalmente, así que el uso de logaritmo vuelve a ser aconsejable si queremos ganar en interpretabilidad.\nLa Figura 2 muestra la FAC para la serie Pernoctaciones (log) y algunas de sus transformaciones. En los paneles a) y b) las autocorrelaciones estacionales decrecen muy lentamente, indicando que la serie analizada no es ergódica (ni estacionaria estacionalmente). El panel c) muestra que las autocorrelaciones en la parte regular decrecen lentamente, indicando que la serie analizada no es estacionaria. Solo la doble diferenciación regular y estacional de la serie muestra un rápido descenso en los coeficiente de autocorrelación (panel d), indicando que la serie así transformada es estacionaria en media y ergódica.\n\nggAcf(log(Pernoctaciones), lag = 48, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(log(Pernoctaciones)), lag = 48, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(log(Pernoctaciones), lag = 12), lag = 48, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(diff(log(Pernoctaciones), lag=12)), lag = 48, xlab = \"\", ylab = \"\", main = \"\")\n\n\n\n\n\n\n\n(a) Log serie\n\n\n\n\n\n\n\n(b) Dif. regular log serie\n\n\n\n\n\n\n\n\n\n(c) Dif. estacional log serie\n\n\n\n\n\n\n\n(d) Dif. regular y estacional log serie\n\n\n\n\nFigura 2: FAC para Pernoctaciones\n\n\n\nPor otro lado, la identificación automática de la diferenciación también concluye que es necesaria la doble diferenciación.\n\nndiffs(log(Pernoctaciones))\n\n[1] 1\n\nnsdiffs(log(Pernoctaciones))\n\n[1] 1\n\n\nVamos a asumir que el proceso debe ser doblemente diferenciado \\(\\log(Pernoctaciones) \\sim I(1)I_{12}(1)\\)."
  },
  {
    "objectID": "03-13-Ejemplo7.html#identificación-del-orden-regular-y-estacional",
    "href": "03-13-Ejemplo7.html#identificación-del-orden-regular-y-estacional",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "2.2 Identificación del orden regular y estacional",
    "text": "2.2 Identificación del orden regular y estacional\nVamos a identificar los valores de \\(p\\), \\(q\\), \\(P\\) y \\(Q\\). Para ello solicitaremos con auto.arima y seas una identificación automática.\nCon auto.arima incluiremos dos efectos calendarios, uno para el número de días del mes y otro para el efecto Semana Santa.\n\nDiasMes <- monthdays(Pernoctaciones)\nSemanaSanta <- easter(Pernoctaciones)\n\nauto.arima(Pernoctaciones, \n           d = 1, \n           D = 1,\n           lambda = 0,\n           xreg = cbind(DiasMes, SemanaSanta))\n\nSeries: Pernoctaciones \nRegression with ARIMA(0,1,1)(2,1,2)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sar1     sar2    sma1     sma2  DiasMes  SemanaSanta\n      -0.3207  -0.7187  -0.0442  0.3377  -0.4315   0.0293       0.0426\ns.e.   0.0709   0.1720   0.1677  0.1683   0.1689   0.0077       0.0060\n\nsigma^2 = 0.0008503:  log likelihood = 483.35\nAIC=-950.7   AICc=-950.04   BIC=-923.3\n\n\nLa función auto.arima identifica un proceso \\(ARIMA_{12}(0,1,1)(2,1,2)\\), donde el coeficiente para ar2 no parecen ser significativo (el coeficiente no supera los dos errores estándar).\nLa identificación alcanzada por seas es un proceso \\(ARIMA_{12}(0,1,1)(0,1,1)\\) (modelo de las aerolíneas) de la transformación logarítmica, con intervención en Semana Santa y días laborables. Además, se identifica un cambio de nivel desde marzo de 2005.\n\nsummary(seas(Pernoctaciones))\n\n\nCall:\nseas(x = Pernoctaciones)\n\nCoefficients:\n                    Estimate Std. Error z value             Pr(>|z|)    \nWeekday           -0.0009593  0.0003988  -2.406             0.016143 *  \nEaster[8]          0.0425480  0.0051831   8.209 0.000000000000000223 ***\nLS2005.Mar        -0.0819394  0.0225926  -3.627             0.000287 ***\nMA-Nonseasonal-01  0.2976707  0.0633552   4.698 0.000002621542191344 ***\nMA-Seasonal-12     0.4286878  0.0590994   7.254 0.000000000000405599 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSEATS adj.  ARIMA: (0 1 1)(0 1 1)  Obs.: 240  Transform: log\nAICc:  6634, BIC:  6654  QS (no seasonality in final):    0  \nBox-Ljung (no autocorr.):  38.2 * Shapiro (normality): 0.9964  \nMessages generated by X-13:\nWarnings:\n- At least one visually significant trading day peak has been\n  found in one or more of the estimated spectra.\n\n\nVemos que ambas identificaciones difieren notablemente. Así, vamos a partir de la identificación obtenida por seas, el clásico modelo de las aerolíneas: \\[log(Pernoctaciones) \\sim ARIMA_{12}(0,1,1)(0,1,1)\\].\nRespecto de la intervención, incluiremos días del mes y Semana Santa. No se incluirá el cambio de nivel identificado por seas dado que no existe una justificación para ello. En 2005 no ocurrió nada que justifique una caída permanente del 8.2% en el número de pernoctaciones internacionales (coeficiente -0.0819)."
  },
  {
    "objectID": "03-13-Ejemplo7.html#calidad-de-ajuste",
    "href": "03-13-Ejemplo7.html#calidad-de-ajuste",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "7.1 Calidad de ajuste",
    "text": "7.1 Calidad de ajuste\nLa serie Pernoctaciones la hemos ajustado por el método ingenuo con estacionalidad, el método de Alisado Exponencial y procesos ARIMA. La Tabla 1 recoge el error medio (RMSE) y porcentual (MAPE) al usar estas tres aproximaciones con la serie original y su transformación logarítmica.\n\n\n\n\n\nTabla 1: Criterios de calidad para previsiones intra-muestrales a un periodo vista. Varios modelos\n\n\n\n\n\n\n\n\nSerie\nMétodo\nRMSE\nMAPE\n\n\n\n\nPernoctaciones\nIngenuo\n1243441\n4.60\n\n\nlog(Pernoctaciones)\nIngenuo\n1243441\n4.60\n\n\nPernoctaciones\nAlisado\n727645\n2.61\n\n\nlog(Pernoctaciones)\nAlisado\n738036\n2.62\n\n\nPernoctaciones\nARIMA\n620624\n2.53\n\n\nlog(Pernoctaciones)\nARIMA\n606418\n2.19\n\n\n\n\nPodemos extraer varias conclusiones: i) la transformación logarítmica no mejora necesariamente el ajuste de los datos; ii) el proceso ARIMA con transformación logarítmica es la mejor aproximación; y iii) el método de alisado muestra una calidad de ajuste comparable a la de los procesos ARIMA. La ligera mejora en el ajuste de los modelos ARIMA respecto del método de Alisado se debe a la incorporación de variables ficticias para recoger la intervención."
  },
  {
    "objectID": "03-13-Ejemplo7.html#predicciones-extra-muestrales",
    "href": "03-13-Ejemplo7.html#predicciones-extra-muestrales",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "7.2 Predicciones extra-muestrales",
    "text": "7.2 Predicciones extra-muestrales\nVamos a determinar si también la aplicación de modelos ARIMA mejora la calidad de las predicciones extra-muestrales lo suficiente como para justificar su uso –frente a los métodos de alisado, mucho más sencillos. Para ello, aplicaremos la metodología de origen de predicción móvil para estimar la capacidad predictiva del modelo ARIMA y compararla con el modelo de Alisado y el ingenuo con estacionalidad.\n\nk <- 120                   \nh <- 12                    \nT <- length(Pernoctaciones)     \ns <- T - k - h               \n\nmapeIngenuo <- matrix(NA, s + 1, h)\nmapeAlisado <- matrix(NA, s + 1, h)\nmapeAlisadoLog <- matrix(NA, s + 1, h)\nmapeArima <- matrix(NA, s + 1, h)\nmapeArimaLog <- matrix(NA, s + 1, h)\n\n\nX <- data.frame(cbind(DiasMes, SemanaSanta, d0305, d0406, d0513))\n\nfor (i in 0:s) {\n  train.set <- subset(Pernoctaciones, start = i + 1, end = i + k)\n  test.set <-  subset(Pernoctaciones, start = i + k + 1, end = i + k + h) \n  \n  X.train <- data.frame(X[(i + 1):(i + k),])\n  hay <- colSums(X.train)\n  X.train <- X.train[, hay>0]\n  \n  X.test <- data.frame(X[(i + k + 1):(i + k + h),])\n  X.test <- X.test[, hay>0]\n  \n  #Ingenuo\n  fit <- snaive(train.set, h = h)\n  mapeIngenuo[i + 1,] <- 100*abs(test.set - fit$mean)/test.set\n  \n  #Alisado sin log\n  fit <- ets(train.set, model = \"MNM\")\n  fcast <- forecast(fit, h = h) \n  mapeAlisado[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n  \n  #Alisado con log\n  fit <- ets(train.set, model = \"ANA\", lambda = 0)\n  fcast <- forecast(fit, h = h) \n  mapeAlisadoLog[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n  \n  #ARIMA sin log\n  fit <- try(Arima(train.set, \n                   order = c(0, 1, 1),\n                   seasonal = c(0, 1, 1),\n                   xreg = as.matrix(X.train)), silent = TRUE)\n  \n  if (!is.element(\"try-error\", class(fit))) {\n    fcast <- forecast(fit, h = h, xreg = as.matrix(X.test))\n    mapeArima[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n  }\n  \n  #ARIMA con log\n  fit <- try(Arima(train.set, \n                   order = c(0, 1, 1),\n                   seasonal = c(0, 1, 1),\n                   lambda = 0,\n                   xreg = as.matrix(X.train)), silent = TRUE)\n  \n  if (!is.element(\"try-error\", class(fit))) {\n    fcast <- forecast(fit, h = h, xreg = as.matrix(X.test)) \n    mapeArimaLog[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n  }\n  \n}\n\nmapeIngenuo <- colMeans(mapeIngenuo)\nmapeAlisado <- colMeans(mapeAlisado)\nmapeAlisadoLog <- colMeans(mapeAlisadoLog)\nmapeArima <- colMeans(mapeArima, na.rm = TRUE)\nmapeArimaLog <- colMeans(mapeArimaLog, na.rm = TRUE)\n\n\nggplot() +\n  geom_line(aes(x = 1:12, y = mapeIngenuo, colour = \"Ingenuo\")) +\n  geom_line(aes(x = 1:12, y = mapeAlisado, colour = \"Alisado\")) + \n  geom_line(aes(x = 1:12, y = mapeAlisadoLog, colour = \"Alisado (log)\")) +\n  geom_line(aes(x = 1:12, y = mapeArima, colour = \"Arima\")) +\n  geom_line(aes(x = 1:12, y = mapeArimaLog, colour = \"Arima (log)\")) +\n  ggtitle(\"\") +\n  xlab(\"\") +\n  ylab(\"MAPE\") +\n  scale_x_continuous(breaks= 1:12) +\n  scale_color_discrete(name = \"Modelos\")\n\n\n\n\nFigura 6: Errores de previsión extra-muestral. Varios modelos\n\n\n\n\nLa Figura 6 revela que ARIMA con transformación logarítmica es siempre superior a Alisado en calidad de predicciones.\nTambién se observa que la transformación logarítmica no afecta significativamente la calidad de las predicciones en los modelos de Alisado, pero es muy determinante en los procesos ARIMA.\nComo ya vimos, el error con el método ingenuo parece independiente del horizonte temporal. A corto plazo es la peor aproximación, pero a largo plazo es tan bueno como el resto de métodos."
  },
  {
    "objectID": "03-05-Tema5.html#las-funciones-ets-y-forecast",
    "href": "03-05-Tema5.html#las-funciones-ets-y-forecast",
    "title": "Técnicas de Alisado Exponencial",
    "section": "3.1 Las funciones ets y forecast",
    "text": "3.1 Las funciones ets y forecast\nPodemos estimar cualquiera de los treinta modelos usando la función ets del paquete forecast.\n\nEl tipo de modelo en ets se especifica con el argumento model, un código de tres letras indicando el tipo de Error, Tendencia y eStacionalidad (ETS). Por ejemplo, model = \"ANN\" indica un modelo con error aditivo, sin tendencia ni estacionalidad, es decir, el alisado exponencial simple; model = \"AAN\" indica un modelo con error aditivo, pendiente aditiva, pero sin estacionalidad, el alisado exponencial de Holt. El alisado exponencial de Holt-Winters multiplicativo sería model = \"AAM\".\nSi se desea incluir amortiguamiento, hay que añadir el argumento damped = TRUE.\nPor defecto ets no considera modelos con tendencia multiplicativa (últimas dos líneas de la Tabla 1). Debes fijar el parámetro allow.multiplicative.trend=TRUE para contemplar esta opción.\n\nA diferencia de las funciones vistas en el Tema 3 (naive, meanf, rwf y snaive), la función ets solo estima los modelos, pero no produce predicciones. Para ello habrá que usar la función forecast sobre un modelo estimado con ets. El principal argumento de esta función es h que especifica el horizonte temporal de predicción. También puedes usar level para fijar el nivel de confianza del intervalo de predicción.\nMira la ayuda de R para ver una explicación detallada de los argumentos de estas las funciones ets y forecast."
  },
  {
    "objectID": "03-05-Tema5.html#definición",
    "href": "03-05-Tema5.html#definición",
    "title": "Técnicas de Alisado Exponencial",
    "section": "4.1 Definición",
    "text": "4.1 Definición\nEl alisado exponencial simple es adecuado para una serie estacionaria y sin estacionalidad. Es decir, una serie que se mueve alrededor de un nivel constante.\nLa ecuación de la predicción intra-muestral es \\[\\widehat{y}_{t+1} = \\alpha y_t + \\alpha (1-\\alpha) y_{t-1} + \\alpha (1-\\alpha)^2 y_{t-2} + \\alpha (1-\\alpha)^3 y_{t-3} + \\ldots =  \\alpha y_t + (1-\\alpha)\\widehat{y}_{t},\\] donde \\(0 \\leq \\alpha \\leq 1\\) es el parámetro de suavizado. La primera predicción extra-muestral queda \\[\\widehat{y}_{T+1}=\\alpha y_T + (1-\\alpha)\\widehat{y}_{T}\\] y para las restantes \\[\\widehat{y}_{T+h} = \\widehat{y}_{T+1}.\\]"
  },
  {
    "objectID": "03-05-Tema5.html#formulas-interactivas-de-sus-componentes",
    "href": "03-05-Tema5.html#formulas-interactivas-de-sus-componentes",
    "title": "Técnicas de Alisado Exponencial",
    "section": "4.2 Formulas interactivas de sus componentes",
    "text": "4.2 Formulas interactivas de sus componentes\nEn el alisado exponencial simple solo hay una componente, el nivel \\(l_t\\).\n\nLa ecuación recursiva de suavizado es \\(l_t=\\alpha y_t + (1-\\alpha)l_{t-1}\\)\nLa ecuación de predicción intra-muestral es \\(\\widehat{y}_{t+1} = l_t\\)\nLa ecuación de predicción extra-muestral es \\(\\widehat{y}_{T+h} = \\widehat{y}_{T+1} = l_T\\)\n\nDos estimaciones razonables de \\(l_t\\), el nivel de la serie en el periodo \\(t\\), son el valor observado para la serie en ese periodo \\(y_t\\) y el nivel del periodo previo \\(l_{t-1}\\). La estimación final de \\(l_t\\) es una media ponderada de ambas y esta estimación final es la previsión de la serie para el periodo siguiente."
  },
  {
    "objectID": "03-05-Tema5.html#estimación-de-los-parámetros-del-modelo",
    "href": "03-05-Tema5.html#estimación-de-los-parámetros-del-modelo",
    "title": "Técnicas de Alisado Exponencial",
    "section": "4.3 Estimación de los parámetros del modelo",
    "text": "4.3 Estimación de los parámetros del modelo\nDado el proceso iterativo para el cálculo de \\(l_t\\) se necesita un valor inicial de arranque \\(l_0\\). Cada programa estadístico usa su propio método para obtener \\(l_0\\).\nRespecto de \\(\\alpha\\), usualmente se estima el valor optimo según un criterio de precisión de la predicción. El parámetro \\(\\alpha\\) se puede interpretar como:\n\nSi \\(\\alpha = 1\\) se tiene el método ingenuo I (\\(\\widehat{y}_{t+1}=y_t\\)), óptimo cuando el nivel de la serie varía constantemente en el tiempo.\nSi \\(\\alpha = 0\\) se tiene \\(\\widehat{y}_{t} =l_0\\), óptimo cuando el nivel permanece constante en el tiempo.\n\nEn concreto ets estima por defecto los parámetros \\(\\alpha\\) y \\(l_0\\) maximizando la función de verosimilitud. Esta búsqueda está restringida a \\(0 < \\alpha < 1\\). Es decir el parámetro \\(\\alpha\\) nunca puede ser 0 o 1 y en la práctica sus valores limite son 0.0001 y 0.9999."
  },
  {
    "objectID": "03-05-Tema5.html#ejemplo",
    "href": "03-05-Tema5.html#ejemplo",
    "title": "Técnicas de Alisado Exponencial",
    "section": "4.4 Ejemplo",
    "text": "4.4 Ejemplo\nVamos a usar el método de alisado exponencial simple para predecir la serie Demanda eléctrica semanal desde la primera semana de febrero (semana 6 del año) hasta la última semana de mayo (semana 22 del año), en total 17 semanas. Usaremos para ello la función ets con model = \"ANN.\n\nelectricidad <- read.csv2(\"./series/Consumo electrico.csv\", header = TRUE)\nelectricidad <- ts(electricidad[, 2],\n                   start = c(1, 5),\n                   frequency = 7)\n\n#Nos quedamos con los meses de febrero a mayo.\nelectricidad <- window(electricidad, start = c(6, 1), end = c(22, 7)) \n#Creamos la serie de consumo semanal\nelectricidadSemanal <- aggregate(electricidad, FUN = sum) \n\nelectricidadEts <- ets(electricidadSemanal, \n                       model = \"ANN\")\nsummary(electricidadEts)\n\nETS(A,N,N) \n\nCall:\n ets(y = electricidadSemanal, model = \"ANN\") \n\n  Smoothing parameters:\n    alpha = 0.5839 \n\n  Initial states:\n    l = 5034.1607 \n\n  sigma:  158.4303\n\n     AIC     AICc      BIC \n224.2576 226.1037 226.7572 \n\nTraining set error measures:\n                    ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -40.34035 148.8194 82.91992 -0.9090506 1.789911 0.8506723\n                   ACF1\nTraining set 0.01332464\n\n\nVeamos la salida en detalle:\n\nEl valor de \\(\\alpha\\) que optimiza el criterio usado para medir la calidad del ajuste es \\(\\alpha =\\) 0.58, un valor intermedio, ni cercano a 0 ni cercano a 1. Es decir, la serie Demanda eléctrica cambia de nivel poco a poco.\nEl valor de arranque \\(l_0\\) óptimo es 5034.16.\nsigma es la desviación típica del error (aditivo) de predicción. Se diferencia de RMSE en el denominador. Para calcular sigma en lugar de dividir por \\(T\\) se divide por \\(T\\) menos el número de parámetros estimados, en este caso 3: \\(l_0\\), \\(\\alpha\\) y sigma. Sí, sigma, se considerará siempre otro parámetro estimado.\nLa calidad del ajuste es bueno, como evidencia el error porcentual medio del 1.8%.\n\nEn el objeto electricidadEts la matriz electricidadEts$states guarda todos los valores del nivel obtenidos con la ecuación recursiva, incluidos el valor de arranque, así que es una matriz con \\(T+1\\) filas (18 en el ejemplo). Puedes ver el valor de \\(l_{22}\\) de la última semana de mayo de 2021 (semana 22 del año) en su última fila, que vale 4633.76.\n\ntail(electricidadEts$states, 1)\n\nTime Series:\nStart = 22 \nEnd = 22 \nFrequency = 1 \n            l\n[1,] 4633.761\n\n\nAsí, la predicción para la primera semana de junio es \\(\\widehat{y}_{23}=l_{22}=\\) 4633.76. Igualmente \\(\\widehat{y}_{24}=l_{22}=\\) 4633.76. Es decir, todas las previsiones son iguales a \\(l_{22}\\).\nMediante la función forecast podemos predecir los casos de Demanda eléctrica para las próximas 5 semanas. Por tratarse de un modelo sin pendiente ni estacionalidad, la predicción es constante en el tiempo. Recuerda que \\(\\widehat{y}_{T+h} = l_T\\).\n\nelectricidadf <- forecast(electricidadEts,\n                          h = 5, \n                          level = 95)\nelectricidadf\n\n   Point Forecast    Lo 95    Hi 95\n23       4633.761 4323.243 4944.279\n24       4633.761 4274.192 4993.330\n25       4633.761 4231.072 5036.450\n26       4633.761 4192.142 5075.380\n27       4633.761 4156.376 5111.146\n\n\nLa Figura 1 muestra la serie Demanda eléctrica, las previsiones extra-muestrales que son constantes y el intervalo de confianza. Conforme aumentamos el horizonte de predicción, el intervalo de confianza es más amplio como reflejo de la mayor incertidumbre en la predicción.\n\nautoplot(electricidadf,\n         xlab = \"\",\n         ylab = \"GWh\",\n         main = \"\")\n\n\n\n\nFigura 1: Consumo semanal de electricidad (febrero a mayo 2021) y predicción con alisado simple"
  },
  {
    "objectID": "03-05-Tema5.html#formulas-interactivas-de-sus-componentes-1",
    "href": "03-05-Tema5.html#formulas-interactivas-de-sus-componentes-1",
    "title": "Técnicas de Alisado Exponencial",
    "section": "5.1 Formulas interactivas de sus componentes",
    "text": "5.1 Formulas interactivas de sus componentes\nLas ecuaciones recursivas son\n\\[\\begin{aligned}\nl_t & =\\alpha y_t + (1-\\alpha)(l_{t-1}+b_{t-1}) \\\\\nb_t & =\\beta (l_t - l_{t-1}) + (1-\\beta)b_{t-1}\n\\end{aligned}\\]\nLa ecuación de la predicción intra-muestral a un periodo vista es \\[\\widehat{y}_{t+1} = l_t + b_t,\\] de forma que la ecuación de predicción extra-muestral es \\[\\widehat{y}_{T+h}=l_T + h b_T.\\]\nDos estimaciones razonables del nivel de la serie en el periodo \\(t\\) son el valor observado para la serie en ese periodo \\(y_t\\), y una estimación del nivel del periodo \\(t\\) realizada desde el periodo \\(t-1\\): \\(l_{t-1} + b_{t-1}\\). Por otro lado, dos estimaciones razonables de la pendiente de la serie en el periodo \\(t\\) son el cambio de nivel de \\(t-1\\) a \\(t\\) (el último observado) \\(l_t-l_{t-1}\\), y el valor de la pendiente en el periodo previo, \\(b_{t-1}\\). En ambos casos, nivel y pendiente, la estimación final es una media ponderada, parametrizada por \\(0 \\leq \\alpha, \\: \\beta \\leq 1\\).\nObserva que el método ingenuo II es un caso concreto de Alisado de Holt. Si hacemos \\(\\alpha=\\beta = 1,\\) queda \\(l_t=y_t\\) y \\(b_t=y_t-y_{t-1}\\), por tanto \\[\\widehat{y}_{t+1}=l_t + b_t = y_t + (y_t - y_{t-1}).\\] y \\[\\widehat{y}_{T+h}=l_T + h \\cdot b_T = y_T + h(y_T - y_{T-1}).\\]"
  },
  {
    "objectID": "03-05-Tema5.html#estimación-de-los-parámetros-del-modelo-1",
    "href": "03-05-Tema5.html#estimación-de-los-parámetros-del-modelo-1",
    "title": "Técnicas de Alisado Exponencial",
    "section": "5.2 Estimación de los parámetros del modelo",
    "text": "5.2 Estimación de los parámetros del modelo\nPara aplicar este método es necesario estimar unos valores iniciales \\(l_0\\) y \\(b_0\\) de las ecuaciones recursivas e identificar los valores más adecuados de los parámetros \\(\\alpha\\) y \\(\\beta\\).\nLa función ets estima por defecto los parámetros \\(\\alpha\\), \\(\\beta\\), \\(l_0\\) y \\(b_0\\) maximizando la función de verosimilitud. En este caso la búsqueda está restringida a \\(0 < \\beta < \\alpha < 1\\). Por tanto, \\(\\alpha\\) y \\(\\beta\\) nunca pueden ser 0 o 1 y en la práctica sus valores limite son 0.0001 y 0.9999.\nLa interpretación del parámetro \\(\\alpha\\) es similar al caso del alisado exponencial simple.\nInterpretación del parámetro \\(\\beta\\):\n\nSi \\(\\beta = 1\\), \\(b_t = l_t - l_{t-1}\\), la pendiente se actualiza constantemente porque varía periodo a periodo Puede ser un indicador de mal ajuste (tendencia no lineal o pendiente no aditiva).\nSi \\(\\beta = 0\\), \\(b_t = b_{t-1}= \\ldots = b_0\\), la pendiente se mantiene constante en el tiempo."
  },
  {
    "objectID": "03-05-Tema5.html#ejemplo-1",
    "href": "03-05-Tema5.html#ejemplo-1",
    "title": "Técnicas de Alisado Exponencial",
    "section": "5.3 Ejemplo",
    "text": "5.3 Ejemplo\nVamos a usar el método de alisado de Holt para predecir la serie Libros. Usaremos para ello la función ets con los argumentos model = \"AAN\" y damped = FALSE. El segundo argumento previene el uso de tendencia amortiguada que veremos en el siguiente epígrafe.\n\nlibros <- read.csv2(\"./series/libros.csv\", header = TRUE)\nlibros <- ts(libros[, 2], \n             start = 1993, \n             frequency  = 1)\n\nlibrosEts <- ets(libros, \n                 model = \"AAN\",\n                 damped = FALSE)\nsummary(librosEts)\n\nETS(A,A,N) \n\nCall:\n ets(y = libros, model = \"AAN\", damped = FALSE) \n\n  Smoothing parameters:\n    alpha = 0.9461 \n    beta  = 0.0001 \n\n  Initial states:\n    l = 43015.3558 \n    b = 866.6661 \n\n  sigma:  6235.705\n\n     AIC     AICc      BIC \n566.5129 569.3700 572.9921 \n\nTraining set error measures:\n                    ME     RMSE     MAE        MPE    MAPE      MASE\nTraining set -91.75606 5755.295 4179.61 -0.3817069 6.68946 0.9237963\n                    ACF1\nTraining set 0.004201274\n\n\nLos valores óptimos de los cuatro parámetros son \\(\\alpha=\\) 0.95, \\(\\beta=\\) 0, \\(l_0 =\\) 43015.36 y \\(b_0 =\\) 866.67. Observa que \\(\\alpha\\) es prácticamente 1 y que \\(\\beta\\) es cero. Si aplicamos estos valores de los parámetros a las ecuaciones recursivas y la predicción extra-muestral, obtenemos \\(y_{T+h}=y_T + hb_0\\): la predicción es el último valor observado más \\(h\\) veces la primera pendiente estimada. La calidad de las predicciones es razonable, con un error porcentual medio del 6.7%.\n\n\n\n\n\n\nParámetros estimados\n\n\n\n¿Cuántos parámetros se han estimado (y la respuesta no es 4)? ¿Cuál es el denominador en el cálculo de RMSE y de sigma?\n\n\nEn el objeto librosEts la matriz librosEts$states guarda todos los valores obtenidos con las ecuaciones recursivas, en este caso el nivel y la pendiente, incluidos los valores de arranque. Puedes ver los valores de \\(l_{2019}\\) y \\(b_{2019}\\) en su última fila, que valen respectivamente 64091.02, 866.42.\n\ntail(librosEts$states, 1)\n\nTime Series:\nStart = 2019 \nEnd = 2019 \nFrequency = 1 \n            l        b\n2019 64091.02 866.4181\n\n\nAsí, la predicción para \\(2020\\) es \\(\\widehat{y}_{2020}=l_{2019} + b_{2019}=\\) 64091.02 \\(+\\) 866.42 \\(=\\) 64957.43. Igualmente \\(\\widehat{y}_{2021}=l_{2019} + 2\\cdot b_{2019}=\\) 65823.85. Es decir, el incremento entre previsiones es constante e igual a \\(b_{2019}\\) que, por ser \\(\\beta\\) prácticamente nulo, coincide con \\(b_0\\).\n\nlibrosf <- forecast(librosEts,\n                    h = 5, \n                    level = 95)\nlibrosf\n\n     Point Forecast    Lo 95    Hi 95\n2020       64957.43 52735.68 77179.19\n2021       65823.85 48998.58 82649.13\n2022       66690.27 46273.69 87106.85\n2023       67556.69 44091.57 91021.81\n2024       68423.11 42261.77 94584.44\n\n\nLa Figura 2 muestra la serie Libros y las previsiones extra-muestrales que muestran una ligera tendencia creciente.\n\nautoplot(librosf,\n         xlab = \"\",\n         ylab = \"Títulos\",\n         main = \"\")\n\n\n\n\nFigura 2: Libros y predicción con alisado de Holt"
  },
  {
    "objectID": "03-05-Tema5.html#formulas-interactivas-de-sus-componentes-2",
    "href": "03-05-Tema5.html#formulas-interactivas-de-sus-componentes-2",
    "title": "Técnicas de Alisado Exponencial",
    "section": "6.1 Formulas interactivas de sus componentes",
    "text": "6.1 Formulas interactivas de sus componentes\nLas ecuaciones recursivas son \\[\n\\begin{aligned}\nl_t & =\\alpha y_t + (1-\\alpha)(l_{t-1}+\\phi b_{t-1}) \\\\\nb_t & =\\beta (l_t - l_{t-1}) + (1-\\beta)\\phi b_{t-1}\n\\end{aligned}\n\\]\nLa ecuación de la predicción intra-muestral a un periodo vista es \\[\\widehat{y}_{t+1} = l_t + \\phi b_t,\\] de forma que la ecuación de predicción extra-muestral es \\[\\widehat{y}_{T+h}=l_T + (\\phi + \\phi^2 + \\ldots + \\phi^h) b_T.\\]\nComo observas, se ha añadido un nuevo parámetro \\(\\phi\\), que acompaña siempre a la pendiente $b_t. $Si \\(\\phi = 1\\), se tiene el alisado de Holt y si \\(\\phi = 0\\), se tiene el alisado simple. Para valores entre \\(0\\) y \\(1\\) en el corto plazo las predicciones tienen pendiente y en el largo plazo se hacen constantes e iguales a \\(l_T + \\phi b_T/(1 - \\phi)\\).\nPor razones prácticas el rango de búsqueda de \\(\\phi\\) queda en el intervalo \\([0.8, 0.98]\\). Si el valor óptimo de \\(\\phi\\) fuera su valor máximo de \\(0.98\\) o muy cercano a este valor, cabría plantearse si no sería más adecuado un modelo sin amortiguamiento."
  },
  {
    "objectID": "03-05-Tema5.html#ejemplo-2",
    "href": "03-05-Tema5.html#ejemplo-2",
    "title": "Técnicas de Alisado Exponencial",
    "section": "6.2 Ejemplo",
    "text": "6.2 Ejemplo\nVamos a usar el método de alisado con amortiguamiento para predecir, una vez más, la serie Libros añadiendo a la función ets el argumento damped = TRUE. En este caso, para ver el efecto del amortiguamiento vamos a pedir un horizonte temporal más largo.\n\nlibrosEtsD <- ets(libros, \n                  model = \"AAN\", \n                  damped = TRUE)\nsummary(librosEtsD)\n\nETS(A,Ad,N) \n\nCall:\n ets(y = libros, model = \"AAN\", damped = TRUE) \n\n  Smoothing parameters:\n    alpha = 0.8971 \n    beta  = 0.0001 \n    phi   = 0.9083 \n\n  Initial states:\n    l = 41396.6242 \n    b = 2881.012 \n\n  sigma:  6239.024\n\n     AIC     AICc      BIC \n567.3414 571.5414 575.1164 \n\nTraining set error measures:\n                    ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -159.4816 5631.786 3984.248 -0.6273468 6.314471 0.8806165\n                   ACF1\nTraining set 0.01091024\n\n\nEl valor óptimo del parámetro \\(\\phi\\) es \\(0.91\\) y el error porcentual 6.3%, algo inferior al obtenido con el alisado de Holt sin amortiguamiento. La inclusión de un nuevo parámetro en el modelo mejora el ajuste.\n\n\n\n\n\n\nParámetros estimados\n\n\n\n¿Cuántos parámetros se han estimado en este caso? ¿Cuáles?\n\n\nLa Figura 3 muestra la serie Libros, su estimación (intra-muestral) y las predicciones a 15 años vista. Observa que la pendiente de las previsiones se amortigua en el tiempo, de forma que al principio las previsiones crecen más rápidamente que en los últimos años.\n\nlibrosfD <- forecast(librosEtsD, h = 15)\nlibrosfD\n\n     Point Forecast    Lo 80    Hi 80    Lo 95     Hi 95\n2020       64148.96 56153.33 72144.59 51920.70  76377.22\n2021       64325.91 53583.64 75068.19 47897.02  80754.81\n2022       64486.65 51568.74 77404.55 44730.42  84242.88\n2023       64632.65 49855.75 79409.55 42033.33  87231.96\n2024       64765.27 48338.19 81192.34 39642.22  89888.32\n2025       64885.73 46959.54 82811.92 37469.99  92301.47\n2026       64995.15 45685.72 84304.58 35463.92  94526.37\n2027       65094.54 44494.40 85694.68 33589.35  96599.73\n2028       65184.82 43370.08 86999.55 31822.06  98547.58\n2029       65266.82 42301.54 88232.11 30144.45 100389.20\n2030       65341.31 41280.33 89402.29 28543.22 102139.40\n2031       65408.97 40299.99 90517.95 27008.10 103809.84\n2032       65470.43 39355.40 91585.46 25530.94 105409.92\n2033       65526.26 38442.47 92610.05 24105.17 106947.34\n2034       65576.97 37557.83 93596.10 22725.40 108428.54\n\nautoplot(librosfD,\n         xlab = \"\",\n         ylab = \"Títulos\",\n         main = \"\",\n         PI = FALSE)\n\n\n\n\nFigura 3: Libros y predicción con alisado exponencial con amortiguamiento"
  },
  {
    "objectID": "03-05-Tema5.html#alisado-de-holt-winters-aditivo-a-a-a",
    "href": "03-05-Tema5.html#alisado-de-holt-winters-aditivo-a-a-a",
    "title": "Técnicas de Alisado Exponencial",
    "section": "7.1 Alisado de Holt-Winters aditivo (A, A, A)",
    "text": "7.1 Alisado de Holt-Winters aditivo (A, A, A)\nLas ecuaciones recursivas de actualización son: $$\n\\[\\begin{aligned}\nl_t & =\\alpha (y_t - s_{t-m} ) + (1-\\alpha)(l_{t-1}+b_{t-1}) \\\\\nb_t & =\\beta (l_t - l_{t-1}) + (1-\\beta)b_{t-1} \\\\\ns_t & =\\gamma (y_t - l_{t-1} - b_{t-1}) + (1 - \\gamma)s_{t-m}\n\\end{aligned}\\]\n$$ con \\(0 \\leq \\alpha, \\beta, \\gamma \\leq 1\\).\nLa ecuación de la predicción intra-muestral a un periodo vista es \\[\\widehat{y}_{t+1}  = l_t + b_t + s_{t+1-m},\\] de forma que la ecuación de predicción extra-muestral es: \\[\\widehat{y}_{T+h}=l_T + h b_T + s_{T+h - m(k+1)},\\] con \\(k = \\lfloor(h-1)/m\\rfloor\\)."
  },
  {
    "objectID": "03-05-Tema5.html#alisado-de-holt-winters-multiplicativo-m-a-m",
    "href": "03-05-Tema5.html#alisado-de-holt-winters-multiplicativo-m-a-m",
    "title": "Técnicas de Alisado Exponencial",
    "section": "7.2 Alisado de Holt-Winters multiplicativo (M, A, M)",
    "text": "7.2 Alisado de Holt-Winters multiplicativo (M, A, M)\nLas ecuaciones recursivas de actualización son: \\[\n\\begin{aligned}\nl_t & =\\alpha \\frac{y_t}{s_{t-m}} + (1-\\alpha)(l_{t-1}+b_{t-1}) \\\\\nb_t & =\\beta (l_t - l_{t-1}) + (1-\\beta)b_{t-1} \\\\\ns_t & =\\gamma \\frac{y_t}{l_{t-1} + b_{t-1}} + (1 - \\gamma)s_{t-m}\n\\end{aligned}\n\\]\nLa ecuación de la predicción intra-muestral a un periodo vista es \\[\\widehat{y}_{t+1}  = (l_t + b_t)s_{t+1-m},\\] de forma que la ecuación de predicción extra-muestral es: \\[\\widehat{y}_{T+h}=(l_T + h b_T)s_{T+h - m(k+1)}.\\]"
  },
  {
    "objectID": "03-05-Tema5.html#ejemplo-con-demanda-electrica",
    "href": "03-05-Tema5.html#ejemplo-con-demanda-electrica",
    "title": "Técnicas de Alisado Exponencial",
    "section": "7.3 Ejemplo con Demanda electrica",
    "text": "7.3 Ejemplo con Demanda electrica\nVamos a usar el método de Holt-Winters Aditivo para predecir la serie Demanda eléctrica, que presentaba un esquema aditivo. Para ello usaremos la función ets con el argumento model = \"AAA\" (y damped = FALSE). Vamos a considerar la serie desde el 1 de febrero (lunes) hasta el 30 de mayo (domingo), 17 semanas, y pedir una previsión a dos semanas vista.\nEn el proceso de estimación, el parámetro \\(\\gamma\\) que gobierna la componente estacional está restringido a \\(0 < \\gamma < 1 - \\alpha\\).\n\nelectricidad <- read.csv2(\"./series/Consumo electrico.csv\", header = TRUE)\nelectricidad <- ts(electricidad[, 2],\n                   start = c(1, 5),\n                   frequency = 7)\n#Nos quedamos con los meses de febrero a mayo.\nelectricidad <- window(electricidad, start = c(6, 1), end = c(22, 7)) \n\nelectricidadEts <- ets(electricidad, \n                       model = \"AAA\", \n                       damped = FALSE)\nsummary(electricidadEts)\n\nETS(A,A,A) \n\nCall:\n ets(y = electricidad, model = \"AAA\", damped = FALSE) \n\n  Smoothing parameters:\n    alpha = 0.8355 \n    beta  = 0.0001 \n    gamma = 0.0001 \n\n  Initial states:\n    l = 741.55 \n    b = 0.0601 \n    s = -88.686 -47.5536 19.731 30.4514 35.9361 36.6726\n           13.4485\n\n  sigma:  17.5704\n\n     AIC     AICc      BIC \n1263.333 1266.276 1296.682 \n\nTraining set error measures:\n                     ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -0.7940567 16.73864 10.45847 -0.1438659 1.587029 0.5252875\n                   ACF1\nTraining set 0.03820125\n\n\nLos valores óptimos de los parámetros son \\(\\alpha=\\) 0.84, \\(\\beta=\\) 0 y \\(\\gamma=\\) 0. Los valores nulos para \\(\\beta\\) y \\(\\gamma\\) indican que ambas, la pendiente y la estacionalidad, permanecen constantes en el tiempo. La calidad de las predicciones es notable, con un error porcentual medio del 1.6%.\nLos últimos valores de las componentes son\n\nTT <- nrow(electricidadEts$states)\nelectricidadEts$states[TT,]\n\n\n\n      l       b      s1      s2      s3      s4      s5      s6      s7 \n668.923   0.051 -88.685 -47.554  19.729  30.452  35.934  36.667  13.448 \n\n\nComo el último dato de la serie es domingo 30 de mayo, los valores del nivel \\(l\\) y la pendiente \\(b\\) mostrados corresponden a ese día. Sin embargo, la componente estacional tiene un orden muy peculiar: s1 es el valor estacional para domingo (día del último dato), s2 el de sábado, s3 de viernes, hasta s7 que sería lunes. Podemos reproducir las predicciones para los próximos 7 días, 31 de mayo a 6 de junio (ojo, el etiquetado de la salida no es correcto):\n\nelectricidadEts$states[TT, 1] + (1:7)*electricidadEts$states[TT, 2] + \n  electricidadEts$states[TT, 9:3]\n\n      s7       s6       s5       s4       s3       s2       s1 \n682.4217 705.6918 705.0094 699.5780 688.9063 621.6741 580.5928 \n\n\nO mejor usar la función forecast para obtener las predicciones y sus intervalos a dos semanas vista.\n\nelectricidadf <- forecast(electricidadEts,\n                          h = 14, \n                          level = 95)\nelectricidadf\n\n         Point Forecast    Lo 95    Hi 95\n23.00000       682.4217 647.9844 716.8591\n23.14286       705.6918 660.8134 750.5702\n23.28571       705.0094 651.6952 758.3236\n23.42857       699.5780 638.9897 760.1663\n23.57143       688.9063 621.8267 755.9859\n23.71429       621.6741 548.6768 694.6714\n23.85714       580.5928 502.1216 659.0640\n24.00000       682.7765 599.1867 766.3664\n24.14286       706.0466 617.6340 794.4592\n24.28571       705.3642 612.3776 798.3508\n24.42857       699.9328 602.5858 797.2798\n24.57143       689.2611 587.7399 790.7823\n24.71429       622.0289 516.4975 727.5603\n24.85714       580.9476 471.5520 690.3432\n\n\nLa Figura 4 muestra la serie Demanda eléctrica y las previsiones extra-muestrales.\n\nautoplot(electricidadf,\n         xlab = \"\",\n         ylab = \"GWh\",\n         main = \"\",\n         PI = FALSE)\n\n\n\n\nFigura 4: Demanda eléctrica y predicción con alisado de Holt-Winters aditivo"
  },
  {
    "objectID": "03-05-Tema5.html#ejemplo-con-nacimientos",
    "href": "03-05-Tema5.html#ejemplo-con-nacimientos",
    "title": "Técnicas de Alisado Exponencial",
    "section": "7.4 Ejemplo con Nacimientos",
    "text": "7.4 Ejemplo con Nacimientos\nVamos a usar el método de Holt-Winters multiplicativo para predecir la serie Nacimientos, que presentaba un esquema multiplicativo. En este caso usaremos el argumento model = \"MAM\" 1. Vamos a considerar la serie Nacimientos desde enero de 2000 y pedir una previsión a dos años vista.\n\nnacimientos <- read.csv2(\"./series/nacimientos.csv\", header = TRUE)\nnacimientos <- ts(nacimientos[, 2],\n                  start = c(1975, 1),\n                  frequency = 12)\n\nnacimientosb <- window(nacimientos, start = 2000)\nnacimientosbEts <- ets(nacimientosb, \n                       model = \"MAM\", \n                       damped = FALSE)\nsummary(nacimientosbEts)\n\nETS(M,A,M) \n\nCall:\n ets(y = nacimientosb, model = \"MAM\", damped = FALSE) \n\n  Smoothing parameters:\n    alpha = 0.3187 \n    beta  = 0.0541 \n    gamma = 0.1828 \n\n  Initial states:\n    l = 33016.8308 \n    b = 134.4179 \n    s = 0.9976 0.9806 1.0479 1.0246 1.0248 1.0326\n           0.9789 1.0242 0.9739 1.0001 0.919 0.996\n\n  sigma:  0.0236\n\n     AIC     AICc      BIC \n4575.865 4578.621 4635.035 \n\nTraining set error measures:\n                    ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -13.31703 860.7476 675.2864 -0.0726126 1.823373 0.4868175\n                  ACF1\nTraining set 0.0980623\n\n\nL os valores óptimos de los parámetros son \\(\\alpha=\\) 0.32, \\(\\beta=\\) 0.05 y \\(\\gamma=\\) 0.18. Los valores tan bajos para \\(\\beta\\) y \\(\\gamma\\) indican que ambas, la pendiente y la estacionalidad, modifican su valor muy lentamente. La calidad de las predicciones es notable, con un error porcentual medio del 1.8%.\nLos últimos valores de las componentes son\n\nTT <- nrow(nacimientosbEts$states)\nnacimientosbEts$states[TT,]\n\n\n\n        l         b        s1        s2        s3        s4        s5        s6 \n29462.334   -77.537     0.995     1.000     1.066     1.042     1.046     1.049 \n       s7        s8        s9       s10       s11       s12 \n    0.978     0.999     0.949     0.980     0.896     0.994 \n\n\nComo el último dato de la serie es diciembre de 2019, los valores del nivel \\(l\\) y la pendiente \\(b\\) mostrados corresponden a ese mes. Sin embargo, recuerda que la componente estacional sigue un orden inverso: s1 es el valor estacional para diciembre (mes del último dato), s2 el de noviembre, s3 de octubre, hasta s11 que sería febrero y s12 que es enero.\nPodemos reproducir las predicciones para los primeros 12 meses de enero a diciembre (ojo, el etiquetado de la salida no es correcto) para ver que coinciden con las obtenidas con la función forecast.\n\n(nacimientosbEts$states[TT, 1] + (1:12)*nacimientosbEts$states[TT, 2]) * \n  nacimientosbEts$states[TT, 14:3]\n\n     s12      s11      s10       s9       s8       s7       s6       s5 \n29208.44 26261.08 28659.28 27669.53 29035.26 28350.73 30332.66 30170.34 \n      s4       s3       s2       s1 \n29982.89 30583.87 28610.96 28402.26 \n\n\n\nnacimientosbf <- forecast(nacimientosbEts,\n                          h = 24, \n                          level = 95)\nnacimientosbf\n\n         Point Forecast    Lo 95    Hi 95\nJan 2020       29208.44 27858.19 30558.69\nFeb 2020       26261.08 24965.01 27557.14\nMar 2020       28659.28 27134.81 30183.74\nApr 2020       27669.53 26072.36 29266.71\nMay 2020       29035.26 27208.76 30861.76\nJun 2020       28350.73 26403.10 30298.36\nJul 2020       30332.66 28056.12 32609.20\nAug 2020       30170.34 27698.52 32642.16\nSep 2020       29982.89 27305.72 32660.06\nOct 2020       30583.87 27614.07 33553.67\nNov 2020       28610.96 25597.03 31624.89\nDec 2020       28402.26 25164.92 31639.60\nJan 2021       28286.46 24710.45 31862.47\nFeb 2021       25429.93 21982.37 28877.49\nMar 2021       27749.82 23723.48 31776.16\nApr 2021       26789.14 22637.45 30940.82\nMay 2021       28108.94 23465.20 32752.67\nJun 2021       27443.82 22620.07 32267.58\nJul 2021       29359.74 23879.54 34839.95\nAug 2021       29200.02 23422.41 34977.63\nSep 2021       29015.99 22940.65 35091.33\nOct 2021       29594.92 23048.56 36141.28\nNov 2021       27683.28 21224.32 34142.25\nDec 2021       27478.84 20726.54 34231.15\n\n\nLa Figura 5 muestra la serie Nacimientos y las previsiones extra-muestrales.\n\nautoplot(nacimientosbf,\n         xlab = \"\",\n         ylab = \"Nacimientos\",\n         main = \"\",\n         PI = FALSE)\n\n\n\n\nFigura 5: Nacimientos y predicción con alisado de Holt-Winters multiplicativo"
  },
  {
    "objectID": "03-05-Tema5.html#criterios-de-optimización",
    "href": "03-05-Tema5.html#criterios-de-optimización",
    "title": "Técnicas de Alisado Exponencial",
    "section": "9.1 Criterios de optimización",
    "text": "9.1 Criterios de optimización\nFijado un modelo, ets estima por defecto sus parámetros maximizando la función de verosimilitud. Esta búsqueda esta restringida a \\(0 < \\beta < \\alpha < 1\\), \\(0 < \\gamma < 1 - \\alpha\\) y \\(0.8 < \\phi < 0.98\\). Es decir, los tres primeros parámetros nunca pueden ser 0 o 1, y en la práctica sus valores límite son 0.0001 y 0.9999.\nPuedes cambiar el criterio de optimización con el argumento opt.crit. Por defecto vale “lik” (de likelihood o verosimilitud), pero si lo fijas a opt.crit = \"mse\" se estiman los parámetros que minimizan el error cuadrático medio. Otra opción interesante es opt.crit = \"amse\" que minimiza la media de los errores cuadráticos medios obtenido sobre las previsiones hasta nmse periodos vista. En este caso usa el argumento nmse para fijar el valor numérico del horizonte temporal."
  },
  {
    "objectID": "03-05-Tema5.html#criterios-de-selección-de-modelos",
    "href": "03-05-Tema5.html#criterios-de-selección-de-modelos",
    "title": "Técnicas de Alisado Exponencial",
    "section": "9.2 Criterios de selección de modelos",
    "text": "9.2 Criterios de selección de modelos\nQueda pendiente saber que criterio se usa para seleccionar el modelo cuando se ofrece esta opción. Esto se hace a partir de un criterio de información entre Akaike (aic), Akaike corregido para pequeñas muestras (aicc) y el Bayesiano (bic). Sus fórmulas son: \\[aic = -2log(L) + 2k\\] \\[aicc = aic + \\frac{k(k+1)}{T-k-1}\\] \\[bic=aic + k(log(T) - 2)\\] donde \\(L\\) es la verosimilitud, \\(T\\) el número de datos y \\(k\\) el de parámetros estimados (incluidos los puntos iniciales de arranque y la desviación típica del error).\nCuanto menor es el criterio de información, mejor modelo. Por defecto se usa Akaike corregido para pequeñas muestras (aicc), pero el argumento ic permite cambiar de criterio.\n\n\n\n\n\n\nUna reflexión sobre los métodos automáticos de selección de modelos\n\n\n\n\n\nCon el comando forecast(ets(nacimientos), h = 24) obtenemos una predicción mensual a dos años vista del número de nacimientos en España. Así de simple, solo 31 caracteres. Todo esto gracias a que un algoritmo interno ha estimado los parámetros de múltiples modelos, elegido el mejor modelo de todos y lo ha usado para obtener las predicciones. Podemos afirmar que tenemos las mejores predicciones. Un momento, ¿podemos?\nParémonos a reflexionar sobre lo que hemos hecho o, más bien, lo que el algoritmo ha hecho y a contrastarlo con lo que nosotros queríamos. Por un lado, el algoritmo estima los parámetros de un menú fijo de modelos y para ello usa un criterio de optimización, que por defecto es maximizar la función de verosimilitud; cuando ya tiene estimados todos los modelos, elije el mejor usando el criterio de información de Akaike corregido para muestras pequeñas; y finalmente, nosotros medimos la capacidad predictiva del modelo seleccionado usando el error absoluto porcentual medio. Vaya, resulta que en los procesos de identificación y estimación del mejor modelo se usan dos criterios diferentes, que además no coinciden con nuestro criterio de calidad de las predicciones.\nSi consideramos que la calidad de un modelo viene dada por el error absoluto porcentual medio en las predicciones intra-muestrales a un periodo vista (lo que hemos decidido llamar MAPE), ¿no deberíamos estimar los parámetros del modelo usando como criterio la minimización del MAPE?, ¿no deberíamos elegir entre varios modelos aquel que presenta un MAPE menor? De esta forma, en todos los pasos del proceso se usa el mismo criterio, que es, además, el criterio que hemos considerado adecuado para valorar la calidad de las predicciones.\nPero no es esto lo que hacemos.\nNada nos garantiza que el modelo estimado y seleccionado por el algoritmo estime las mejores predicciones posibles. Y por mejores quiero decir que de entre todos los posibles modelos del menú y todos los posibles valores de sus parámetros, el seleccionado sea que el minimiza nuestro criterio de calidad de las predicciones.\nAhora ya podemos dar respuesta a la pregunta del primer párrafo: no, no podemos afirmar que nuestras predicciones sean las mejores.\nAlguien dirá que casi seguro entre las predicciones subóptimas obtenidas por el algoritmo con su extraña mezcla de criterios y las predicciones óptimas de verdad no habrá mucha diferencia. Total, que más da una función de verosimilitud que un criterio de información que una medida del error medio. Pero lo cierto es que no lo sabemos, no tenemos ni idea de la distancia que hay entre lo óptimo y lo sub-óptimo, y si el coste de equivocarme en las predicciones es alto, puede que incluso una pequeña diferencia sea relevante.\nEsta reflexión realizada en el contexto de series temporales y para la función ets es aplicable a todos los casos donde dejamos que un algoritmo ya programado elija el mejor modelo, y se basa en el hecho de que rara vez los criterios de estimación y elección que usan los algoritmos coinciden con el concepto de calidad de ajuste que estamos interesados\nA pesar de lo aquí expuesto, como es más cómodo (y rápido) tirar de rutinas ya programadas que escribir tu propio código, seguiremos trabajando con modelos sub-óptimos y obteniendo estimaciones sub-óptimas, pero diciendo que son las mejores."
  },
  {
    "objectID": "03-05-Tema5.html#libros",
    "href": "03-05-Tema5.html#libros",
    "title": "Técnicas de Alisado Exponencial",
    "section": "11.1 Libros",
    "text": "11.1 Libros\n\nIdentificación y estimación del mejor modelo\nSi estimamos el mejor modelo de alisado exponencial para la serie Libros sin ningún tipo de restricción, nos encontramos:\n\nlibrosEts <- ets(libros)\nsummary(librosEts) \n\nETS(M,N,N) \n\nCall:\n ets(y = libros) \n\n  Smoothing parameters:\n    alpha = 0.9999 \n\n  Initial states:\n    l = 40459.0122 \n\n  sigma:  0.0902\n\n     AIC     AICc      BIC \n557.0738 558.1173 560.9613 \n\nTraining set error measures:\n                   ME     RMSE      MAE      MPE     MAPE      MASE        ACF1\nTraining set 877.6729 5798.394 4367.896 1.318359 6.900756 0.9654123 -0.03788908\n\n\nEl modelo estimado es ETS(M,N,N) o “MNN”, un modelo sin pendiente ni estacionalidad y con error multiplicativo. Es decir, \\(y_{t+1} = l_t \\cdot (1 + \\varepsilon_{t+1})\\).\nEl valor de \\(\\alpha\\) técnicamente es 1, indicando que el nivel de la serie varia en el tiempo y que realmente estamos usando para las previsiones el método ingenuo I.\nRespecto de la calidad del modelo, el valor de MAPE= \\(6.9\\)% evidencia que estamos ante un modelo que se ajusta moderadamente bien a los datos. MASE= \\(0.97\\) indica que el modelo de alisado exponencial simple reduce en solo un \\(3\\)% el error del método ingenuo I. Además, el modelo estimado presenta un marcado sesgo positivo, las predicciones en promedio son menores que los valores reales.\n\n\nPredicción\nMediante la función forecast podemos predecir los casos de Libros. Por tratarse de un modelo sin pendiente ni estacionalidad, la predicción es constante en el tiempo (véase Figura 7).\n\nlibrosEtsPre <- forecast(librosEts, \n                         h = 5,\n                         level = 95)\nlibrosEtsPre\n\n     Point Forecast    Lo 95    Hi 95\n2020        64153.8 52808.97 75498.64\n2021        64153.8 48077.97 80229.63\n2022        64153.8 44425.26 83882.34\n2023        64153.8 41327.01 86980.59\n2024        64153.8 38580.71 89726.89\n\nautoplot(librosEtsPre,\n         xlab = \"\",\n         ylab = \"Títulos\",\n         main = \"\")\n\n\n\n\nFigura 7: Libros y predicción a 5 años vista\n\n\n\n\n\n\nAnálisis del residuo\nEl error de un modelo de alisado contiene la componente de Intervención y el propio término de Error. Ver numérica o gráficamente el error permite identificar fácilmente la presencia de valores atípicos (intervención). Obtenemos el error con la función residuals.\n\nerror <- residuals(librosEts)\nsderror <- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"Periodo\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2 ,3)*sderror, \n             colour = c(\"red\", \"blue\", \"blue\", \"red\"), lty = 2) + \n  scale_x_continuous(breaks= seq(1993, 2019, 2)) \n\n\n\n\nFigura 8: Error + Intervención\n\n\n\n\nLa Figura 8 muestra que aunque algún error supera las dos desviaciones típicas, ninguno puede ser considerado claramente como atípico.\n\n\nValidación: error extra-muestral a varios periodos vista\nVamos a mejorar la estimación de la calidad de las predicciones obteniendo el MAPE para previsiones extra-muestrales a varios periodos vista. Para ello vamos a reservar, por ejemplo, las últimas 6 observaciones de la serie Libros y ajustar el modelo con las restantes. Después usaremos este modelo para calcular las predicciones a 6 periodos vista y compararlas con los valores reales de la serie Libros.\nRecuerda, este método para valorar la calidad de las predicciones usa la filosofía del método training set/test set: el periodo de datos usado en la estimación no se usa como periodo de datos para la validación. Sin embargo, tiene el problema de que el error obtenido es una mezcla de errores de predicción a corto, medio y largo plazo difícil de valorar. Además, los resultados dependen tremendamente del punto de corte temporal seleccionado.\n\n# Definimos las observaciones intra- y extra-muestrales\nlibrosIntra <- subset(libros, end = length(libros) - 6)\nlibrosExtra <- subset(libros, start = length(libros) - 5)\n\n# Estimamos el modelo con todos los datos menos los 6 ultimos\nlibrosIntraEts <- ets(librosIntra, model = \"MNN\")\n\n# Predecimos los 6 años que hemos quitado de la serie y \n# vemos la calidad del ajuste.\nlibrosExtraPre <- forecast(librosIntraEts, h = 6)\naccuracy(librosExtraPre, librosExtra)\n\n                    ME     RMSE      MAE      MPE     MAPE      MASE\nTraining set  764.4434 6445.919 5075.985 1.116656 7.994644 0.9557225\nTest set     4084.3395 4786.634 4219.782 6.586626 6.828358 0.7945138\n                    ACF1 Theil's U\nTraining set -0.04292193        NA\nTest set      0.08397051  1.881683\n\n\n\n\n\nAtendiendo al MAPE se tiene que el error de previsión a un periodo vista en el periodo intra-muestral de 1993 a 2013 es del 8%; y el error de previsión a largo plazo en el periodo extra-muestral de 2014 a 2019 es del 6.8%. Sin embargo, para el periodo extra-muestral el error medio (ME) es muy elevado, un indicativo de que las previsiones están segadas. Para el punto de corte elegido, la calidad de las previsiones no se deteriora cuanto nos salimos de las condiciones óptimas.\nUn gráfico puede ayudar a entender este proceso de validación. En la Figura 9:\n\nLa línea de puntos vertical separa el periodo muestral (1993-2013) usado para estimar el modelo, del periodo extra-muestral (2014-2019) usado sólo para hacer las previsiones.\nLa serie Libros aparece como una línea sólida en negro, desde 1993 hasta 2019.\nLa previsión intra-muestral (a un periodo vista) de la serie Libros aparece como una línea azul. Observa la previsión puede ser mayor o menor que la serie, no evidenciándose sesgo.\nLa línea en rojo es la previsión extra-muestral a largo plazo: \\(\\hat{y}_{T+h}=l_T\\), donde \\(T=2013\\). Observa que todas las previsiones están por debajo del valor real de la serie: la previsión extra-muestral está sesgada.\nAl lado de cada previsión se ha indicado el error estimado (MAPE). Para la previsión extra-muestral, el error es la media de errores muy bajos (primeras previsiones) y errores muy elevados (últimas previsiones).\n\nClaramente estos resultados dependen del punto de corte seleccionado.\n\n\n\n\n\nFigura 9: Libros, predicción intra- y extra-muestral\n\n\n\n\nNota: La presencia de tendencia, primero creciente y luego decreciente, en la serie Libros puede hacernos pensar que un modelo más adecuado para su ajuste y predicción sería ETS(M,A,N), forzando a que haya pendiente. De hecho, el error de estimación de este modelo es del 6.1%, frente al 7% para el modelo ETS(M,N,N). Sin embargo, el error de previsión extra-muestral a largo plazo para el modelo ETS(M,A,N) es del 12.1%, frente al 6.8% para el modelo ETS(M,N,N). Mejor ajuste no implica mejor predicción. De nuevo, incidir en que claramente estos resultados dependen del punto de corte seleccionado."
  },
  {
    "objectID": "03-05-Tema5.html#nacimientos",
    "href": "03-05-Tema5.html#nacimientos",
    "title": "Técnicas de Alisado Exponencial",
    "section": "11.2 Nacimientos",
    "text": "11.2 Nacimientos\nVeamos un segundo ejemplo con la serie Nacimientos (desde el año 2000).\n\nIdentificación y estimación del mejor modelo\nSi damos total libertad al proceso de selección del mejor modelo, el modelo estimado es ETS(M,A,A), es decir, \\(y_{t+1} = (l_t + b_t + s_{t+1-m}) \\cdot (1+ \\varepsilon_{t+1})\\).\n\nnacimientosEts <- ets(nacimientosb, damped = FALSE)\nsummary(nacimientosEts) \n\nETS(M,A,A) \n\nCall:\n ets(y = nacimientosb, damped = FALSE) \n\n  Smoothing parameters:\n    alpha = 0.4474 \n    beta  = 0.0128 \n    gamma = 0.0001 \n\n  Initial states:\n    l = 33059.0092 \n    b = 133.8769 \n    s = 182.5531 -22.7455 1980.873 1425.817 900.8348 1155.648\n           -1072.562 328.585 -1319.188 -230.6447 -3327.042 -2.1282\n\n  sigma:  0.0222\n\n     AIC     AICc      BIC \n4548.513 4551.270 4607.684 \n\nTraining set error measures:\n                    ME    RMSE     MAE        MPE     MAPE      MASE\nTraining set -75.41839 803.969 635.127 -0.2331352 1.729529 0.4578664\n                    ACF1\nTraining set -0.01404832\n\n\nEl bajo valor de \\(\\beta\\) y \\(\\gamma\\) indican que ambas, la pendiente y la estacionalidad, varían muy lentamente en el tiempo (véase la Figura 10).\n\nautoplot(nacimientosEts,\n         xlab = \"Periodo\",\n         main = \"\")\n\n\n\n\nFigura 10: Componentes del modelo óptimo para Nacimientos\n\n\n\n\nRespecto de la calidad del modelo, el MAPE de 1.7% indica que estamos ante un modelo que se ajusta muy bien a los datos; y el valor de MASE igual a 0.46 indica que este modelo reduce en un 54% el error del método ingenuo con estacionalidad, el más sencillo posible.\nPodemos ver los últimos valores estimados del nivel, la pendiente y la estacionalidad para interpretarlos.\n\nTT <- nrow(nacimientosEts$states)\nnacimientosEts$states[TT,]\n\n           l            b           s1           s2           s3           s4 \n29320.777216   -97.750950   182.341671   -22.911478  1980.732161  1425.627100 \n          s5           s6           s7           s8           s9          s10 \n  900.711756  1155.516255 -1072.778571   328.464694 -1319.322763  -230.718073 \n         s11          s12 \n-3327.380739    -2.092064 \n\n\nFebrero es el mes con menor número de nacimientos: nacen 3327 bebés menos, respecto de la media anual. En octubre es cuando más bebés nacen: 1980 más que la media anual.\nPodemos usar estos valores para predecir un año,\n\nnacimientosEts$states[TT, 1] + (1:12) * nacimientosEts$states[TT, 2] + \n  nacimientosEts$states[TT, 14:3]\n\n     s12      s11      s10       s9       s8       s7       s6       s5 \n29220.93 25797.89 28796.81 27610.45 29160.49 27661.49 29792.04 29439.48 \n      s4       s3       s2       s1 \n29866.65 30324.00 28222.61 28330.11 \n\n\nNuestra predicción para enero de 2020 es de 29221 bebés y para diciembre de 2020 de 28330 bebés.\n\n\nPredicción\nSi pedimos los valores de predicción tenemos (sólo se muestran los primeros meses):\n\nnacimientosEtsPre <- forecast(nacimientosEts, \n                              h = 24, \n                              level = 95)\nnacimientosEtsPre\n\n\n\n         Point Forecast    Lo 95    Hi 95\nJan 2020       29220.93 27947.01 30494.86\nFeb 2020       25797.89 24529.51 27066.28\nMar 2020       28796.81 27311.06 30282.55\nApr 2020       27610.45 26045.43 29175.48\nMay 2020       29160.49 27434.66 30886.32\n\n\nLa Figura 11 muestra la serie Nacimientos, su predicción a dos años vista y el intervalo de confianza.\n\nautoplot(nacimientosEtsPre,\n         xlab = \"\",\n         ylab = \"Nacimientos\",\n         main = \"\")\n\n\n\n\nFigura 11: Nacimientos y predicción\n\n\n\n\n\n\nAnálisis del error\nSe identifica un valor claramente atípico –supera las 4 desviaciones típicas– que corresponde a enero de 2011. Abril de 2008 y Junio de 2016 son otros candidatos a intervención por superar las 2.5 desviaciones típicas.2\n\nerror <- residuals(nacimientosEts)\nsderror <- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"Periodo\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2 ,3)*sderror, \n             colour = c(\"red\", \"blue\", \"blue\", \"red\"), lty = 2) + \n  scale_x_continuous(breaks= seq(2000, 2019, 2)) \n\n\n\n\nFigura 12: Error + Intervención\n\n\n\n\n\n\nValidación: error extra-muestral según horizonte temporal\nEn este ejemplo calcularemos el error extra-muestral según el horizonte temporal de previsión, una metodología que ya hemos visto anteriormente.\n\nk <- 120                 \nh <- 12                  \nTT <- length(nacimientosb)\ns <- TT - k - h \n\nmapeAlisado <- matrix(NA, s + 1, h)\nfor (i in 0:s) {\n  train.set <- subset(nacimientosb, start = i + 1, end = i + k)\n  test.set <-  subset(nacimientosb, start = i + k + 1, end = i + k + h)\n  \n  fit <- ets(train.set, model = \"MAA\", damped = FALSE)\n  fcast<-forecast(fit, h = h)\n  mapeAlisado[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n}\n\nerrorAlisado <- colMeans(mapeAlisado)\nerrorAlisado\n\n [1] 1.895690 2.132387 2.242887 2.585539 2.558460 2.566431 2.776798 2.744558\n [9] 2.832179 2.999329 3.016310 3.250591\n\n\n\nggplot() +\n  geom_line(aes(x = 1:12, y = errorAlisado)) +\n  ggtitle(\"\") +\n  xlab(\"Horizonte temporal de predicción\") +\n  ylab(\"MAPE\") +\n  scale_x_continuous(breaks= 1:12)\n\n\n\n\nFigura 13: Error de predicción según horizonte temporal\n\n\n\n\nLa Figura 13 muestra el error de previsión extra-muestral según el horizonte temporal. El error extra-muestral a un periodo vista es comparable al error intra-muestral (1.9% frente a 1.7%). Aunque el error de previsión aumenta conforme lo hace el horizonte temporal, siempre se mantiene muy bajo. Por ejemplo, en las previsiones a 12 meses vista el error es del 3.3%."
  },
  {
    "objectID": "03-05-Tema5.html#demanda-eléctrica",
    "href": "03-05-Tema5.html#demanda-eléctrica",
    "title": "Técnicas de Alisado Exponencial",
    "section": "11.3 Demanda eléctrica",
    "text": "11.3 Demanda eléctrica\nConsideraremos la serie de Demanda eléctrica desde el 1 de febrero hasta el 30 de mayo, 17 semanas completas de 2021.\n\nIdentificación y estimación del mejor modelo\nEl modelo óptimo (ANA) no presenta tendencia y tiene error y estacionalidad aditiva, es decir, \\(y_{t+1} = l_t + s_{t+1-m} + \\varepsilon_{t+1}\\).\n\nelectricidadEts <- ets(electricidad)\nsummary(electricidadEts) \n\nETS(A,N,A) \n\nCall:\n ets(y = electricidad) \n\n  Smoothing parameters:\n    alpha = 0.8153 \n    gamma = 0.0001 \n\n  Initial states:\n    l = 722.0988 \n    s = -88.4954 -48.1336 18.9787 30.7625 35.2935 36.6034\n           14.991\n\n  sigma:  17.1482\n\n     AIC     AICc      BIC \n1255.728 1257.765 1283.519 \n\nTraining set error measures:\n                     ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set -0.5481487 16.48698 10.17435 -0.1139339 1.549188 0.5110171\n                   ACF1\nTraining set 0.04689494\n\n\nEl valor \\(\\gamma = 0\\) indica que las estacionalidad se mantiene contante en el tiempo, mientras que el elevado valor de \\(\\alpha\\) indica que el nivel de la serie cambia de forma constante.\nRespecto de la calidad del modelo, el MAPE de 1.5% indica que estamos ante un modelo que se ajusta muy bien a los datos; no hay sesgo (ME es casi cero); y el valor de ACF1 casi nulo indica que la fórmula usada para el cálculo del intervalo de confianza de las predicciones es válida.\nPodemos ver los últimos valores estimados del nivel y la estacionalidad para interpretarlos.\n\nTT <- nrow(electricidadEts$states)\nelectricidadEts$states[TT,]\n\n        l        s1        s2        s3        s4        s5        s6        s7 \n668.91416 -88.49612 -48.13342  18.97883  30.76151  35.29273  36.60043  14.98952 \n\n\nEl domingo la demanda eléctrica cae 88 GWh respecto de la media semanal. Por el contrario, el martes y el miércoles son los días de mayor demanda respecto de la media semanal: 36 GWh y 35 GWh respectivamente.\nTambién podemos usarlos para predecir una semana,\n\nelectricidadEts$states[TT, 1] + electricidadEts$states[TT, 8:2]\n\n      s7       s6       s5       s4       s3       s2       s1 \n683.9037 705.5146 704.2069 699.6757 687.8930 620.7807 580.4180 \n\n\n\n\nPredicción\nSi pedimos los valores de predicción para las cuatro siguientes semanas tenemos (sólo se muestran las dos primeras):\n\nelectricidadEtsPre <- forecast(electricidadEts, \n                               h = 28, \n                               level = 95)\nelectricidadEtsPre\n\n\n\n         Point Forecast    Lo 95    Hi 95\n23.00000       683.9037 650.2939 717.5135\n23.14286       705.5146 662.1490 748.8802\n23.28571       704.2069 652.9085 755.5053\n23.42857       699.6757 641.5165 757.8348\n23.57143       687.8930 623.6012 752.1848\n23.71429       620.7807 550.8923 690.6692\n23.85714       580.4180 505.3479 655.4882\n24.00000       683.9037 603.9882 763.8192\n24.14286       705.5146 621.0312 789.9980\n24.28571       704.2069 615.3903 793.0235\n24.42857       699.6757 606.7276 792.6238\n24.57143       687.8930 590.9894 784.7966\n24.71429       620.7807 520.0769 721.4846\n24.85714       580.4180 476.0514 684.7847\n\n\nLa Figura 14 muestra la serie Demanda eléctrica, su predicción a cuatro semanas vista y el intervalo de confianza.\n\nautoplot(electricidadEtsPre,\n         xlab = \"\",\n         ylab = \"GWh\",\n         main = \"\")\n\n\n\n\nFigura 14: Demanda eléctrica y predicción\n\n\n\n\n\n\nAnálisis del error\n\nerror <- residuals(electricidadEts)\nsderror <- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"Semana\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2 ,3)*sderror, \n             colour = c(\"red\", \"blue\", \"blue\", \"red\"), lty = 2) + \n  scale_x_continuous(breaks= seq(6, 26, 2)) \n\n\n\n\nFigura 15: Error + Intervención\n\n\n\n\nEl la Figura 15 se identifican en la semana 14 varios días atípicos –supera las 4 desviaciones típicas– que corresponden a la Semana Santa, que en 2021 fue del 28 de marzo al 4 de abril. Los dos valores mas extremos corresponden al Jueves Santo, que por ser vacacional tuvo un consumo de electricidad inferior al esperado; y el sábado siguiente donde el consumo fue superior al esperado."
  },
  {
    "objectID": "03-11-Ejemplo5.html#ajuste-por-alisado-exponencial",
    "href": "03-11-Ejemplo5.html#ajuste-por-alisado-exponencial",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "3.1 Ajuste por alisado exponencial",
    "text": "3.1 Ajuste por alisado exponencial\nSi se estima el modelo sin imponer ninguna restricción, ets identifica como modelo óptimo ETS(M,N,M).\n\nPernoctacionesEts <- ets(Pernoctaciones)\nsummary(PernoctacionesEts) \n\nETS(M,N,M) \n\nCall:\n ets(y = Pernoctaciones) \n\n  Smoothing parameters:\n    alpha = 0.5303 \n    gamma = 0.2397 \n\n  Initial states:\n    l = 19423762.6337 \n    s = 0.5419 0.6044 1.0578 1.3327 1.7077 1.6555\n           1.2735 1.0803 0.8096 0.7428 0.615 0.5788\n\n  sigma:  0.034\n\n     AIC     AICc      BIC \n7740.748 7742.890 7792.957 \n\nTraining set error measures:\n                   ME     RMSE    MAE       MPE     MAPE      MASE      ACF1\nTraining set 50058.34 727644.8 539050 0.1356775 2.606948 0.5925429 0.1478231\n\n\nEl modelo estimado no tiene pendiente, y tiene estacionalidad y residuo multiplicativos: \\[y_{t+1} = l_t  \\cdot s_{t+1-m} \\cdot (1 + \\varepsilon_{t+1}).\\]\nEl valor de \\(\\alpha\\) indica que el nivel de la serie ha ido variando lentamente en el tiempo. El valor de \\(\\gamma\\) relativamente bajo indica que la componente estacional ha evolucionado muy poco con el paso de los años. (Véase Figura 3.)\n\nautoplot(PernoctacionesEts,\n         xlab = \"\",\n         main = \"\")\n\n\n\n\nFigura 3: Descomposición para Pernoctaciones\n\n\n\n\nLa calidad del ajuste es bastante buena, con un MAPE de 2.6% y un RMSE de 728 mil pernoctaciones (o 539 si usamos el MAE). Además, según el MASE, el modelo de alisado exponencial supone una mejora del 41% respecto del método ingenuo con estacionalidad, que ya usamos para Pernoctaciones y tenía un MAPE del 4.6%. Parece que para la serie mensual el método de Alisado si supone una mejora notable en la calidad del ajuste respecto del método más sencillo.\nLos últimos valores estimados del nivel y la estacionalidad, que corresponden a diciembre de 2019, nos permiten mostrar gráficamente la componente estacional más reciente (Figura 4).\n\nTT <- nrow(PernoctacionesEts$states)\nPernoctacionesEts$states[TT,]\n\n\n\n          l          s1          s2          s3          s4          s5 \n25512327.37        0.55        0.61        1.12        1.40        1.70 \n         s6          s7          s8          s9         s10         s11 \n       1.60        1.30        1.13        0.86        0.73        0.59 \n        s12 \n       0.57 \n\n\n\ncomponenteEstacional <- PernoctacionesEts$states[TT, 13:2]\n\nggplot() +\n  geom_line(aes(x = 1:12, y = componenteEstacional)) + \n  geom_hline(yintercept = 1, colour = \"blue\", lty = 2) +\n  ggtitle(\"\") +\n  xlab(\"\") +\n  ylab(\"Efecto estacional\") +\n  scale_x_continuous(breaks= 1:12, \n                     labels = c(\"Ene\", \"Feb\", \"Mar\", \"Abr\", \"May\", \"Jun\", \n                                \"Jul\", \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\")) \n\n\n\n\nFigura 4: Componente estacional\n\n\n\n\nEl nivel de las pernoctaciones en diciembre de 2019 (última observación) es de 25.5 millones de noches. El mayor número de pernoctaciones dentro del año tiene lugar en verano, en los meses de julio y agosto. En concreto, destaca el mes agosto con un incremento del 70% (s5) en las pernoctaciones respecto de la media anual. Las pernoctaciones en invierno bajan drásticamente respecto de la media anual, observándose en diciembre un 45% menos de pernoctaciones (s1). El efecto estacional estimado por el método de alisado es muy similar al estimado durante la descriptiva de la serie."
  },
  {
    "objectID": "03-11-Ejemplo5.html#predicción",
    "href": "03-11-Ejemplo5.html#predicción",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "3.2 Predicción",
    "text": "3.2 Predicción\nSi pedimos los valores de predicción y su intervalo de confianza al 95% para los próximos tres años, tenemos (numéricamente sólo se muestra el primer año):\n\nPernoctacionesEtsPre <- forecast(PernoctacionesEts, \n                                 h = 36, \n                                 level = 95)\n\nPernoctacionesEtsPre\n\n\n\n         Point Forecast    Lo 95    Hi 95\nJan 2020       14603125 13630775 15575475\nFeb 2020       15109537 13970636 16248438\nMar 2020       18575400 17029060 20121741\nApr 2020       21893628 19913635 23873620\nMay 2020       28781920 25987245 31576594\nJun 2020       33207095 29775705 36638484\nJul 2020       40832285 36372817 45291753\nAug 2020       43442634 38455577 48429690\nSep 2020       35699807 31411510 39988105\nOct 2020       28511154 24940956 32081352\nNov 2020       15479002 13464828 17493176\nDec 2020       13920455 12043305 15797604\n\n\n\nautoplot(PernoctacionesEtsPre,\n         xlab = \"\",\n         ylab = \"Casos\",\n         main = \"\",\n         PI = FALSE)\n\n\n\n\nFigura 5: Pernoctaciones (2000-2019) y predicción (2020-2022)\n\n\n\n\nLas predicciones no muestran tendencia. (Véase Figura 5.)"
  },
  {
    "objectID": "03-11-Ejemplo5.html#análisis-del-error",
    "href": "03-11-Ejemplo5.html#análisis-del-error",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "3.3 Análisis del error",
    "text": "3.3 Análisis del error\nLa Figura 6 muestra el residuo del modelo.\n\nerror <- residuals(PernoctacionesEts)\nsderror <- sd(error)\n\nautoplot(error,\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\",\n         colour = \"black\") +\n  geom_hline(yintercept = c(-3, -2, 2 ,3)*sderror, \n             colour = c(\"red\", \"blue\", \"blue\", \"red\"), lty = 2) + \n  scale_x_continuous(breaks= seq(2000, 2020, 2)) \n\n\n\n\nFigura 6: Error + Intervención\n\n\n\n\nSe observan cuatro meses en los que el residuo supera las tres desviaciones típicas: abril de 2005, 2011 y 2017, y mayo de 2013. Además, en abril de 2002 el residuo está cercano a las tres desviaciones típicas. Una posible causa de algunas intervenciones en Abril es que la Semana Santa recayera en marzo (años 2002 y 2005)."
  },
  {
    "objectID": "03-11-Ejemplo5.html#validación",
    "href": "03-11-Ejemplo5.html#validación",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "3.4 Validación",
    "text": "3.4 Validación\nYa hemos visto que el modelo comete un error próximo al 2.6%. Este valor es la estimación del error en la previsión intra-muestral y a un periodo vista. A fin de poder estimar mejor la capacidad predictiva del modelo vamos a estimar el error de previsión extra-muestral según el horizonte temporal.\nAsumimos que se precisan diez años para hacer una buena estimación, \\(k=120\\), y que el horizonte temporal es un año, \\(h = 12\\) meses.\n\nk <- 120                 \nh <- 12                  \nTT <- length(Pernoctaciones)\ns <- TT - k - h          \n\nmapeAlisado <- matrix(NA, s + 1, h)\nfor (i in 0:s) {\n  train.set <- subset(Pernoctaciones, start = i + 1, end = i + k)\n  test.set <-  subset(Pernoctaciones, start = i + k + 1, end = i + k + h)\n  \n  fit <- ets(train.set, model = \"MNM\")\n  fcast<-forecast(fit, h = h)\n  mapeAlisado[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n}\n\nerrorAlisado <- colMeans(mapeAlisado)\nerrorAlisado\n\n [1] 3.013355 3.768883 4.163453 4.246792 4.372550 4.506715 4.654520 5.179270\n [9] 5.440347 5.329751 5.059357 4.895968\n\nggplot() +\n  geom_line(aes(x = 1:12, y = errorAlisado)) +\n  ggtitle(\"\") +\n  xlab(\"Horizonte temporal de predicción\") +\n  ylab(\"MAPE\") +\n  ylim(0, 6) + \n  scale_x_continuous(breaks= 1:12)\n\n\n\n\nFigura 7: Error de predicción según horizonte temporal\n\n\n\n\nLa Figura 7 muestra el error de previsión extra-muestral según el horizonte de previsión. Se observa como para horizontes de predicción de uno a nueve meses el error de predicción aumenta según aumenta el horizonte de predicción, pasando del 3% para predicciones a un mes vista hasta el 5.4% para predicciones a nueve meses vista.\nSin embargo, para previsiones a más largo plazo el error de predicción decrece, hasta situarse en el 4.9% en las previsiones a un año vista."
  },
  {
    "objectID": "03-03-Tema3.html#notación-y-definiciones",
    "href": "03-03-Tema3.html#notación-y-definiciones",
    "title": "Métodos sencillos de predicción. Evaluación de predicciones",
    "section": "2.1 Notación y definiciones",
    "text": "2.1 Notación y definiciones\nDada una serie temporal \\(\\{y_t\\}_{t=1}^T\\), se define:\n\nPrevisión \\(h\\) periodos adelante, como la previsión de la serie para el periodo \\(t+h\\) disponiendo de información hasta el periodo \\(t\\), y se denota por \\(\\hat{y}_{t+h|t}\\). Por simplicidad lo escribiremos también como \\(\\hat{y}_{t+h}\\).\n\n\nAsí, \\(\\hat{y}_{t+1|t}\\) es la previsión un periodo adelante o a un periodo vista. Es decir, la previsión de la serie en el periodo \\(t+1\\) desde el periodo \\(t\\).\n\nPor simplicidad denotaremos a \\(\\hat{y}_{t+1|t}\\) como \\(\\hat{y}_{t+1}\\); y como \\(\\hat{y}_{t}\\) a la previsión en \\(t\\), con datos hasta el periodo \\(t-1\\) (\\(\\hat{y}_{t} = \\hat{y}_{t|t-1}\\)).\nSe define como error de previsión a un periodo vista a \\[\\hat{e}_t=y_t-\\hat{y}_t,\\] de forma que la serie \\(\\{\\hat{e}_t\\}_{t=1}^T\\) nos permitirá definir varios criterios de calidad de ajuste."
  },
  {
    "objectID": "03-03-Tema3.html#medidas-de-precisión-de-la-predicción",
    "href": "03-03-Tema3.html#medidas-de-precisión-de-la-predicción",
    "title": "Métodos sencillos de predicción. Evaluación de predicciones",
    "section": "2.2 Medidas de precisión de la predicción",
    "text": "2.2 Medidas de precisión de la predicción\nDada una serie \\(\\{y_t\\}_{t=1}^T\\), un método de predicción y su vector de errores asociado \\(\\{\\hat{e}_t\\}_{t=1}^T\\), podemos definir múltiples medidas de calidad del método de predicción que hacen referencia a la presencia de sesgo en las predicciones, la magnitud del error cometido y la calidad del intervalo de confianza de las predicciones. Las más habituales son (siglas en inglés):\n\nError medio (ME): \\(\\frac{1}{T}\\sum_{t=1}^T \\hat{e}_t\\)\n\n\nRaíz del error cuadrático medio (RMSE): \\(\\sqrt{\\frac{1}{T}\\sum_{t=1}^T \\hat{e}^2_t}\\)\n\n\nError absoluto medio (MAE): \\(\\frac{1}{T}\\sum_{t=1}^T |\\hat{e}_t|\\)\n\n\nError porcentual medio (MPE): \\(\\frac{100}{T}\\sum_{t=1}^T \\frac{\\hat{e}_t}{y_t}\\)\n\n\nError porcentual absoluto medio (MAPE): \\(\\frac{100}{T}\\sum_{t=1}^T \\big|\\frac{\\hat{e}_t}{y_t}\\big|\\)\n\n\nError porcentual absoluto medio simétrico (sMAPE): \\(\\frac{200}{T}\\sum_{t=1}^T \\Big|\\frac{\\hat{e}_t}{y_t + \\hat{y}_t}\\Big|\\)\n\n\nError escalado absoluto medio (MASE): \\(\\big(\\frac{1}{T}\\sum_{t=1}^T |\\hat{e}_t|\\big)/q\\), donde \\(q\\) es el error absoluto medio para un método ingenuo de predicción: el método ingenuo I para series sin estacionalidad y el método ingenuo con estacionalidad para series con estacionalidad.\n\n\nCorrelación entre \\(\\hat{e}_t\\) y \\(\\hat{e}_{t-1}\\) (ACF1).\n\n\n\nME y MPE permiten valorar el sesgo de las predicciones (que estas estén sistemáticamente por encima o por debajo de los valores reales).\n\nLo esperado es un valor cercano a cero (con relación al valor medio de la serie). Valores muy alejados de cero son indicadores de sesgo de predicción.\n\nRMSE y MAE indican el error medio cometido, medido en las mismas unidades que la serie temporal.\n\nEstán acotadas inferiormente por el valor óptimo de 0, pero no hay cota superior.\n\nMAPE y sMAPE indican el error porcentual medio cometido.\n\nEstán acotadas inferiormente por el valor óptimo de 0%, y la cota superior natural es 100%, aunque podría sobrepasarse.\nSi \\(y_t\\) puede valer 0, entonces MAPE no se puede calcular. Además, MAPE penaliza más los errores negativos frente a los errores positivos. La medida de precisión sMAPE se define a fin de corregir estos problemas.\n\nMASE es la ratio entre el error del método usado y el error de un método ingenuo de predicción. Permite saber cuánto ganamos en capacidad predictiva al pasar de un método ingenuo a otro más complicado.\n\nUn valor cercano a 1 indica que el método usado no es mejor que el método ingenuo\nCuanto más cercano a 0, mejor es el método usado respecto del método ingenuo\nSu complementario a 1 se puede interpretar como la tasa de mejora\n\nACF1 permite saber si la fórmula usada para estimar el intervalo de confianza de las predicciones es válida. Lo veremos con más detalle en el tema de modelos ARIMA. Por ahora basta saber que:\n\nUn valor muy cercano a 0 indica que la fórmula es válida.\nValore mínimamente alejados de 0 indican que la fórmula no es válida.\n\n\n\n\n\n\n\nCálculo del intervalo de confianza de las predicciones\n\n\n\nVe a la Píldora Bootstrapping para intervalos de predicción para saber más sobre las fórmulas usadas para estimar el intervalo de confianza de las predicciones y alternativas de cálculo cuando estas fórmulas no son válidas.\n\n\nLas medias se pueden sustituir por medianas. Esto es especialmente útil cuando para algunas observaciones hay errores atípicamente altos.\n\n\nSi para realizar la predicción del periodo \\(t\\) se usa una metodología que utiliza datos incluido dicho periodo, se hablará de predicción y error intra-muestral. En caso contrario, si la predicción del periodo \\(t\\) usa una metodología que solo necesita de datos hasta el periodo \\(t-1\\), se hablará de predicción y error extra-muestral.\nLos indicadores de calidad que se basan en predicciones intra-muestrales a un periodo vista presentan dos problemas. Primero, evalúan el error de predicción a un periodo vista, cuando en muchas situaciones reales las predicciones se realizan sobre un horizonte temporal más amplio. Segundo, son errores intra-muestrales, resultantes de predecir los mismos datos que ha usado el método para calcular la predicción y, por tanto, sobrestiman la capacidad predictiva del modelo.\nVeremos en el epígrafe 4 de este tema métodos de evaluación de la calidad de las predicciones que superan estas limitaciones."
  },
  {
    "objectID": "03-03-Tema3.html#métodos-sencillos-de-predicción-1",
    "href": "03-03-Tema3.html#métodos-sencillos-de-predicción-1",
    "title": "Métodos sencillos de predicción. Evaluación de predicciones",
    "section": "3.1 Métodos sencillos de predicción",
    "text": "3.1 Métodos sencillos de predicción\n\nSeries sin tendencia y sin estacionalidad\nMétodo de la Media: \\(\\hat{y}_{T+h}=(y_1+\\ldots,y_T)/T\\).\n\nLa predicción para cualquier periodo futuro es la media de las observaciones disponibles previas.\nFunción de R: meanf(y, h)\n\nMétodo ingenuo I: \\(\\hat{y}_{T+h}=y_T\\).\n\nLa predicción para cualquier periodo futuro es la última observación disponible.\nFunción de R: naive(y, h) o rwf(y, h) (rw de random walk)\nPara series sin estacionalidad este es el método ingenuo de comparación del MASE.\n\n\n\nSeries con tendencia y sin estacionalidad\nMétodo ingenuo II: \\(\\hat{y}_{T+h}=y_T + h(y_T-y_{T-1})\\).\n\nLa predicción \\(h\\) periodos adelante es la última observación disponible más \\(h\\) veces el último incremento observado.\nNo tiene función en R, pero se podría emular mediante la función ets (véase epígrafe de 5.5 del tema 5, Alisado exponencial de Holt).\n\nMétodo de la deriva: \\(\\hat{y}_{T+h}=y_T+h\\frac{y_T - y_1}{T-1}\\).\n\nLa predicción \\(h\\) periodos adelante es la última observación disponible más \\(h\\) veces el incremento medio observado.\nFunción de R: rwf(y, h, drift = TRUE)\n\n\n\nSeries sin tendencia y con estacionalidad\nMétodo ingenuo con estacionalidad: \\(\\hat{y}_{T+h}=y_{T-m(k+1)}\\).\n\n\\(k\\) es la parte entera de \\((h-1)/m\\), es decir, el número de estaciones completas en el periodo de predicción previo al periodo \\(T+h\\).\nLa predicción para un periodo es la última observación disponible de la misma estación que la fecha que se desea predecir.\nFunción de R: snaive(y, h)\nPara series con estacionalidad este es el método ingenuo de comparación del MASE\n\nNo hay métodos sencillos cuando la serie tiene tendencia y estacionalidad, así que se suele usar el método ingenuo con estacionalidad."
  },
  {
    "objectID": "03-03-Tema3.html#ejemplo-de-aplicación",
    "href": "03-03-Tema3.html#ejemplo-de-aplicación",
    "title": "Métodos sencillos de predicción. Evaluación de predicciones",
    "section": "3.2 Ejemplo de aplicación",
    "text": "3.2 Ejemplo de aplicación\n\nSerie Libros\n\nlibros <- read.csv2(\"./series/libros.csv\", header = TRUE)\nlibros <- ts(libros[ ,2], start = 1993, frequency  = 1)\n\nLas siguientes salidas muestra el resultado de la aplicación de algunos de estos métodos sencillos a la serie Libros (número de títulos publicados anualmente en España desde 1993 hasta 2019), con independencia de su adecuación dadas las componentes de esta serie.\nLos métodos de la Media e Ingenuo I realizan una predicción constante, el primero la media de títulos en el periodo de análisis (61873) y el segundo el último dato observado (64154). El método de deriva ofrece una predicción creciente porque la serie Libros tiene una pendiente media positiva en el periodo de análisis.\n\n(mediaLibros <- meanf(libros, h = 5))\n\n     Point Forecast    Lo 80    Hi 80    Lo 95   Hi 95\n2020       61873.93 47672.32 76075.53 39674.35 84073.5\n2021       61873.93 47672.32 76075.53 39674.35 84073.5\n2022       61873.93 47672.32 76075.53 39674.35 84073.5\n2023       61873.93 47672.32 76075.53 39674.35 84073.5\n2024       61873.93 47672.32 76075.53 39674.35 84073.5\n\n(naiveLibros <- naive(libros, h = 5))\n\n     Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\n2020          64154 56581.87 71726.13 52573.42 75734.58\n2021          64154 53445.39 74862.61 47776.59 80531.41\n2022          64154 51038.68 77269.32 44095.85 84212.15\n2023          64154 49009.73 79298.27 40992.84 87315.16\n2024          64154 47222.19 81085.81 38259.04 90048.96\n\n(derivaLibros <- rwf(libros,  h = 5, drift = TRUE))\n\n     Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\n2020       65053.85 57421.83 72685.86 53381.69 76726.00\n2021       65953.69 54954.79 76952.60 49132.32 82775.06\n2022       66853.54 53135.50 80571.58 45873.60 87833.47\n2023       67753.38 51632.77 83874.00 43099.04 92407.73\n2024       68653.23 50321.73 86984.74 40617.61 96688.85\n\n\nEn la Figura 1 muestra el resultado gráfico de la aplicación de estos métodos. Se ha fijado un horizonte de previsión de cinco años (h = 5). El argumento PI = FALSE hace que no se impriman los intervalos de confianza de las predicciones.\n\nautoplot(libros, series = \"Libros\",\n                xlab = \"\",\n                ylab = \"Títulos\",\n                main = \"\") +\n  autolayer(mediaLibros, series=\"Media\", PI = FALSE) +\n  autolayer(naiveLibros, series=\"Ingenuo\", PI = FALSE) +\n  autolayer(derivaLibros, series=\"Deriva\", PI = FALSE) +\n  scale_colour_discrete(limits=c(\"Libros\", \"Media\", \"Ingenuo\", \"Deriva\")) +\n  guides(colour = guide_legend(title = \"Métodos\")) + \n  theme(legend.position=c(0.02,0.98), legend.justification=c(0,1))\n\n\n\n\nFigura 1: Libros y predicción por métodos sencillos\n\n\n\n\nCon la función accuracy se puede obtener el error de predicción intra-muestral a un periodo vista de cada método:\n\naccuracy(mediaLibros)\naccuracy(naiveLibros)\naccuracy(derivaLibros)\n\n\n\n              ME     RMSE     MAE   MPE  MAPE MASE  ACF1\nMedia       0.00 10407.07 7938.30 -3.06 13.66 1.75  0.77\nIngenuo I 899.85  5908.57 4524.38  1.34  7.14 1.00 -0.04\nDeriva      0.00  5839.64 4229.65 -0.13  6.66 0.93 -0.04\n\n\nPodemos destacar que:\n\nEl método de Media presenta una baja calidad de ajuste debido a que la serie Libros tiene tendencia (MAPE = 14%). Además, el intervalo de confianza de las predicciones no es fiable (ACF1 = 0.77).\nEl método de Deriva tiene la mejor calidad de ajuste, con un error porcentual del 6.7% (MAPE), y un error medio aproximado de 6000 títulos (RMSE). No presenta sesgo (ME = 0) y el intervalo de confianza de las predicciones es fiable (ACF1 = -0.04).\nEl método Ingenuo I tiene buena calidad de ajuste, pero las previsiones están ligeramente sesgadas (ME = 900).\nPara series sin estacionalidad el método sencillo de comparación usado en el cálculo del MASE es el Ingenuo I. Es por ello que este indicador vale 1 para este método.\nEl error medio (ME) siempre será nulo para el método de la Media y de la Deriva, lo que indica que nos equivocamos tanto por exceso como por defecto. Esta es una buena propiedad, que el método Ingenuo I no verifica.\n\n\n\nSerie Nacimientos\nPodemos usar el método ingenuo con estacionalidad con la serie Nacimientos para obtener una previsión a dos años vista. El error absoluto porcentual medio es del 3.6%. Es decir, aplicando algo tan simple como predecir el número de nacimientos para un mes como los nacimientos del mismo mes del año previo, tenemos ya un error de predicción muy bajo. La Figura 2 muestra la serie y la predicción que, debido al método usado, no incorpora la tendencia decreciente de los últimos años.\n\nnacimientos <- read.csv2(\"./series/nacimientos.csv\", header = TRUE)\nnacimientos <- ts(nacimientos[, 2],\n                  start = c(1975, 1),\n                  frequency = 12)\n\n(snaive.nacimientos <- snaive(nacimientos, h = 24, level = 95))\n\n         Point Forecast    Lo 95    Hi 95\nJan 2020          30858 27484.08 34231.92\nFeb 2020          27324 23950.08 30697.92\nMar 2020          29333 25959.08 32706.92\nApr 2020          28780 25406.08 32153.92\nMay 2020          29732 26358.08 33105.92\nJun 2020          28475 25101.08 31848.92\nJul 2020          31329 27955.08 34702.92\nAug 2020          31134 27760.08 34507.92\nSep 2020          31083 27709.08 34456.92\nOct 2020          31896 28522.08 35269.92\nNov 2020          29610 26236.08 32983.92\nDec 2020          29193 25819.08 32566.92\nJan 2021          30858 26086.55 35629.45\nFeb 2021          27324 22552.55 32095.45\nMar 2021          29333 24561.55 34104.45\nApr 2021          28780 24008.55 33551.45\nMay 2021          29732 24960.55 34503.45\nJun 2021          28475 23703.55 33246.45\nJul 2021          31329 26557.55 36100.45\nAug 2021          31134 26362.55 35905.45\nSep 2021          31083 26311.55 35854.45\nOct 2021          31896 27124.55 36667.45\nNov 2021          29610 24838.55 34381.45\nDec 2021          29193 24421.55 33964.45\n\naccuracy(snaive.nacimientos)\n\n                    ME    RMSE      MAE       MPE     MAPE MASE      ACF1\nTraining set -588.3163 1721.42 1389.544 -1.512298 3.647559    1 0.7170624\n\n\n\n\n\n\n\n\nInterpretación de ACF1\n\n\n\n¿Es fiable el intervalo de confianza calculado para las predicciones?\n\n\n\nautoplot(snaive.nacimientos,\n         xlab = \"\",\n         ylab = \"Nacimientos\",\n         main = \"\")\n\n\n\n\nFigura 2: Nacimientos y predicción por el método Ingenuo con estacionalidad\n\n\n\n\n\n\nSerie Demanda eléctrica\nPodemos usar el método ingenuo con estacionalidad con la serie Demanda eléctrica, que tiene una estacionalidad de orden 7, pero no parece presentar tendencia. El error absoluto porcentual medio es del 4% o 43 GWh (RMSE), un error razonablemente reducido. Sin embargo, como ya pasaba con nacimientos, el ACF1 indica que la fórmula usada para el cálculo del intervalo de confianza de las predicciones no es válida.\n\nelectricidad <- read.csv2(\"./series/Consumo electrico.csv\", header = TRUE)\nelectricidad <- ts(electricidad[, 2],\n                   start = c(1, 5),\n                   frequency = 7)\n\nsnaive.electricidad <- snaive(electricidad, h = 28, level = 95)\naccuracy(snaive.electricidad)\n\n                    ME     RMSE      MAE        MPE     MAPE MASE      ACF1\nTraining set -2.117489 42.99794 27.93245 -0.4964111 4.000218    1 0.7096965\n\n\nLa Figura 3 muestra la serie y la predicción a cuatro semanas vista. Debido a que la semana de referencia para predecir es la semana de Navidad, donde el consumo eléctrico es inferior al usual, las predicciones resultan ser claramente incorrectas. Este es un buen ejemplo de la diferencia entre calidad de ajuste y calidad de las predicciones.\n\nautoplot(snaive.electricidad,\n         xlab = \"\",\n         ylab = \"GWh\",\n         main = \"\")\n\n\n\n\nFigura 3: Demanda eléctrica y predicción por el método Ingenuo con estacionalidad"
  },
  {
    "objectID": "03-03-Tema3.html#validación-por-la-metodología-de-training-settest-set-para-series-temporales",
    "href": "03-03-Tema3.html#validación-por-la-metodología-de-training-settest-set-para-series-temporales",
    "title": "Métodos sencillos de predicción. Evaluación de predicciones",
    "section": "4.1 Validación por la metodología de Training set/Test set para Series Temporales",
    "text": "4.1 Validación por la metodología de Training set/Test set para Series Temporales\nVamos a mejorar la estimación de la calidad de las predicciones obteniendo las medidas de error para previsiones extra-muestrales a varios periodos vista usando la filosofía del método training set/test set. Dividimos la serie temporal \\(\\{y_t\\}_{t=1}^T\\) en dos subseries. Los primeros datos \\(\\{y_t\\}_{t=1}^{T_0}\\), \\(T_0 < T\\), se usarán para estimar el modelo; y los últimos datos \\(\\{y_t\\}_{t={T_0+1}}^{T}\\) para validar el modelo.\nEsta metodología, muy efectiva para datos de corte transversal, genera dos problemas cuando se aplica a series temporales: i) el error obtenido es una mezcla de errores de predicción a corto, medio y largo plazo; ii) los resultados dependen tremendamente del punto de corte temporal seleccionado.\n\nSerie Libros\nVamos a reservar, por ejemplo, las últimas 7 observaciones de la serie Libros (años 2013 a 2019) y ajustar el modelo con las restantes. Después usaremos este modelo para calcular las predicciones a 7 periodos vista y compararlas con los valores reales de la serie.\n\n# Definimos las observaciones intra- y extra-muestrales\nlibrosIntra <- subset(libros, end = length(libros) - 7)\nlibrosExtra <- subset(libros, start = length(libros) - 6)\n\n# Estimamos el modelo con todos los datos menos los 7 ultimos y\n# predecimos los 7 años que hemos quitado de la serie \nlibrosExtraPre <- rwf(librosIntra,  h = 7, drift = TRUE)\n\n# Vemos la calidad del ajuste. Primero la predicción y luego los datos reales\naccuracy(librosExtraPre, librosExtra)\n\n\n\n                    ME     RMSE      MAE    MPE  MAPE MASE  ACF1 Theil's U\nTraining set      0.00  5863.85  4279.52  -0.05  6.53 0.87 -0.19        NA\nTest set     -15817.32 15867.44 15817.32 -26.44 26.44 3.23 -0.21       6.4\n\n\nAtendiendo al MAPE se tiene que el error de previsión a un periodo vista en el periodo intra-muestral de 1993 a 2012 es del 6.5%; mientras que el error de previsión a largo plazo en el periodo extra-muestral de 2014 a 2019 es del 26.4%. Ademas, para el periodo extra-muestral el error medio (ME) es negativo y muy elevado, un indicativo de que las previsiones están segadas (sobrestiman la realidad). En resumen, la calidad del modelo se deteriora muy rápidamente en cuanto nos salimos de las condiciones óptimas.\nUn gráfico puede ayudar a entender este proceso de validación. En la Figura 4:\n\nLa línea de puntos vertical separa el periodo muestral (1993-2012) usado para estimar el modelo, del periodo extra-muestral (2013-2019) usado sólo para hacer las previsiones.\nLa serie Libros aparece como una línea sólida en negro, desde 1993 hasta 2019.\nLa previsión intra-muestral (a un periodo vista) de la serie Libros aparece como una línea azul.\nLa línea en rojo es la previsión extra-muestral a largo plazo. Observa que todas las previsiones están por encima del valor real de la serie.\nAl lado de cada previsión (intra- y extra-muestral) se ha indicado el error estimado (MAPE).\n\nClaramente estos resultados dependen del punto de corte seleccionado.\n\n\n\n\n\nFigura 4: Libros, predicción intra- y extra-muestral\n\n\n\n\n\n\n\n\n\n\nImportamcia del punto de corte\n\n\n\nPrueba a reservar las últimas 6 observaciones de la serie Libros y repite el análisis.\n\n\n\n\nSerie Nacimientos\nCalculamos de nuevo los diferentes criterios de bondad de ajuste para valorar la calidad de las previsiones extra-muestrales a largo plazo. En este caso vamos a reservar los últimos 36 meses como periodo extra-muestral.\n\nnacimientosIntra <- subset(nacimientos, end = length(nacimientos) - 36)\nnacimientosExtra <- subset(nacimientos, start = length(nacimientos) - 35)\n\nnacimientosExtraPre <- snaive(nacimientosIntra, h = 36)\n\naccuracy(nacimientosExtraPre, nacimientosExtra)\n\n\n\n                   ME    RMSE     MAE   MPE MAPE MASE ACF1 Theil's U\nTraining set  -529.76 1734.21 1389.62 -1.30 3.59 1.00 0.72        NA\nTest set     -2926.75 3221.74 2926.75 -9.57 9.57 2.11 0.69      1.89\n\n\n\n\n\n\n\nFigura 5: Nacimientos, predicción intra- y extra-muestral\n\n\n\n\nLas previsiones extra-muestrales muestran una menor pendiente que los casos reales de nacimientos. Así, conforme se avanza en el horizonte temporal las previsiones se van alejando de la realidad y el error extra-muestral es del 9.6%, no tan reducido como el error de estimación intra-muestral (3.6%).\n\n\nSerie Demanda eléctrica\nPara la serie de consumo eléctrico vamos a reservar las 8 últimas semanas (56 días) como periodo extra-muestral.\n\nelectricidadIntra <- subset(electricidad, end = length(electricidad) - 56)\nelectricidadExtra <- subset(electricidad, start = length(electricidad) - 55)\n\nelectricidadExtraPre <- snaive(electricidadIntra, h = 56)\n\naccuracy(electricidadExtraPre, electricidadExtra)\n\n\n\n                ME  RMSE   MAE   MPE  MAPE MASE ACF1 Theil's U\nTraining set -1.78 39.17 25.09 -0.41  3.57 1.00 0.68        NA\nTest set     59.30 86.23 73.54  7.82 10.14 2.93 0.48      1.55\n\n\nEl error intra-muestral obtenido es del 3.6%, que prácticamente se triplica al obtener el error de previsión extra-muestral (10.1%). El elevado valor positivo del error medio indica que las previsiones extra-muestrales subestiman el consumo real de electricidad."
  },
  {
    "objectID": "03-03-Tema3.html#validación-cruzada-para-series-temporales",
    "href": "03-03-Tema3.html#validación-cruzada-para-series-temporales",
    "title": "Métodos sencillos de predicción. Evaluación de predicciones",
    "section": "4.2 Validación cruzada para Series Temporales",
    "text": "4.2 Validación cruzada para Series Temporales\nHemos visto dos alternativas para evaluar la calidad de un método de predicción de series temporales, uno basado en predicciones intra-muestrales a un periodo vista y otro basado en predicciones extra-muestrales a largo plazo, ambas con sus inconvenientes.\nVeamos ahora una técnica, basada en el concepto de validación cruzada (cross validation) que permite obtener de forma individualizada los errores de previsión extra-muestral a un periodo vista, a dos periodos vista, etc.\nSupongamos que para estimar el modelo se necesita un mínimo de \\(k\\) observaciones y que se desea predecir hasta un horizonte temporal \\(h\\).\n\nSeleccionamos las observaciones \\(1,2,...,k\\) para estimar el modelo y predecimos las observaciones desde \\(k+1\\) hasta \\(k+h\\). Tenemos, por tanto, \\(h\\) predicciones.\nCalculamos el error de predicción para las predicciones desde \\(k+1\\) hasta \\(k+h\\).\nRepetimos este proceso desplazando el número de observaciones seleccionadas para la estimación un periodo adelante. Es decir, ahora usamos las observaciones \\(2,3,...,k+1\\) para estimar el modelo, predecimos las observaciones desde \\(k+2\\) hasta \\(k+1+h\\) y calculamos el error de predicción.\nIteramos el proceso, desplazando cada vez las observaciones de la estimación un periodo adelante.\nEn general para \\(i=0,1,...,T-k-h\\), donde \\(T\\) es el número total de observaciones:\n\nSeleccionamos las observaciones \\(i+1,i+2,...,i+k\\) para estimar el modelo.\nPredecimos las observaciones desde \\(i+k+1\\) hasta \\(i+k+h\\).\nCalculamos el error de predicción para las observaciones desde \\(i+k+1\\) hasta \\(i+k+h\\).\nPara cada horizonte temporal de predicción se calcula la medida de error deseada.\n\n\n\n\n\n\n\n\nFigura 6: Descripción del proceso de origen de predicción móvil\n\n\nEste procedimiento se denomina origen de predicción móvil (rolling forecast origin) o rolling windows.\nCuando se aplica esta metodología hay que tener en cuenta que los resultados pueden depender del número \\(k\\) de datos usados para la estimación del modelo.\n\nEjemplo de aplicación con Nacimientos\nVamos a aplicar la metodología previa a la serie anual de Nacimientos. Asumimos que se precisan veinte años para hacer una buena estimación, \\(k=20\\), y que el horizonte temporal es de cinco años, \\(h = 5\\). Como la serie es anual, usaremos el método de la deriva para predecir. La siguiente rutina permite obtener el MAPE para previsiones con un horizonte temporal desde uno a cinco años.\n\nnacAnual <- aggregate(nacimientos, FUN = sum)\nk <- 20                   #Minimo numero de datos para estimar\nh <- 5                    #Horizonte de las prediciciones\nTT <- length(nacAnual)    #Longitud serie\ns <- TT - k - h           #Total de estimaciones\n\nmapeRwf <- matrix(NA, s + 1, h)\nfor (i in 0:s) {\n  train.set <- subset(nacAnual, start = i + 1, end = i + k)\n  test.set <-  subset(nacAnual, start = i + k + 1, end = i + k + h)\n  \n  fcast <- rwf(train.set, h = h, drift = TRUE)\n  mapeRwf[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n}\n\nmapeRwf <- colMeans(mapeRwf)\nround(mapeRwf, 2)\n\n[1]  4.13  8.07 12.16 16.38 20.67\n\n\nEl error de previsión extra-muestral crece linealmente con el horizonte de previsión. Para el primer año el error de predicción se mantiene en un moderado 4.1%. Sin embargo, para el segundo año de predicción el MAPE salta al 8.1% y para los restantes años sigue creciendo rápidamente. Predecir usando la tendencia media solo es un buen método para predecir a un año vista.\n\n\nEjemplo de aplicación con Demanda eléctrica\nAhora aplicaremos la metodología origen de predicción móvil la serie de Demanda eléctrica. En este caso se asumirá que se precisan veinte semanas para hacer una buena estimación, \\(k = 140\\), y que el horizonte temporal es de 4 semanas, \\(h = 28\\). Como la serie tiene estacionalidad, usaremos el método ingenuo con estacionalidad para predecir. La siguiente rutina permite obtener el MAPE para previsiones con un horizonte temporal desde uno a 28 días.\n\nk <- 140                  #Minimo numero de datos para estimar\nh <- 28                   #Horizonte de las prediciciones\nTT <- length(electricidad)#Longitud serie\ns <- TT - k - h           #Total de estimaciones\n\nmapeRwf <- matrix(NA, s + 1, h)\nfor (i in 0:s) {\n  train.set <- subset(electricidad, start = i + 1, end = i + k)\n  test.set <-  subset(electricidad, start = i + k + 1, end = i + k + h)\n  \n  fcast <- snaive(train.set, h = h)\n  mapeRwf[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n}\n\nmapeRwf <- colMeans(mapeRwf)\nround(mapeRwf, 2)\n\n [1] 3.29 3.31 3.40 3.45 3.52 3.53 3.53 4.55 4.59 4.60 4.60 4.60 4.60 4.60 5.10\n[16] 5.12 5.12 5.13 5.14 5.18 5.28 6.29 6.35 6.41 6.48 6.54 6.61 6.72\n\n\nEl error de previsión extra-muestral crece lentamente con el horizonte de previsión. Para predicciones a un día vista el error de predicción es del 3.3%, para 14 días vista sube hasta el 4.6% y a 28 días vista alcanza el 6.7%."
  },
  {
    "objectID": "03-10-Ejemplo4.html",
    "href": "03-10-Ejemplo4.html",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "",
    "text": "1 Introducción\nConsideremos de nuevo la serie temporal correspondiente al número de pernoctaciones que los turistas extranjeros realizan en España en alojamientos turísticos autorizados (que llamaremos Pernoctaciones en adelante). Esta serie está disponible en Eurostat desde enero de 2000 hasta diciembre de 2019, un total de 20 años y 240 observaciones.\nLa serie presenta tendencia decreciente hasta finales de la primera década del presente siglo y luego creciente hasta los dos últimos años. La estacionalidad de orden 12 esta determinada por las vacaciones de verano. El esquema es multiplicativo.\n\nPernoctaciones <- read.csv2(\"./series/Pernoctaciones.csv\", \n                            header = TRUE)\nPernoctaciones <- ts(Pernoctaciones[, 2], \n                     start = 2000, \n                     frequency = 12)\n\n\nautoplot(Pernoctaciones/1000000,\n         xlab = \"\",\n         ylab = \"Noches (millones)\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(2000, 2020, 2)) \n\n\n\n\nFigura 1: Pernoctaciones\n\n\n\n\n\n\n\n\n\n2 Predicción por el método de las medias móviles\nVamos ajustar y predecir la serie de pernoctaciones por el método de las medias móviles. Como este método asume que la serie no tiene estacionalidad, vamos a trabajar con la serie anualizada de pernoctaciones, donde cada dato será el número de pernoctaciones anuales.\n\nPernoctaciones <- aggregate(Pernoctaciones/1000000, FUN = sum)\n\nautoplot(Pernoctaciones,\n         xlab = \"\",\n         ylab = \"Noches (millones)\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(2000, 2020, 2))  \n\n\n\n\nFigura 2: Pernoctaciones anuales\n\n\n\n\nDado que la serie tiene tendencia, no esperemos grandes resultados con el método de las medias móviles, ni en ajuste ni en calidad de las predicciones. Así usaremos nuestra función mmf.\n\nmmf <- function(x, r = 3, h = 5) {\n  z <- NULL\n  z$x <- x\n  z$orden = r\n  \n  TT <- length(x)\n  inicio <- start(x)\n  frecuencia <-frequency(x)\n  \n  z$mm <- stats::filter(x, rep(1/r, r), side = 1)\n  z$fitted <- ts(c(NA, z$mm[-TT]), start = inicio, freq = frecuencia)\n  z$mean <- ts(rep(z$mm[TT], h), start = time(x)[TT] + 1/frecuencia, freq = frecuencia)\n  z$residuals <- x - z$fitted\n  \n  class(z) <- \"forecast\"\n  z\n}\n\nVeamos primero los resultados asumiendo un orden de la media móvil de 4 años (\\(r = 4\\)) y realizando una predicción para los próximos 5 años (h = 5). La figura 3 muestra la serie Pernoctaciones, la serie ajustada y la predicción.\n\nmmPernoctaciones <- mmf(Pernoctaciones, \n                        r = 4, \n                        h = 5)\n\nautoplot(mmPernoctaciones,\n         xlab = \"\",\n         ylab = \"Noches\",\n         main = \"\") +\n  autolayer(mmPernoctaciones$fitted) +\n  theme(legend.position=\"none\")\n\n\n\n\nFigura 3: Pernoctaciones y predicción (doble media móvil de orden 4)\n\n\n\n\nUn desastre. El orden es muy elevado así que perdemos 4 observaciones al inicio, le cuesta capturar el primer cambio de tendencia –en la serie original tiene lugar en 2010 y en la serie estimada en 2013– y las predicciones no tienen en cuenta el descenso en las pernoctaciones ocurrido en los dos últimos años.\n\naccuracy(mmPernoctaciones)\n\n                   ME     RMSE      MAE      MPE     MAPE     MASE      ACF1\nTraining set 12.00632 21.00165 18.40444 4.162454 7.260456 1.966314 0.5940658\n\n\nAsí, no sorprenden los valores de los criterios de bondad de ajuste: un error porcentual de 7.3%, algo elevado y un error medio (RMSE) de 21 millones de pernoctaciones. Estos errores son superiores a los obtenidos con el método Ingenuo I y de la Deriva (RMSE = 12 millones de pernoctaciones; MAPE = 3.9%).\n\n\n\n\n\n3 Selección del orden y predicción usando origen de predicción móvil\nVamos a mejorar nuestra primera aproximación usando el método del origen de predicción móvil para identificar el orden óptimo de la doble media móvil según que la predicción sea de 1 a 5 años.\nConsideraremos órdenes desde 1 hasta 5, y asumiremos que el mínimo número de años para hacer las estimaciones es de 10\n\nk <- 10                   \nh <- 5                    \nTT <- length(Pernoctaciones)\ns <- TT - k - h           \n\n\nfor (r in 1:5) {\n\n  tmpMape <- matrix(NA, s + 1, h)\n  \n  for (i in 0:s) {\n  \n    train.set <- subset(Pernoctaciones, start = i + 1, end = i + k)\n    test.set <-  subset(Pernoctaciones, start = i + k + 1, end = i + k + h)\n    \n    fit <- mmf(train.set, r = r, h = 5)\n    tmpMape[i + 1, ] <- 100*abs(test.set - fit$mean)/test.set\n  }\n  tmpMape <- colMeans(tmpMape)\n \n  cat(\"\\nPara un orden de\", \n      r, \n      \"los errores son\", \n      formatC(tmpMape, format = \"f\", digits = 2))  \n}\n\n\nPara un orden de 1 los errores son 4.74 9.59 13.23 16.25 18.58\nPara un orden de 2 los errores son 5.83 10.69 14.27 17.27 19.54\nPara un orden de 3 los errores son 7.06 11.57 15.10 18.05 20.28\nPara un orden de 4 los errores son 8.09 12.28 15.76 18.67 20.91\nPara un orden de 5 los errores son 8.67 13.05 16.48 19.38 21.63\n\n\nCon independencia del horizonte temporal de predicción considerado, el error se hace mínimo para un orden de las medias móviles de 1, ¡el método Ingenuo I!. Además, el error para las predicciones extra-muestrales es solo aceptable a un año vista."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Iván Arribas",
    "section": "",
    "text": "Iván Arribas es licenciado en Ciencias Matemáticas con la especialidad de Estadística e Investigación Operativa, y doctor en Ciencias Económicas. Actualmente es Profesor Titular en el Departamento de Análisis Económico de la Universitat de València, donde lleva más de 25 años como docente e investigador."
  },
  {
    "objectID": "03-12-Ejemplo6.html#identificación",
    "href": "03-12-Ejemplo6.html#identificación",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "3.1 Identificación",
    "text": "3.1 Identificación\nVamos a identificar los valores de \\(p\\) y \\(q\\) a partir de auto.arima.\n\nauto.arima(Pernoctaciones, \n           d = 0)\n\nSeries: Pernoctaciones \nARIMA(1,0,1) with non-zero mean \n\nCoefficients:\n         ar1     ma1      mean\n      0.8827  0.5341  253.6161\ns.e.  0.1027  0.2803   24.1170\n\nsigma^2 = 136.3:  log likelihood = -77.21\nAIC=162.43   AICc=165.09   BIC=166.41\n\n\nSe identifica un proceso ARIMA(1, 0, 1) con constante. La estimación de este modelo muestra que el coeficiente asociado al proceso autorregresivo es significativo, pero no está claro que lo sea el coeficiente de la media móvil. El análisis del error no revela ningún error que supere las 2.5 desviaciones típicas (Figura 3).\n\narima101 <- Arima(Pernoctaciones, \n                  order = c(1, 0, 1),\n                  include.constant = TRUE)\n\nerror <- residuals(arima101)\nsderror <- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(2000, 2020, 2)) \n\n\n\n\nFigura 3: Error + Intervención"
  },
  {
    "objectID": "03-12-Ejemplo6.html#validación",
    "href": "03-12-Ejemplo6.html#validación",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "3.2 Validación",
    "text": "3.2 Validación\n\nVariables son significativas\nLos coeficientes asociados al proceso autorregresivo y la media (\\(\\phi_1\\) y \\(\\mu\\)) son significativos. El coeficiente de la media móvil (\\(\\theta_1\\)) no es significativo al 5% aunque si lo sería al 10%.\n\n# H0: phi1 = 0\nwald.test(b = coef(arima101), Sigma = vcov(arima101), Terms = 1)\n\nWald test:\n----------\n\nChi-squared test:\nX2 = 73.9, df = 1, P(> X2) = 0.0\n\n# H0: theta1 = 0\nwald.test(b = coef(arima101), Sigma = vcov(arima101), Terms = 2)\n\nWald test:\n----------\n\nChi-squared test:\nX2 = 3.6, df = 1, P(> X2) = 0.057\n\n# H0: constante = 0\nwald.test(b = coef(arima101), Sigma = vcov(arima101), Terms = 3)\n\nWald test:\n----------\n\nChi-squared test:\nX2 = 110.6, df = 1, P(> X2) = 0.0\n\n\nSi eliminamos el coeficiente de la media móvil y estimamos un modelo ARIMA(1, 0, 0) con constante, se puede comprobar que el nuevo modelo pierde ligeramente en calidad y presenta un ACF1 muy elevado, indicativo de que las fórmulas usadas para el cálculo del intervalo de confianza de las previsiones es incorrecto. Así, se opta por aceptar como válido el modelo ARIMA(1, 0 , 1) con constante.\n\n\n\n\nMedidas de error\nEl error medio es 10.8 millones de pernoctaciones (RMSE) y el error porcentual medio es 3.4% (MAPE).\n\naccuracy(arima101)\n\n\n\n               ME  RMSE  MAE  MPE MAPE MASE ACF1\nTraining set 1.03 10.76 8.06 0.17 3.45 0.86    0\n\n\n\n\nError de previsión extra-muestral según horizonte temporal\nAsumimos que se precisan diez años para hacer una buena estimación, \\(k=10\\), y que el horizonte temporal es tres años vista, \\(h = 3\\).\n\nk <- 10                  \nh <- 3                    \nT <- length(Pernoctaciones)     \ns <- T - k - h    \n\nmapeArima101 <- matrix(NA, s + 1, h)\n\nfor (i in 0:s) {\n  train.set <- subset(Pernoctaciones, start = i + 1, end = i + k)\n  test.set <-  subset(Pernoctaciones, start = i + k + 1, end = i + k + h) \n  \n  fit <- Arima(train.set, \n               include.constant = TRUE,\n               order = c(1, 0, 1))\n  \n  fcast <- forecast(fit, h = h)\n  \n  mapeArima101[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n}\n\nmapeArima101 <- colMeans(mapeArima101)\nmapeArima101\n\n[1]  6.537726 12.420501 15.659016\n\n\nEl error de previsión extra-muestral un periodo vista (6.5%) es notoriamente mayor que el error de estimación (3.9%). El error a dos y tres periodos vista supera el 10%."
  },
  {
    "objectID": "03-12-Ejemplo6.html#identificación-1",
    "href": "03-12-Ejemplo6.html#identificación-1",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "4.1 Identificación",
    "text": "4.1 Identificación\nIdentificaremos los valores de \\(p\\) y \\(q\\) a partir de auto.arima.\n\nauto.arima(Pernoctaciones, \n           d = 1)\n\nSeries: Pernoctaciones \nARIMA(0,1,0) \n\nsigma^2 = 146.4:  log likelihood = -74.33\nAIC=150.66   AICc=150.9   BIC=151.61\n\n\nSe identifica un proceso ARIMA(0, 1, 0) sin deriva, es decir un paseo aleatorio o método Ingenuo I. Tras estimar el modelo, el análisis del error revela de nuevo que no es necesaria la intervención (figura Figura 4).\n\narima010 <- Arima(Pernoctaciones, \n                  order = c(0, 1, 0),\n                  include.constant = FALSE)\n\narima010\n\nSeries: Pernoctaciones \nARIMA(0,1,0) \n\nsigma^2 = 146.4:  log likelihood = -74.33\nAIC=150.66   AICc=150.9   BIC=151.61\n\nerror <- residuals(arima010)\nsderror <- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(2000, 2020, 2))\n\n\n\n\nFigura 4: Error + Intervención"
  },
  {
    "objectID": "03-12-Ejemplo6.html#validación-1",
    "href": "03-12-Ejemplo6.html#validación-1",
    "title": "Pernoctaciones en alojamientos turísticos de turistas extranjeros",
    "section": "4.2 Validación",
    "text": "4.2 Validación\n\nMedidas de error\nEl error medio es 11.8 pernoctaciones (RMSE) y el error porcentual medio es 3.7% (MAPE). Los intervalos de confianza de las predicciones no son válidos.\n\naccuracy(arima010)\n\n\n\n               ME  RMSE MAE  MPE MAPE MASE ACF1\nTraining set 3.27 11.79 8.9 1.11  3.7 0.95 0.27\n\n\n\n\nError de previsión extra-muestral según horizonte temporal\nAsumimos que se precisan diez años para hacer una buena estimación, \\(k=10\\), y que el horizonte temporal es tres años vista, \\(h = 3\\).\n\nk <- 10                  \nh <- 3                    \nT <- length(Pernoctaciones)     \ns <- T - k - h    \n\nmapeArima010 <- matrix(NA, s + 1, h)\n\nfor (i in 0:s) {\n  train.set <- subset(Pernoctaciones, start = i + 1, end = i + k)\n  test.set <-  subset(Pernoctaciones, start = i + k + 1, end = i + k + h) \n  \n  fit <- Arima(train.set, \n               include.constant = FALSE,\n               order = c(0, 1, 0))\n  \n  fcast <- forecast(fit, h = h)\n  \n  mapeArima010[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n  \n}\n\nmapeArima010 <- colMeans(mapeArima010)\nmapeArima010\n\n[1]  5.095108  8.957097 11.429987\n\n\nEl error de previsión varia entre el 5.1% a un periodo vista y el 11.4% a tres periodos vista."
  },
  {
    "objectID": "03-06-Tema6.html#definición-e-hipótesis-sobre-el-proceso",
    "href": "03-06-Tema6.html#definición-e-hipótesis-sobre-el-proceso",
    "title": "Procesos ARIMA",
    "section": "2.1 Definición e hipótesis sobre el proceso",
    "text": "2.1 Definición e hipótesis sobre el proceso\nUn proceso estocástico \\(Y_t\\) es (sin excesiva precisión) una variable aleatoria que corresponde a momentos sucesivos del tiempo. A diferencia de los temas previos, en este vamos a estimar modelos sobre procesos estocásticos. Sería el equivalente para series temporales al modelo de regresión lineal que viste en el primer semestre para datos transversales.\nAl igual que en Predicción con datos transversales, la aplicación de estos modelos requiere del cumplimiento de una serie de hipótesis. Para el caso de series temporales el proceso debe ser estacionario, ergódico y normal. Veamos estas hipótesis con algo más de detalle."
  },
  {
    "objectID": "03-06-Tema6.html#proceso-estacionario",
    "href": "03-06-Tema6.html#proceso-estacionario",
    "title": "Procesos ARIMA",
    "section": "2.2 Proceso estacionario",
    "text": "2.2 Proceso estacionario\nUn proceso es estacionario en sentido estricto cuando la distribución conjunta no varía al realizar un desplazamiento en el tiempo de todas las variables.\n\nSi \\(F(Y_{t_1},..., Y_{t_k})\\) es la función de distribución conjunta y \\(h>0\\), entonces el proceso es estacionario en sentido estricto si \\[F(Y_{t_1},..., Y_{t_k}) = F(Y_{t_1+h},..., Y_{t_k+h})\\]\n\nIntuitivamente, la distribución de un proceso estocástico es independiente del momento del tiempo.\nComprobar si un proceso es estacionario en sentido estricto es muy difícil, así que vamos a encontrar condiciones suficientes: estacionariedad en media y en sentido amplio (covarianza). Bajo normalidad un proceso estacionario en sentido amplio también lo será en sentido estricto.\nProceso estacionario en media\nUn proceso es estacionario en media (o de primer orden) si su nivel se mantiene en el tiempo: \\[E[Y_t] = \\mu \\; \\; \\forall t\\]\nProceso estacionario en sentido amplio\nUn proceso (ya estacionario en media) es estacionario en sentido amplio, o de segundo orden, si sus momentos de orden dos no dependen del tiempo:\n\nLa (auto)covarianza entre dos periodos de tiempo es finita y sólo depende del intervalo de tiempo transcurrido entre estos dos periodos: \\[Cov[Y_t, Y_{t+k}] = E[(Y_t - \\mu)(Y_{t+k} - \\mu)] = \\gamma_k,\\,\\,\\,\\forall t\\]\n\nObserva que la varianza será entonces \\(Var[Y_t] = E[(Y_t - \\mu)^2] = \\gamma_0\\).\n\n\nLa Figura 1 muestra la serie Nacimientos que no es estacionaria ni en media, ni en varianza. No lo es en media por que presenta tendencia y, por tanto, el valor medio de la serie cambia en el tiempo; y no lo es estacionaria en varianza por que al inicio de la serie los datos presenta más variabilidad que a finales del siglo pasado.\n\n\n\n\n\nFigura 1: Nacimientos mensuales"
  },
  {
    "objectID": "03-06-Tema6.html#proceso-ergódico",
    "href": "03-06-Tema6.html#proceso-ergódico",
    "title": "Procesos ARIMA",
    "section": "2.3 Proceso ergódico",
    "text": "2.3 Proceso ergódico\nPara que un proceso sea ergódico las observaciones nuevas tienen que aportar suficiente información para que la varianza del valor medio converja a 0.\nUna condición necesaria, pero no suficiente, para que un proceso estacionario sea ergódico es: \\[\\lim_{k\\rightarrow \\infty} \\gamma_k = 0.\\] Es decir, que el pasado cada vez ayuda menos a entender el presente."
  },
  {
    "objectID": "03-06-Tema6.html#normalidad",
    "href": "03-06-Tema6.html#normalidad",
    "title": "Procesos ARIMA",
    "section": "2.4 Normalidad",
    "text": "2.4 Normalidad\nAsumiremos que el error del modelo se distribuye como una variable aleatoria normal. Esta hipótesis se puede relajar si la serie tiene suficientes datos."
  },
  {
    "objectID": "03-06-Tema6.html#ideas-generales",
    "href": "03-06-Tema6.html#ideas-generales",
    "title": "Procesos ARIMA",
    "section": "3.1 Ideas generales",
    "text": "3.1 Ideas generales\nUna serie temporal \\(\\{y_t\\}_{t=1}^T\\) no tiene porque verificar las condiciones de estacionariedad y ergodicidad. A continuación veremos una serie de transformaciones que convierten una serie no estacionaria en estacionaria; y no ergódica en ergódica.\nEn el panel superior de la Figura 2 vuelves a tener la serie de nacimientos, que denominaremos \\(y_t\\); en el segundo panel la diferencia de la serie, \\(y_t - y_{t-1}\\); y en el panel inferior tienes la diferencia de la transformación logarítmica de la serie, \\(log(y_t) - log(y_{t-1})\\). La serie nacimientos no es estacionaria en media ni en varianza, su diferencia es estacionaria en media, pero no en varianza. Sin embargo, la transformación logarítmica y la diferencia han logrado que sea estacionaria en ambos sentidos.\n\n\n\n\n\nFigura 2: Serie Nacimientos, su diferencia y la diferencia del logaritmo\n\n\n\n\nEn este tema veremos con detalle estas dos transformaciones para series sin estacionalidad y dejaremos para el tema siguiente el caso de las series con estacionalidad."
  },
  {
    "objectID": "03-06-Tema6.html#diferenciación",
    "href": "03-06-Tema6.html#diferenciación",
    "title": "Procesos ARIMA",
    "section": "3.2 Diferenciación",
    "text": "3.2 Diferenciación\nLa diferenciación permite transformar una serie no estacionaria en media en estacionaria en media.\nDiferenciar de orden \\(k\\) consiste en restar a la observación de un periodo la de \\(k\\) periodos antes: \\[\\nabla_k y_t = y_t - y_{t-k}.\\]\n\nDiferenciación regular (\\(k=1\\))\nUn caso concreto es la diferenciación regular o diferenciación de orden uno, que consiste en restar a la observación de un periodo la del periodo precedente: \\[\\nabla y_t = y_t - y_{t-1}.\\]\nSi \\(\\nabla y_t\\) no fuera estacionaria, se diferenciaría (regularmente) una segunda vez para obtener una doble diferenciación de primer orden: \\[\\nabla^{2} y_t = \\nabla(\\nabla y_t) = \\nabla y_t - \\nabla y_{t-1} = (y_t - y_{t-1}) - (y_{t-1} - y_{t-2}) = y_t - 2y_{t-1} + y_{t-2}\\]\nEn la práctica una sola diferenciación suele ser suficiente para obtener la estacionariedad en media; diferenciar dos veces es excepcional; y diferenciar tres o más veces no se da.\nExiste la diferencia estacional, que consiste en restar a la observación de un periodo la observación precedente de la misma estación y que veremos en detalle en el tema 7.\nAdemás, en series sin estacionalidad la diferenciación también permite alcanzar la ergodicidad.\nLa Figura 3 muestra un ejemplo de diferenciación regular. En el primer panel aparece la serie anual de Nacimientos \\(y_t\\); en el segundo panel se muestra la serie diferenciada regularmente una vez \\(\\nabla y_t\\); y en el panel inferior la serie doblemente diferenciada \\(\\nabla^2 y_t\\).\n\n\n\n\n\nFigura 3: Nacimientos (anual) y su primera y segunda diferencia regular\n\n\n\n\n¿Qué transformación para nacimientos consideras que genera una serie estacionaria? Siempre hay un cierto grado de subjetividad en la elección de las diferencias que hay que aplicar a una serie. En la Figura 3 podemos considerar que la diferenciación regular (panel medio) es suficiente para lograr la estacionariedad (en media y en varianza) y terminar el proceso de diferenciación. Pero también podemos considerar que la serie es no del todo estacionaria en media, y optar por la doble diferenciación regular (panel inferior).\n\n\nDiferenciación con R\nR dispone de la función diff para diferenciar una serie:\n\ndiff(x, lag = k) calcula la diferencia de orden \\(k\\), \\(\\nabla_k y_t\\)\ndiff(x) calcula la diferencia regular o de orden \\(1\\), \\(\\nabla y_t\\)\ndiff(x, difference = d) calcula \\(d\\) diferencias regulares, \\(\\nabla^d y_t\\)\n\nAdemás, en forecast está disponible la función ndiffs que estima el número de diferencias regulares necesarias para que una serie sea estacionaria. Para ello usa un contraste de raíces unitarias (que no veremos en este curso).\n\n\nOperador Retardo\nDefinimos el operador retardo \\(L\\) como \\(Ly_t = y_{t-1}\\), es decir, retrasa un periodo la serie. En inglés se denomina lag operator (L) o backward shift (B)\nAsí, se tiene que \\[L^k y_t = y_{t-k}\\] y por tanto que\n\\[\n\\begin{aligned}\n  \\nabla y_t & =  y_t - y_{t-1} = y_t - Ly_t = (1-L)y_t \\\\\n  \\nabla^d y_t & =  (1-L)^d y_t\n\\end{aligned}\n\\]\nLa Tabla 1 muestra un sencillo ejemplo del efecto del operador retardo sobre la serie \\(y_t\\)\n\n\n\n\nTabla 1: Ejemplo de aplicación del operador retardo\n\n\ny\nlag1_y\nlag2_y\nlag3_y\n\n\n\n\n1\nNA\nNA\nNA\n\n\n2\n1\nNA\nNA\n\n\n3\n2\n1\nNA\n\n\n4\n3\n2\n1\n\n\n5\n4\n3\n2\n\n\n6\n5\n4\n3\n\n\n7\n6\n5\n4"
  },
  {
    "objectID": "03-06-Tema6.html#transformación-logarítmica",
    "href": "03-06-Tema6.html#transformación-logarítmica",
    "title": "Procesos ARIMA",
    "section": "3.3 Transformación logarítmica",
    "text": "3.3 Transformación logarítmica\nSi la serie original no es estacionaria en sentido amplio –por ejemplo porque la amplitud estacional crece con el nivel de la serie–, es posible obtener la estacionariedad por medio de transformaciones simples. La transformación logarítmica de una serie es una alternativa1.\nLa Figura 4 muestra la serie Nacimientos y su logaritmo. La variabilidad estacional con la transformación logarítmica (panel inferior) es más constante que en la serie original (panel superior).\n\n\n\n\n\nFigura 4: Serie Nacimientos y su transformaciones logarítmica\n\n\n\n\nSin embargo, para series sin estacionalidad, el uso de la transformación logarítmica para alcanzar la estacionariedad en varianza es muy excepcional."
  },
  {
    "objectID": "03-06-Tema6.html#diferencia-logaritmo-y-tasa-de-variación",
    "href": "03-06-Tema6.html#diferencia-logaritmo-y-tasa-de-variación",
    "title": "Procesos ARIMA",
    "section": "3.4 Diferencia, Logaritmo y Tasa de variación",
    "text": "3.4 Diferencia, Logaritmo y Tasa de variación\nLa transformación \\(\\nabla y_t\\) se puede interpretar como variaciones en nivel, pero \\(\\nabla^2 y_t\\) no tiene ninguna interpretación. No conviene perder de vista la interpretabilidad de las observaciones.\nCuando una serie tiene que ser diferenciada dos veces para conseguir su estacionariedad, vale la pena probar una transformación alternativa que sea interpretable: \\(\\nabla \\log(y_t)\\).\nDado que, \\[\\nabla \\log(y_t) = \\log(y_t) - \\log(y_{t-1}) = \\log\\big(\\frac{y_t}{y_{t-1}} \\big)\n  \\approx \\frac{y_t}{y_{t-1}} - 1 = \\frac{y_t - y_{t-1}}{y_{t-1}} =TV y_t.\\]\npara una serie la diferencia regular del logaritmo (natural) es la Tasa de Variación de la serie, que tiene una clara interpretación como variación porcentual. Si la serie es anual, tendremos la tasa de variación anual; si es semanal, la tasa de variación semanal.\n\n\n\n\n\n\n\n\nLa diferenciacion y el logaritmo en series sin estacionalidad\n\n\n\nSi se tiene una serie sin estacionalidad y no estacionaria, bastará diferenciarla una o, a lo sumo, dos veces para que sea estacionaria en media, en sentido amplio y ergódica.\nLa transformación logarítmica se puede usar si se desea ganar en interpretabilidad o para intentar mejorar las predicciones. La transformación logarítmica no es necesaria para alcanzar la estacionariedad de la serie."
  },
  {
    "objectID": "03-06-Tema6.html#procesos-autorregresivos-arp",
    "href": "03-06-Tema6.html#procesos-autorregresivos-arp",
    "title": "Procesos ARIMA",
    "section": "5.1 Procesos autorregresivos AR(p)",
    "text": "5.1 Procesos autorregresivos AR(p)\n\nDefinición\nEl modelo general autorregresivo de orden p, \\(y_t \\sim AR(p)\\) viene definido por \\[y_t=c + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\ldots + \\phi_p y_{t-p} + \\varepsilon_t,\\] que usando el operador retardo queda \\[(1 - \\phi_1 L - \\phi_2 L^2 - \\ldots - \\phi_p L^p)y_t = c + \\varepsilon_t\\]\nEn este y en cualquier proceso ARIMA, al polinomio en \\(L\\) que acompaña a \\(y_t\\) se le denomina polinomio autorregresivo.\nSe suele asumir que el error del modelo \\(\\varepsilon_t\\) verifica las hipótesis estándar de media cero, incorrelación, homocedasticidad e idéntica distribución: \\(\\varepsilon_t \\sim iid(0, \\sigma^2)\\). En este curso no vamos a prestar atención a este conjunto de hipótesis porque no jugarán ningún papel en la elección del modelo óptimo –aquel con mejores predicciones.\n\n\nEjemplos\n\n\\(y_t \\sim AR(1): \\;\\;y_t = c + \\phi_1 y_{t-1} + \\varepsilon_t\\) o \\((1 - \\phi_1 L)y_t = c + \\varepsilon_t\\)\n\\(y_t \\sim AR(2): \\;\\;y_t = c + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\varepsilon_t\\) o \\((1 - \\phi_1 L - \\phi_2 L^2)y_t = c + \\varepsilon_t\\)"
  },
  {
    "objectID": "03-06-Tema6.html#procesos-en-medias-móviles-maq",
    "href": "03-06-Tema6.html#procesos-en-medias-móviles-maq",
    "title": "Procesos ARIMA",
    "section": "5.2 Procesos en medias móviles MA(q)",
    "text": "5.2 Procesos en medias móviles MA(q)\n\nDefinición\nEl modelo general en medias móviles de orden q, \\(y_t \\sim MA(q)\\) viene definido por \\[y_t=c + \\varepsilon_t + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2} + \\ldots + \\theta_q \\varepsilon_{t-q},\\] que usando el operador retardo queda \\[y_t = c + (1 + \\theta_1 L + \\theta_2 L^2 + \\ldots + \\theta_q L^q) \\varepsilon_t\\]\nEn este y en cualquier proceso ARIMA, al polinomio en \\(L\\) que acompaña a \\(\\varepsilon_t\\) se le denomina polinomio en medias móviles.\n\n\nEjemplos\n\n\\(y_t \\sim MA(1): \\;\\;y_t = c + \\varepsilon_t + \\theta_1 \\varepsilon_{t-1}\\) o \\(y_t = c + (1 + \\theta_1 L)\\varepsilon_t\\)\n\\(y_t \\sim MA(2): \\;\\;y_t=c + \\varepsilon_t + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2}\\) o \\(y_t = c + (1 + \\theta_1 L + \\theta_2 L^2)\\varepsilon_t\\)"
  },
  {
    "objectID": "03-06-Tema6.html#procesos-armapq",
    "href": "03-06-Tema6.html#procesos-armapq",
    "title": "Procesos ARIMA",
    "section": "5.3 Procesos ARMA(p,q)",
    "text": "5.3 Procesos ARMA(p,q)\n\nDefinición\nEl modelo general \\(y_t \\sim ARMA(p,q)\\) viene dado por \\[y_t = c + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\ldots + \\phi_p y_{t-p}  +\n        \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2} + \\ldots +\n        \\theta_q \\varepsilon_{t-q}+ \\varepsilon_t,\\] que usando el operador retardo queda \\[(1 - \\phi_1 L - \\ldots - \\phi_p L^p)y_t = c + (1 + \\theta_1 L + \\ldots + \\theta_q L^q) \\varepsilon_t.\\]\n\n\nEjemplos\n\n\\(y_t \\sim ARMA(1, 1): \\;\\;y_t = c + \\phi_1 y_{t-1} + \\theta_1 \\varepsilon_{t-1} + \\varepsilon_{t}\\) o \\((1 - \\phi_1 L)y_t = c + (1 + \\theta_1 L)\\varepsilon_t\\)\n\\(y_t \\sim ARMA(0, 0): \\;\\;y_t = c + \\varepsilon_{t}\\). Si \\(c = 0\\), a este proceso se le denomina ruido blanco."
  },
  {
    "objectID": "03-06-Tema6.html#proceso-arimapdq",
    "href": "03-06-Tema6.html#proceso-arimapdq",
    "title": "Procesos ARIMA",
    "section": "5.4 Proceso ARIMA(p,d,q)",
    "text": "5.4 Proceso ARIMA(p,d,q)\nSi la serie \\(y_t\\) no es estacionaria, pero tras diferenciarla \\(d\\) veces se hace estacionaria, diremos que la serie es integrada de orden \\(d\\): \\(y_t \\sim I(d)\\). Por tanto,\n\nuna serie estacionaria se indicará como \\(y_t \\sim I(0)\\)\n\\(y_t \\sim I(d)\\) es equivalente a \\(\\nabla^d y_t = (1 - L)^d y_t \\sim I(0)\\)\n\nUna serie \\(y_t\\) sigue un proceso \\(ARIMA(p,d,q)\\) si:\n\n\\(y_t \\sim I(d)\\), hay que diferenciarla \\(d\\) veces para hacerla estacionaria, y\n\\(\\nabla^d y_t \\sim ARMA(p,q)\\).\n\nEntonces, podemos escribir \\(y_t \\sim ARIMA(p,d,q)\\):\n\\[\\begin{equation*}\n  \\begin{array}{c@{\\qquad}c@{\\quad}ccc}\n   (1 - \\phi_1 L - \\ldots - \\phi_p L^p) & (1- L)^d y_t & = & c + (1 + \\theta_1 L + ... + \\theta_q L^q) \\varepsilon_t \\\\\n                           \\uparrow                            & \\uparrow      &   & \\uparrow \\\\\n                           AR(p)                               & I(d)          &   & MA(q)\n  \\end{array}\n\\end{equation*}\\]\n\nEjemplos\n\n\\(y_t \\sim ARIMA(1, 1, 1): \\;\\;(1 - \\phi_1 L)(1- L) y_t = c + (1 + \\theta_1 L) \\varepsilon_t\\) o \\(y_t = c + y_{t-1} + \\phi_1(y_{t-1} - y_{t-2}) + \\theta_1 \\varepsilon_{t-1} + \\varepsilon_t\\).\n\\(y_t \\sim ARIMA(0, 1, 0): \\;\\;(1- L) y_t = c + \\varepsilon_t\\) o \\(y_t = c + y_{t-1} + \\varepsilon_t\\). Si \\(c=0\\), tenemos un paseo aleatorio; si \\(c \\neq 0\\), tenemos un paseo aleatorio con deriva."
  },
  {
    "objectID": "03-06-Tema6.html#títulos-de-libros-y-panfletos",
    "href": "03-06-Tema6.html#títulos-de-libros-y-panfletos",
    "title": "Procesos ARIMA",
    "section": "7.1 Títulos de libros y panfletos",
    "text": "7.1 Títulos de libros y panfletos\nVamos a aplicar la metodología de Box-Jenkins a la serie Libros (número de títulos publicados anualmente en España desde 1993 hasta 2019).\n\nlibros <- read.csv2(\"./series/libros.csv\", header = TRUE)\nlibros <- ts(libros[, 2], start = 1993, frequency = 1)\n\nautoplot(libros,\n         xlab = \"\", \n         ylab = \"Titulos\", \n         main = \"\")\n\n\n\n\nFigura 7: Títulos publicados\n\n\n\n\n\nTransformación de la serie\nEl primer paso es transformar la serie original para que sea estacionaria. La Figura 8 muestra la gráfica temporal y la FAC para la serie original y su primera diferencia.\n\nautoplot(libros, xlab = \"\", ylab = \"\", main = \"\")\nautoplot(diff(libros), xlab = \"\", ylab = \"\", main = \"\")\nggAcf(libros, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(libros), xlab = \"\", ylab = \"\", main = \"\")\n\n\n\n\n\n\n\n\n(a) Serie original\n\n\n\n\n\n\n\n(b) Dif. de la serie\n\n\n\n\n\n\n\n\n\n(c) FAC serie original\n\n\n\n\n\n\n\n(d) FAC dif. de la serie\n\n\n\n\nFigura 8: Gráfica y FAC para Libros\n\n\nAdemás,\n\nndiffs(libros)\n\n[1] 1\n\n\nPodemos concluir que la primera diferencia de la serie Libros es estacionaria y ergódica. Es decir, \\(d=1\\) o \\(libros_t \\sim I(1)\\).\n\n\nIdentificación\nTras diferenciar la serie, vamos a identificar los valores de \\(p\\) y \\(q\\). Este es el proceso más difícil y para simplificar las cosas vamos a ayudarnos de la función auto.arima. Como ya hemos decidido el número de diferenciaciones, fijamos este parámetro con d = 1.\n\nauto.arima(libros, \n           d = 1, \n           trace = TRUE)\n\n\n ARIMA(2,1,2) with drift         : Inf\n ARIMA(0,1,0) with drift         : 529.2727\n ARIMA(1,1,0) with drift         : 531.8087\n ARIMA(0,1,1) with drift         : 531.8033\n ARIMA(0,1,0)                    : 527.5277\n ARIMA(1,1,1) with drift         : Inf\n\n Best model: ARIMA(0,1,0)                    \n\n\nSeries: libros \nARIMA(0,1,0) \n\nsigma^2 = 34911235:  log likelihood = -262.68\nAIC=527.36   AICc=527.53   BIC=528.62\n\n\nObserva como la identificación automática da como mejor modelo \\(p=q=0\\). Es decir \\(libros_t \\sim ARIMA(0,1,0)\\) sin deriva (sin constante), por tanto, sigue un paseo aleatorio: \\[libros_t = libros_{t-1} + \\varepsilon_t\\]\n\n\nEstimación\nAunque existe la función arima de stats, vamos a usar la función Arima de la librería forecast para estimar el modelo identificado por ser más versátil. El argumento order indica los valores de (p, d , q) como un vector y el argumento lógico include.constant indica si se desea incluir la constante \\(c\\) en el modelo.2.\n\narima010 <- Arima(libros, \n                 order=c(0, 1, 0), \n                 include.constant = FALSE)\narima010\n\nSeries: libros \nARIMA(0,1,0) \n\nsigma^2 = 34911235:  log likelihood = -262.68\nAIC=527.36   AICc=527.53   BIC=528.62\n\n\nNuestro modelo estimado es: \\(\\widehat{libros}_t = libros_{t-1}\\). La mejor predicción para un año, es la observación del año anterior, ¡el método ingenuo I!\n\n\nIntervención\nSe analiza si para algún año se observa un error atípico (por ejemplo 3 veces superior al error estándar). La Figura 9 muestra que en este caso en varios periodos, años 2008, 2009 y 2013, el residuo sobrepasa los dos errores estándar pero queda lejos de los tres errores estándar así que asumiremos que no hay valores atípicos.\n\nerror <- residuals(arima010)\nsderror <- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(1993, 2019, 2)) \n\n\n\n\nFigura 9: Error + Intervención\n\n\n\n\n\n\nMedidas de error\nEl error medio es 5798 títulos (RMSE) y el error porcentual medio (MAPE) es 6.88%.\n\naccuracy(arima010)\n\n\n\n                 ME    RMSE     MAE  MPE MAPE MASE  ACF1\nTraining set 868.03 5798.12 4358.32 1.29 6.88 0.96 -0.04\n\n\nAdemás, hay cierto sesgo (las previsiones intra-muestrales en media subestiman los datos reales) y la fórmula usada para la previsión por intervalo es correcta.\n\n\nPredicción\nUna vez validado el modelo podemos pasar a realizar predicciones, en este caso a 5 años vista.\n\nparima010 <- forecast(arima010, \n                      h = 5, \n                      level = 95)\nparima010\n\n     Point Forecast    Lo 95    Hi 95\n2020          64154 52573.41 75734.59\n2021          64154 47776.57 80531.43\n2022          64154 44095.83 84212.17\n2023          64154 40992.82 87315.18\n2024          64154 38259.01 90048.99\n\n\n\nautoplot(parima010, \n         xlab = \"\", \n         ylab = \"Títulos\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1993, 2024, 2)) \n\n\n\n\nFigura 10: Libros (1993-2019) y predicción (2020-2024)\n\n\n\n\nLa Figura 10 muestra la serie, la previsión y el intervalo de confianza al 95%. La predicción es constante e igual al último dato. En las series diferenciadas el intervalo de confianza de las predicciones crece muy rápidamente porque los errores se van acumulando sin ningún tipo de amortiguamiento."
  },
  {
    "objectID": "03-06-Tema6.html#aforo-de-vehículos",
    "href": "03-06-Tema6.html#aforo-de-vehículos",
    "title": "Procesos ARIMA",
    "section": "7.2 Aforo de vehículos",
    "text": "7.2 Aforo de vehículos\nVamos a aplicar de nuevo la metodología de Box-Jenkins a la serie aforo de vehículos por Oropesa, carretera N-340, km. 996,48 (fuente Ministerio de Fomento). La serie es anual de 1960 a 2019 (60 datos).\n\naforo <- read.csv2(\"./series/aforo_oropesa.csv\", header = TRUE)\naforo <- ts(aforo, start = 1960, freq = 1)\n\nautoplot(aforo, \n         xlab = \"\", \n         ylab = \"Vehículos (000)\",\n         main = \"\")\n\n\n\n\nFigura 11: Aforo de vehículos en N-340, Oropesa\n\n\n\n\nEn este ejemplo incluiremos, por primera vez, intervención y veremos como la presencia de valores atípicos puede distorsionar el proceso de identificación automática. Por ello, es conveniente realizar en paralelo ambas actividades, identificar el proceso y detectar valores atípicos.\n\n\n\nTransformación de la serie\nLa Figura 12 muestra que la serie Aforo no es estacionaria. Así, el primer paso es transformar la serie original para que lo sea. La serie no es estacionaria, pero sí lo es su primera diferencia. Ten siempre presente que diferenciar más veces de las necesarias puede dificultar la identificación y la interpretación. Por otro lado, la función ndiffs aconseja una diferenciación. Así, optamos por fijar \\(d = 1\\).\n\nautoplot(aforo, xlab = \"\", ylab = \"\", main = \"\")\nautoplot(diff(aforo), xlab = \"\", ylab = \"\", main = \"\")\nggAcf(aforo, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(aforo), xlab = \"\", ylab = \"\", main = \"\")\n\n\n\n\n\n\n\n\n(a) Serie original\n\n\n\n\n\n\n\n(b) Dif. de la serie\n\n\n\n\n\n\n\n\n\n(c) FAC serie original\n\n\n\n\n\n\n\n(d) FAC dif. de la serie\n\n\n\n\nFigura 12: Gráfica y FAC para Aforo\n\n\n\nndiffs(aforo)\n\n[1] 1\n\n\n\n\n\n\nIdentificación y Estimación\nVeamos a identificar los valores de \\(p\\) y \\(q\\) a partir de auto.arima, indicándole que d = 1. La función sugiere un proceso ARIMA(2,1,2).\n\nauto.arima(aforo, d = 1)\n\nSeries: aforo \nARIMA(2,1,2) \n\nCoefficients:\n         ar1      ar2      ma1     ma2\n      1.3202  -0.6730  -1.2817  0.9363\ns.e.  0.1311   0.1194   0.0979  0.1955\n\nsigma^2 = 642488:  log likelihood = -477.45\nAIC=964.91   AICc=966.04   BIC=975.3\n\n\nUna forma rápida, aunque imprecisa, de determinar si un coeficiente es relevante (significativo) es compararlo con su error estándar (standard error, s.e). Si el coeficiente es mayor que dos veces su error estándar, hay evidencia de que es significativo. En la salida de R, en la tabla Coefficients tienes en la primera fila el nombre de los coeficientes (ar en lugar de \\(\\phi\\) y ma en lugar de \\(\\theta\\)); su valor aparece en la segunda fila de la tabla; y los errores estándar en la tercera fila (encabezada por s.e.). Todos los coeficientes estimados superan las dos desviaciones estándar y parece que son significativos.\nVamos a ver la gráfica de los residuos del modelo ARIMA(2,1,2) para identificar los valores extremos (intervención).\n\narima212 <- Arima(aforo, \n                  order = c(2, 1, 2),\n                  include.constant = FALSE)\n\nerror <- residuals(arima212)\nsderror <- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(1960, 2020, 4)) \n\n#time(error)[abs(error) > 2.5*sderror]\n\n\n\n\nFigura 13: Error + Intervención\n\n\n\n\nSe identifican dos posibles valores extremos en los años 1979 y 2011 (el error supera las 2.5 desviaciones típicas). Ahora, creamos una variable ficticia asociada a cada año, que denominaremos d1979 y d2011, y las incluimos en la auto-identificación.\n\nd1979 <- 1*(time(error) == 1979)\nd2011 <- 1*(time(error) == 2011)\n\nauto.arima(aforo,\n           d = 1,\n           xreg = cbind(d1979,  d2011))\n\nSeries: aforo \nRegression with ARIMA(2,1,0) errors \n\nCoefficients:\n         ar1     ar2       d1979       d2011\n      0.1852  0.4420  -1716.4503  -1194.6499\ns.e.  0.1181  0.1206    489.4467    455.9998\n\nsigma^2 = 593139:  log likelihood = -474.07\nAIC=958.14   AICc=959.27   BIC=968.53\n\n\nObserva como la inclusión de intervención modifica la auto-identificación, que ahora es un proceso ARIMA(2,1,0).\n\narima210 <- Arima(aforo, \n                  order = c(2, 1, 0),\n                  include.constant = FALSE,\n                  xreg = cbind(d1979, d2011))\narima210\n\nSeries: aforo \nRegression with ARIMA(2,1,0) errors \n\nCoefficients:\n         ar1     ar2       d1979       d2011\n      0.1852  0.4420  -1716.4503  -1194.6499\ns.e.  0.1181  0.1206    489.4467    455.9998\n\nsigma^2 = 593139:  log likelihood = -474.07\nAIC=958.14   AICc=959.27   BIC=968.53\n\n\nLa Figura 14 muestra que para ningún año se observa un error atípico. Es decir, no es necesaria más intervención.\n\nerror <- residuals(arima210)\nsderror <- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(1960, 2020, 4)) \n\n\n\n\nFigura 14: Error + Intervención\n\n\n\n\n\n\n\n\nValidación\nLa identificación de errores atípicos –para la posterior inclusión de sus variables de intervención asociadas– ha sido un tanto arbitraria: ¿es atípico el error que supera las 2 desviaciones típicas, las dos y media, las tres desviaciones típicas?\nA fin de poner un poco de objetividad en la decisión, podemos ver si sus coeficientes son significativos y dejar solo aquellas variables de intervención cuyo coeficientes lo sean. Aunque si la serie es suficientemente larga, también podríamos saltarnos este paso y dejar las variables de intervención que mejoren las predicciones extra-muestrales del modelo o las que recojan efectos conocidos.\nLa prueba de Wald permite contrastar si un subconjunto de coeficientes es significativo (se precisa la librería aod). Esta función requiere de tres argumentos: el vector de coeficientes (b), su matriz de covarianzas (Sigma) y la posición de los coeficientes cuya significatividad conjunta deseamos contrastar (Terms). Los dos primeros argumentos los podemos obtener del objeto arima210 con las funciones coef y vcov.\nPor ejemplo, para ver la significatividad de la primera variable de intervención (tercer coeficiente del modelo), tendríamos\n\nwald.test(b = coef(arima210), \n          Sigma = vcov(arima210), \n          Terms = 3)\n\nWald test:\n----------\n\nChi-squared test:\nX2 = 12.3, df = 1, P(> X2) = 0.00045\n\n\nCon algo más de código se puede comprobar qué coeficientes estimados son significativos.\n\nancho <- max(nchar(names(coef(arima210)))) + 2\nfor(i in 1:length(coef(arima210))) {\n  wt <- wald.test(b = coef(arima210), \n                  Sigma = vcov(arima210), \n                  Terms = i)\n  cat(\"\\nCoeficiente: \", \n      format(names(coef(arima210))[i], width = ancho), \n      \"valor de p: \", \n      formatC(wt$result$chi2[3], digits = 4, format = \"f\"))\n}\n\n\nCoeficiente:  ar1     valor de p:  0.1168\nCoeficiente:  ar2     valor de p:  0.0002\nCoeficiente:  d1979   valor de p:  0.0005\nCoeficiente:  d2011   valor de p:  0.0088\n\n\nLas dos variables de intervención son significativas y el coeficiente \\(\\phi_2\\) (ar2) también. No es significativo el coeficiente \\(\\phi_1\\) (ar1), pero no lo podemos eliminar. Los modelos Arima son modelos jerárquicos donde la presencia de un coeficiente significativo de cierto orden exige que los coeficientes de orden inferior estén presentes, sean o no significativos. En nuestro caso, como el coeficiente \\(\\phi_2\\) es significativo, se debe dejar en el modelo el coeficiente \\(\\phi_1\\).\nConfirmamos que \\(aforo_t \\sim ARIMA(2,1,0)\\) con intervención.\n\n\n\n\nMedidas de error\nEl error medio es 737 miles de vehículos (RMSE) y el error porcentual medio (MAPE) es 5.67%. No hay sesgo de predicción y las fórmulas empleadas para el cálculo de los intervalos de confianza de las predicciones son válidos.\n\naccuracy(arima210)\n\n\n\n               ME   RMSE    MAE  MPE MAPE MASE ACF1\nTraining set 47.2 737.37 535.16 1.32 5.67 0.79 0.04\n\n\n\n\n\n\nInterpretación del modelo\nEl modelo teórico es \\(aforo_t \\sim ARIMA(2,1,0) + d1979 + d2011\\): \\[(1 - \\phi_1 L - \\phi_2 L^2)(1 - L)aforo_t =  \\varepsilon_t + \\gamma_1 \\cdot d1979 + \\gamma_2 \\cdot d2011.\\]\nSi desarrollamos, queda: \\[aforo_t = aforo_{t-1} + \\phi_1(aforo_{t-1}-aforo_{t-2}) + \\phi_2(aforo_{t-2}-aforo_{t-3}) +\\] \\[\\gamma_1 \\cdot d1979 +  \\gamma_2 \\cdot d2011 + \\varepsilon_t.\\]\nFinalmente, el modelo estimado es: \\[\\widehat{aforo}_t = aforo_{t-1} + 0.19(aforo_{t-1}-aforo_{t-2}) + 0.44(aforo_{t-2}-aforo_{t-3})\\] \\[-1716 \\cdot d1979 -1195 \\cdot d2011\\] Cada año el aforo es el mismo que el aforo del año pasado más un 19% del último incremento observado y un 44% del incremento anterior.\nRespecto de la intervención, en 1979 hubo un 1.7 millones menos de vehículos de lo esperado, debido a la apertura de la autopista AP-7 y en 2011 hubo 1.2 millones menos de vehículos, posiblemente debido a la Gran Recesión.\n\n\nPredicción\nComo hemos incluido dos variables ficticias en el ajuste, de cara a predecir el aforo hemos de indicar cuales serán los valores futuros para estas variables. En este caso serán cero puesto que son intervenciones que no responden a un efecto calendario. La causa detrás de estas dos intervenciones no se espera que se repitan en el futuro.\nEn R esto se hace incluyendo en el comando forecast el argumento xreg = cbind(rep(0, 5), rep(0, 5)) que añade cinco ceros por cada variable de intervención porque la predicción va a ser a cinco años vista.\n\nparima210 <- forecast(arima210, \n                      h = 5, \n                      level = 95,\n                      xreg = cbind(d1979=rep(0, 5), d2011=rep(0, 5)))\nparima210\n\n     Point Forecast    Lo 95    Hi 95\n2020       9700.908 8191.432 11210.38\n2021       9647.604 7306.822 11988.39\n2022       9643.437 6212.738 13074.14\n2023       9619.103 5212.971 14025.24\n2024       9612.754 4207.919 15017.59\n\n\n\nautoplot(parima210, \n         xlab = \"\",\n         ylab = \"Vehículos (000)\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1960, 2024, 4)) \n\n\n\n\nFigura 15: Aforo (1960-2019) y predicción (2020-2024)\n\n\n\n\n\n\n\n\nValidación con origen de predicción móvil\nVamos a calcular el error extra-muestral según el horizonte temporal de previsión. En este caso, la presencia de variables de intervención hace el código algo más complejo.\nAsumiremos que se precisan 30 años para estimar el modelo, fijaremos el horizonte temporal en 5 años y calcularemos el error MAPE, que para la predicción intra-muestral era de 5.7%.\n\nk <- 30                  \nh <- 5                    \nT <- length(aforo)     \ns <- T - k - h    \n\nmapeArima <- matrix(NA, s + 1, h)\n\nX <- data.frame(cbind(d1979, d2011))\n\nfor (i in 0:s) {\n  train.set <- subset(aforo, start = i + 1, end = i + k)\n  test.set <-  subset(aforo, start = i + k + 1, end = i + k + h) \n  \n  X.train <- data.frame(X[(i + 1):(i + k),])\n  hay <- colSums(X.train)\n  X.train <- X.train[, hay>0]\n  \n  X.test <- data.frame(X[(i + k + 1):(i + k + h),])\n  X.test <- X.test[, hay>0]\n  \n  if (length(X.train) > 0) {\n    fit <- Arima(train.set, \n                 include.constant = FALSE,\n                 order = c(2, 1, 0),\n                 xreg=as.matrix(X.train))\n    \n    fcast <- forecast(fit, h = h, xreg = as.matrix(X.test))\n  } else {\n      fit <- Arima(train.set, \n                 include.constant = FALSE,\n                 order = c(2, 1, 0))\n    \n      fcast <- forecast(fit, h = h)\n  }\n  \n  mapeArima[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n  \n}\n\nmapeArima <- colMeans(mapeArima)\nmapeArima\n\n[1]  5.651824  9.691844 14.902944 19.538856 23.247141\n\n\nEl error de previsión extra-muestral crece notablemente con el horizonte temporal. El error de las previsiones a un año vista es del 5.7%, prácticamente igual al error intra-muestral, pero para dos años vista casi alcanza el 10% y a cinco años vista supera el 20%."
  },
  {
    "objectID": "03-06-Tema6.html#consumo-de-alimentos-en-el-hogar-per-cápita",
    "href": "03-06-Tema6.html#consumo-de-alimentos-en-el-hogar-per-cápita",
    "title": "Procesos ARIMA",
    "section": "7.3 Consumo de alimentos en el hogar per cápita",
    "text": "7.3 Consumo de alimentos en el hogar per cápita\nAnalizaremos el consumo alimentario en hogar per cápita en España. Esta serie está construida a partir de la serie de consumo alimentario en hogar (disponible en el Ministerio de Agricultura, Alimentación y Medio Ambiente), y la serie de población (disponible en el Instituto Nacional de Estadística). Es una serie anual de 1987 a 2021 (35 datos) y la unidad es el Kg per cápita. La Figura 16 muestra que es una serie estacionaria.\n\nalimentospc <- read.csv2(\"./series/alimentacionpc.csv\", header = TRUE)\nalimentospc <- ts(alimentospc, start = 1987, freq = 1)\n    \nautoplot(alimentospc, \n         xlab = \"\", \n         ylab = \"Kg per cápita\",\n         main = \"\",\n         ylim = c(0, 700))\n\n\n\n\nFigura 16: Consumo alimentario en hogar\n\n\n\n\nEl pico en el año 2020 se debe al aumento del consumo de alimentos en el hogar causado por el periodo de confinamiento por la Covid-19 (marzo a junio) y el aumento del tele-trabajo.\n\nTransformación de la serie\nLa Figura 17 indica que la serie original ya es estacionaria y la función ndiffs lo corrobora. Por tanto asumimos que \\(d=0\\) o \\(alimentospc_t \\sim I(0)\\).\n\nautoplot(alimentospc, xlab = \"\", ylab = \"\", main = \"\")\nautoplot(diff(alimentospc), xlab = \"\", ylab = \"\", main = \"\")\nggAcf(alimentospc, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(alimentospc), xlab = \"\", ylab = \"\", main = \"\")\n\n\n\n\n\n\n\n\n(a) Serie original\n\n\n\n\n\n\n\n(b) Dif. de la serie\n\n\n\n\n\n\n\n\n\n(c) FAC serie original\n\n\n\n\n\n\n\n(d) FAC dif. de la serie\n\n\n\n\nFigura 17: Gráfica y FAC para Alimentos\n\n\n\nndiffs(alimentospc)\n\n[1] 0\n\n\n\n\nIdentificación y Estimación\nPara identificar los valores de \\(p\\) y \\(q\\) veremos que nos sugiere auto.arima :\n\nauto.arima(alimentospc,\n            d = 0)\n\nSeries: alimentospc \nARIMA(1,0,0) with non-zero mean \n\nCoefficients:\n         ar1      mean\n      0.3359  638.4829\ns.e.  0.1711    3.8911\n\nsigma^2 = 254.2:  log likelihood = -145.61\nAIC=297.22   AICc=297.99   BIC=301.88\n\n\nLa identificación automática sugiere un proceso AR(1) con constante. El coeficiente de la constante (“mean” en la salida) es significativo –su valor supera dos veces su error estándar–, pero el del proceso autorregresivo no está tan claro.\nVamos a ver la gráfica de los residuos de este proceso para identificar rápidamente si hay valores extremos (Figura 18).\n\narima100 <- Arima(alimentospc, \n                  include.constant = TRUE,\n                  order = c(1, 0, 0))\n\nerror <- residuals(arima100)\nsderror <- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 2, 3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), \n             lty = 2) + \n  geom_point() +\n  scale_x_continuous(breaks= seq(1987, 2021, 3)) \n\n#time(alimentospc)[abs(error) > 2 * sderror]\n\n\n\n\nFigura 18: Error + Intervención\n\n\n\n\nHay un claro valor extremos en 2020. Tras incluirla y estimar el nuevo modelo aparecen otras variables de intervención asociadas a los años 1993, 1995 y 2009. Aunque ninguna supera las 2.5 desviaciones típicas, su efecto es significativo.\n\nd1993 <- 1* (time(alimentospc) == 1993)\nd1995 <- 1* (time(alimentospc) == 1995)\nd2009 <- 1* (time(alimentospc) == 2009)\nd2020 <- 1* (time(alimentospc) == 2020)\n\narima100 <- Arima(alimentospc, \n                  include.constant = TRUE,\n                  order = c(1, 0, 0),\n                  xreg = cbind(d1993, d1995, d2009, d2020))\narima100\n\nSeries: alimentospc \nRegression with ARIMA(1,0,0) errors \n\nCoefficients:\n         ar1  intercept    d1993     d1995    d2009    d2020\n      0.8164   638.5062  21.9317  -15.8202  21.3736  55.8455\ns.e.  0.1153     7.7231   7.1062    7.1049   7.1063   7.1295\n\nsigma^2 = 101.5:  log likelihood = -127.76\nAIC=269.53   AICc=273.67   BIC=280.41\n\n\n\n\nValidación\nTanto \\(\\phi_1\\) como el intercepto \\(\\mu\\) y las variables de intervención son significativas.\n\nwald.test(b = coef(arima100), Sigma = vcov(arima100), Terms = 1)\n\nWald test:\n----------\n\nChi-squared test:\nX2 = 50.2, df = 1, P(> X2) = 0.0000000000014\n\nwald.test(b = coef(arima100), Sigma = vcov(arima100), Terms = 2)\n\nWald test:\n----------\n\nChi-squared test:\nX2 = 6835.1, df = 1, P(> X2) = 0.0\n\nwald.test(b = coef(arima100), Sigma = vcov(arima100), Terms = 3)\n\nWald test:\n----------\n\nChi-squared test:\nX2 = 9.5, df = 1, P(> X2) = 0.002\n\nwald.test(b = coef(arima100), Sigma = vcov(arima100), Terms = 4)\n\nWald test:\n----------\n\nChi-squared test:\nX2 = 5.0, df = 1, P(> X2) = 0.026\n\nwald.test(b = coef(arima100), Sigma = vcov(arima100), Terms = 5)\n\nWald test:\n----------\n\nChi-squared test:\nX2 = 9.0, df = 1, P(> X2) = 0.0026\n\nwald.test(b = coef(arima100), Sigma = vcov(arima100), Terms = 6)\n\nWald test:\n----------\n\nChi-squared test:\nX2 = 61.4, df = 1, P(> X2) = 0.0000000000000048\n\n\nConsideraremos que \\(alimentospc_t \\sim ARIMA(1,0,0)\\) con constante e intervención.\n\n\nMedidas de error\nEl error medio es 9.2 Kg per cápita (RMSE) y el error porcentual medio (MAPE) es 1.2%. No hay sesgo y los intervalos de confianza de las predicciones son correctos.\n\naccuracy(arima100)\n\n\n\n                ME RMSE  MAE   MPE MAPE MASE ACF1\nTraining set -1.26 9.17 7.57 -0.22 1.19 0.62 0.05\n\n\n\n\nInterpretación del modelo\nEl modelo teórico identificado es \\[(1 - \\phi_1 L) alimentospc_t = c + \\gamma_1 d1993 + \\gamma_2 d1995 + \\gamma_3 d2009 + \\gamma_4 d2020 + \\varepsilon_t,\\] que desarrollando queda \\[alimentospc_t = c + \\phi_1 alimentospc_{t-1} + \\gamma_1 d1993 + \\gamma_2 d1995 + \\gamma_3 d2009 + \\gamma_4 d2020 + \\varepsilon_t.\\]\nFinalmente, el modelo estimado es \\[\\widehat{alimentospc}_t = 117.2 + 0.82 \\cdot alimentospc_{t-1} +\\] \\[21.93\\cdot d1993 - 15.82\\cdot d1995 + 21.37\\cdot d2009 + 55.85\\cdot d2020\\]\n\n\n\n\n\n\nLa contante del modelo teórico y la media del modelo estimado\n\n\n\nEl término contante \\(\\mu\\) que estima R no es el valor “c” que hemos visto en la teoría. Para convertir la contante estimada por R en “c” hemos de multiplicarla por el polinomio autorregresivo. En este caso, \\[c = \\mu \\cdot (1 - \\phi_1) = 638.5062\\cdot(1 - 0.8164) = 117.23\\]\n\n\nCada año el consumo de alimentos per cápita en el hogar es 117.2 kilos más un 82% del consumo del año pasado.\nEn 2020, debido al efecto combinado del periodo de confinamiento entre marzo y junio y el incremento del trabajo en casa, se produjo un fuerte aumento del consumo de alimentos en el hogar, estimado en 56 Kg. per cápita. En 1993 y 2009 el consumo medio de alimentos per cápita fue entre 21 y 22 kg superior a los esperado. Posiblemente, este incremento se deba al aumento del paro y la caída de los ingresos debida al crisis de 1993 y la Gran Recesión (2008-2014), respectivamente. Finalmente, en 1995 se observa un consumo 16 kg. menor de lo esperado.\n\n\nPredicciones de la serie\n\nparima100 <- forecast(arima100, \n                      h = 5, \n                      level = 95,\n                      xreg = cbind(rep(0, 5), rep(0, 5), rep(0, 5), rep(0, 5)))\nparima100\n\n     Point Forecast    Lo 95    Hi 95\n2022       626.9791 607.2378 646.7203\n2023       629.0957 603.6114 654.5800\n2024       630.8237 602.1434 659.5040\n2025       632.2344 601.6088 662.8600\n2026       633.3860 601.5298 665.2422\n\n\nPuedes comprobar que cada valor de la predicción se ha obtenido a partir del modelo estimado, donde \\(alimentospc_{t-1}\\) se sustituye por la predicción del año precedente.\n\nautoplot(parima100, \n         xlab = \"\",\n         ylab = \"Kilos per cápita\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1986, 2026, 4)) \n\n\n\n\nFigura 19: Consumo de alimentos y predicción"
  },
  {
    "objectID": "03-06-Tema6.html#comparación-con-alisado-exponencial",
    "href": "03-06-Tema6.html#comparación-con-alisado-exponencial",
    "title": "Procesos ARIMA",
    "section": "7.4 Comparación con alisado exponencial",
    "text": "7.4 Comparación con alisado exponencial\nVeamos una comparativa, para los tres ejemplos vistos, entre los resultados obtenidos con ARIMA y con Alisado exponencial.\n\nLibros:\n\nMAPE ARIMA: \\(6.88\\%\\) - ARIMA(0,1,0) sin deriva\nMAPE ETS: \\(6.90\\%\\) - ETS(M,N,N), \\(\\alpha=1\\)\nAmbos métodos han estimado el mismo modelo.\n\n\n\nAforo:\n\nMAPE ARIMA: \\(5.67\\%\\) - ARIMA(2,1,0) sin deriva, con intervención\nMAPE ETS: \\(6.09\\%\\) - ETS(M,A,N), \\(\\alpha=1\\), \\(\\beta=0.1\\)\nCada método estima un modelo diferente\nARIMA tiene menor error a costa de incluir variables de intervención\n\n\n\nAlimentos per cápita:\n\nMAPE ARIMA: \\(1.19\\%\\) - ARIMA(1,0,0) con constante e intervención\nMAPE ETS: \\(1.93\\%\\) - ETS(A,N,N), \\(\\alpha = 0.37\\)\nCada método ha estimado un modelo diferente\nARIMA tiene menor error a costa de incluir variables de intervención"
  },
  {
    "objectID": "04-02-Multiples_CS.html#descomposición",
    "href": "04-02-Multiples_CS.html#descomposición",
    "title": "Múltiples componentes estacionales",
    "section": "2.1 Descomposición",
    "text": "2.1 Descomposición\nPodemos descomponer la serie de forma análoga a como se hacia para series con una componente estacional usando la función mstl.\n\ndescomposicion <- mstl(electricidad)\nautoplot(descomposicion) \n\n\n\n\nFigura 2: Descomposición de Consumo eléctrico por hora\n\n\n\n\nEn la Figura 2 aparecen los mismos paneles que has visto en el tema 2 –datos originales, tendencia y residuo–, más los dos paneles correspondientes a las dos componentes estacionales, de orden 24 y 168.\nPara poder interpretar adecuadamente cada serie hay que fijarse en la escala de los ejes verticales. La tendencia apenas cambia en el periodo de análisis. Las dos componentes estacionales oscilan sobre un rango de valores mayor. Dentro de cada día el consumo de electricidad oscila aproximadamente 12 GWh entre las horas pico y las valle: en los picos se consumen unos 5 GWh más que la media diaria, y en los valles unos 7 GWh menos que la media diaria. Por otro lado, el rango de variación semanal en el consumo también es de aproximadamente 12 GWh: de lunes a viernes se consumen unos 3 GWh más que la media semanal y los domingo unos 9 GWh menos.\nAunque por defecto mstl permite que la componente estacional varíe en el tiempo, vamos a mostrar un detalle de la componente estacional diaria, semana y su composición para la primera semana de la serie (véase Figura 3).\n\n\ncompEstDiaria <- descomposicion[1:24,3]\ncompEstSemanal <- descomposicion[1:168,4]\ncompEstCompleta <- descomposicion[1:168,3] + descomposicion[1:168,4]\n\nggplot() + \n  geom_line(aes(x = 1:24, y = compEstDiaria)) +\n  geom_point(aes(x = 1:24, y = compEstDiaria)) + \n  ggtitle(\"\") +\n  xlab(\"24 horas del día\") +\n  ylab(\"GWh\") +\n  scale_x_continuous(breaks= seq(2,24,2))\n\nggplot() + \n  geom_line(aes(x = 1:168, y = compEstSemanal)) +\n  geom_point(aes(x = 1:168, y = compEstSemanal)) + \n  ggtitle(\"\") +\n  xlab(\"24 horas del día x 7 días de la semana\") +\n  ylab(\"GWh\") +\n  scale_x_continuous(breaks= seq(24,168,24))\n\nggplot() + \n  geom_line(aes(x = 1:168, y = compEstCompleta)) +\n  geom_point(aes(x = 1:168, y = compEstCompleta)) + \n  ggtitle(\"\") +\n  xlab(\"24 horas del día x 7 días de la semana\") +\n  ylab(\"GWh\") +\n  scale_x_continuous(breaks= seq(24,168,24))\n\n\n\n\n(a) Componente estacional diaria\n\n\n\n\n\n\n\n(b) Componente estacional semanal\n\n\n\n\n\n\n\n(c) Componente estacional diaria + semanal\n\n\n\nFigura 3: Componentes estacionales para Consumo eléctrico"
  },
  {
    "objectID": "04-02-Multiples_CS.html#predicción-a-partir-de-la-descomposición-y-alisado-exponencial",
    "href": "04-02-Multiples_CS.html#predicción-a-partir-de-la-descomposición-y-alisado-exponencial",
    "title": "Múltiples componentes estacionales",
    "section": "2.2 Predicción a partir de la descomposición y alisado exponencial",
    "text": "2.2 Predicción a partir de la descomposición y alisado exponencial\nExisten varios métodos para poder estimar series con estacionalidad múltiple. Uno de los más sencillos consiste en descomponer de la serie. Después, predecir las componentes estacionales por simple repetición y predecir la componente de la tendencia usando alisado exponencial. En último lugar, se combinan la predicción de la tendencia con las predicciones de las estacionalidades para obtener una predicción de la serie.\nLa función stlf hace todas estas operaciones de forma automática. Por defecto la tendencia se predice usando alisado exponencial (“ets”), pero con el argumento method se pueden especificar otros modelos alternativos, “arima”, “naive” o “rwdrift”.\nEn la figura se muestra el resultado de aplicar stlf a la serie de Demanda eléctrica. La línea negra representa la serie de Demanda y la línea azul la predicción para las dos semanas siguientes (dos primeras semanas de marzo de 2021). El título por defecto de la figura indica que la tendencia de la serie se ha ajustado usando la función ets y presenta una pendiente aditiva amortiguada y error multiplicativo.\n\npdatos_stfl <- stlf(electricidad)\n\nautoplot(pdatos_stfl, PI = FALSE) + \n  ylab(\"GWh\") + \n  xlab(\"Semanas\") + \n  scale_x_continuous(breaks = seq(1,10, by = 1))\n\n\n\n\nFigura 4: Consumo eléctrico y predicción. Descomposición + Alisado"
  },
  {
    "objectID": "04-02-Multiples_CS.html#predicción-a-partir-de-asilado-exponencial-y-series-de-furier",
    "href": "04-02-Multiples_CS.html#predicción-a-partir-de-asilado-exponencial-y-series-de-furier",
    "title": "Múltiples componentes estacionales",
    "section": "2.3 Predicción a partir de asilado exponencial y series de Furier",
    "text": "2.3 Predicción a partir de asilado exponencial y series de Furier\nUno de los inconvenientes del método visto es que estima todos los elementos de cada componente estacional (\\(24 + 168\\) elementos en nuestro ejemplo) como si fueran independientes, sin tener en cuenta que, por lo general, evolucionan siguiendo una suave curva. Véase en el ejemplo de Demanda eléctrica la curva que sigue la estacionalidad diaria, donde la componente de una hora determinada está muy relacionada con la componente de la hora precedente y posterior.\nAlgunos métodos alternativos de predicción usan la dependencia observada entre los elementos de una componente estacional para ajustarlos a una curva paramétrica, por ejemplo funciones trigonométricas o series de Fourier.\nEntre los que usan funciones trigonométricas está el implementado en Livera, Hyndman, and Snyder (2011). El método de estimación que emplean los autores es complejo, requiere tiempo de computación y no siempre el ajuste obtenido es el más adecuado, así que los resultados pueden ser en ocasiones malos.\nVeamos un ejemplo de la implementación del método de Livera, Hyndman, and Snyder (2011) con la función tbats. La Figura 5 muestra la predicción para dos semanas.\n\ntmp <- Sys.time()\n\ndatos_tbats <- tbats(electricidad)\n\npdatos_tbats <- forecast(datos_tbats, \n                         h = 14 * 24,\n                         level = 95)\n\nautoplot(pdatos_tbats, PI = FALSE) + \n  ylab(\"GWh\") + \n  xlab(\"Semanas\") + \n  scale_x_continuous(breaks = seq(1,6, by = 1))\n\nSys.time() - tmp\n\nTime difference of 35.60638 secs\n\n\n\n\n\nFigura 5: Consumo eléctrico y predicción. Alisado y ajuste componentes estacionales por funciones trigonométricas\n\n\n\n\n\n\n\nEntre los métodos que involucran series de Fourier una propuesta reciente es el modelo Prophet, disponible a través del paquete fable.prophet. Este modelo fue introducido por Facebook (Taylor and Letham (2018)), originalmente para pronosticar datos diarios con estacionalidad semanal y anual, además de efectos calendario. Posteriormente se amplió para cubrir más tipos de datos estacionales."
  },
  {
    "objectID": "04-04-Series_acotadas.html#predicciones-positivas",
    "href": "04-04-Series_acotadas.html#predicciones-positivas",
    "title": "Series acotadas",
    "section": "Predicciones positivas",
    "text": "Predicciones positivas\nYa hemos comentado en el curso que para imponer que las predicciones sean positivas basta trabajar con la transformación logarítmica. Por ejemplo, si consideramos la serie anual de nacimientos con y sin transformación logarítmica tenemos:\n\n\n\n\n\nConLog <- forecast(ets(nacimientos, model = \"AAN\", damped = FALSE, lambda = 0),\n                   h = 30,\n                   level = 95)\n\nSinLog <- forecast(ets(nacimientos, model = \"AAN\", damped = FALSE),\n                   h = 30,\n                   level = 95)\n\nautoplot(ConLog, main = \"\", xlab = \"\")\nautoplot(SinLog, main = \"\", xlab = \"\")\n\n\n\n\n(a) Con transformación logarítmica\n\n\n\n\n\n\n\n(b) Sin transformación logarítmica\n\n\n\nFigura 1: Ajuste y predicción de Nacimientos con Holt\n\n\nEn el panel superior de la Figura 1, donde se ha usado la transformación logarítmica, no solo la predicción, sino también el intervalo es siempre positivo. Por el contrario, en el panel inferior de la Figura 1, donde no se ha usado la transformación logarítmica, las predicciones a partir de 2042 ya son negativas y el extremo inferior del intervalo de confianza es negativo desde el año 2028."
  },
  {
    "objectID": "04-04-Series_acotadas.html#predicciones-dentro-de-un-intervalo",
    "href": "04-04-Series_acotadas.html#predicciones-dentro-de-un-intervalo",
    "title": "Series acotadas",
    "section": "Predicciones dentro de un intervalo",
    "text": "Predicciones dentro de un intervalo\nSupongamos que el valor de la serie es un porcentaje y que debe estar comprendido entre \\(a = 0\\%\\) y \\(b = 100\\%\\), como por ejemplo la serie anual consistente en el porcentaje de nacidos de mujeres con nacionalidad española. La transformación que garantiza que las predicciones se mantendrán dentro del intervalo es\n\\[z_t = \\log\\Big(\\frac{y_t - a}{b - y_t}\\Big),\\] donde \\(y_t\\) es la serie original y \\(z_t\\) la serie transformada. Una vez tenemos las predicciones de la serie \\(z_t\\), tenemos que deshacer la transformación con\n\\[y_t = \\frac{a +b\\, e^{z_t}}{1 + e^{z_t}}.\\]\nEn este caso no hay un argumento lambda que nos facilite el trabajo y hay que escribir más código.\n\n\n\n\na <- 0\nb <- 100\n\nz <- log((serie - a) / (b - serie))\n\nmodelo <- ets(z, \n              model = \"AAN\", \n              damped = FALSE)\n\npz <- forecast(modelo, \n               h = 30,\n               level = 95)\n\npz[[\"mean\"]] <-  (a + b * exp(pz[[\"mean\"]]) ) / (1 + exp(pz[[\"mean\"]]))\npz[[\"lower\"]] <- (a + b * exp(pz[[\"lower\"]])) / (1 + exp(pz[[\"lower\"]]))\npz[[\"upper\"]] <- (a + b * exp(pz[[\"upper\"]])) / (1 + exp(pz[[\"upper\"]]))\npz[[\"x\"]] <- serie\n\nautoplot(pz, \n         main = \"\",\n         xlab = \"\")\n\n\n\n\nFigura 2: Predicción con Holt. Valores acotados entre 0% y 100%\n\n\n\n\nHemos solicitado una previsión a 30 años vista para poder ver mejor el efecto de acotar la serie. En la Figura 2 se observa que en nuestro ejemplo no solo la predicción, sino también el intervalo está siempre entre 0% y 100%."
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html",
    "href": "03-14-Ejemplo-Pasajeros.html",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "",
    "text": "En este curso hemos aprendido a describir una serie temporal, estimar su proceso generador de datos y realizar predicciones, tanto puntuales como por intervalo. Para ello, hemos estudiado los principales aspectos teóricos relacionados con las series temporales, sus componentes, modelos de ajuste, predicción, criterios de calidad, etc. También hemos practicado la aplicación de estos conceptos a través de diferentes series temporales: Títulos publicados, Nacimientos, Aforo de vehículos, Consumo de alimentos per cápita, Exportaciones, Producción de chocolate y Pernoctaciones de turistas extranjeros, entre otras.\nEl programa de estadística utilizado R ha servido con dos propósitos entremezclados durante el curso. En primer lugar, para ilustrar los aspectos teóricos que se iban presentando. En este caso, R tenía un uso más instrumental y en general se mostraba la salida obtenida sin enseñar el código. En segundo lugar, hemos aprendido a usar R para analizar y predecir una serie temporal real. Los ejemplos vistos en cada tema y el ejemplo transversal utilizado durante el curso de Pernoctaciones en alojamientos turísticos de turistas extranjeros son buenos exponentes de este uso de R.\nAhora bien, ambos usos de R –ilustrar aspectos teóricos y analizar una serie– han quedado distribuidos a lo largo de los temas vistos. El ejemplo Pasajeros en transporte urbano, desarrollado aquí, tiene como objetivo disponer en un único documento y de forma organizada del análisis completo de una serie temporal. En este informe se mostrará siempre el código completo empleado para las salidas, se hará hincapié en la aplicación práctica de los conceptos teóricos, se insistirá en los diferentes enfoques que se pueden y deben emplear para analizar una serie temporal y se justificarán todas las decisiones adoptadas.\nEste es, por tanto, un ejemplo que se extiende más allá de lo que un informe de análisis de una serie temporal precisa.\nPara el código de este ejemplo se utilizarán funciones de las librerías básicas de R y de otras que se pueden encontrar en las siguientes librerías:"
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#análisis-de-la-tendencia",
    "href": "03-14-Ejemplo-Pasajeros.html#análisis-de-la-tendencia",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "2.1 Análisis de la tendencia",
    "text": "2.1 Análisis de la tendencia\nSi anualizamos la serie podemos, por un lado, identificar mejor en que años se producen los cambios en la tendencia y, por otro lado, poner cifras al volumen de pasajeros en transporte urbano.\n\n  PasajerosAnual <- aggregate(Pasajeros, FUN = sum)\nautoplot(PasajerosAnual, colour = \"darkblue\",\n         xlab = \"\",\n         ylab = \"Millones de pasajeros\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\n\n\n\nFigura 2: Pasajeros en transporte urbano (datos anuales)\n\n\n\n\nLa Figura 2 muestra el volumen anual de pasajeros en transporte urbano. El crecimiento continuado, posiblemente iniciado antes de 1996 y que permitió superar los 3000 millones de pasajeros en 2007, se ve interrumpido con el inicio de la pasada crisis económica. La caída en el número de pasajeros se interrumpe en 2014, año que marca la salida de la crisis económica y el inicio de la recuperación en el serie. En 2019 se superaron los 3100 millones de pasajeros.\nEl incremento en el uso del transporte urbano observado antes y después de la crisis puede tener distintas causas: un uso más intensivo del transporte urbano en detrimento de otros medios de transporte, una reorganización de los servicios de transporte urbano que haya mejorado la conectividad dentro de los municipios, o un aumento en el número de líneas de autobús, tranvía o metro en determinadas ciudades.\nNo está clara la causa del repunte aislado observado el año 2011, en plena crisis, pero puede deberse a una ligera recuperación en la economía que tuvo lugar a finales de 2010 y principios de 2011."
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#análisis-de-la-estacionalidad",
    "href": "03-14-Ejemplo-Pasajeros.html#análisis-de-la-estacionalidad",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "2.2 Análisis de la estacionalidad",
    "text": "2.2 Análisis de la estacionalidad\nLa principal causa de la estacionalidad observada en la serie es la estructura vacacional de la sociedad, especialmente caracterizada por las vacaciones de verano (julio a septiembre) y las vacaciones de Semana Santa (en marzo y/o abril, según el año). Además, debido a que el transporte urbano se usa principalmente para ir a trabajar, también influye el número de días laborables del mes. Por ejemplo, en 2017 el mes de junio tuvo 22 días laborables, mientras que en 2019 tuvo 20 días laborables. Esta diferencia de dos días tendrá un efecto sobre el volumen de pasajeros.\nEl número de días laborables de un mes viene marcado por los fines de semana del mes y por las festividades nacionales. Es cierto que el sábado se trabaja en diversos sectores (comercio, ocio, distribución) pero la caída en el número de trabajadores respecto de los días entre semana (lunes a viernes) es muy notable. También es cierto que, además de las festividades nacionales, hay muchas festividades autonómicas o municipales que podrían afectar al volumen de pasajeros en transporte urbano. Por ejemplo, las festividades regionales en comunidades como Madrid o Cataluña pueden tener un efecto significativo sobre la serie Pasajeros. Sin embargo, las festividades no nacionales no se van a tener en cuenta.\nPor tanto, para realizar un análisis detallado de la estacionalidad, es necesario crear una serie con el número de días laborables de cada mes. Además, esta serie se usará más adelante para modelizar y predecir la serie Pasajeros.\n\nDías laborables de cada mes\nLa librería timeData proporciona una serie de funciones que permiten definir un calendario de festividades, identificar los fines de semana y, a partir de aquí, crear la serie de días laborables (véase código más abajo).\n\nCon timeCalendar se definen las consideradas festividades nacionales: Año nuevo (1 de enero), Reyes (6 de enero), Viernes Santo (fecha variable), Día del Trabajo (1 de mayo), Día de la Asunción (15 de agosto), Día de la Hispanidad (12 de octubre), Día de Todos los Santos (1 de noviembre), la Constitución (6 de diciembre) la Inmaculada Concepción (8 de diciembre) y Navidad (25 de diciembre).\nPor claridad, cada festivo se ha definido de forma independiente para después crear una variable con todas las festividades (FestivosNacionales).\nEl rango para todos los cálculos va desde 1996 hasta 2024, que incluye el rango de la serie Pasajeros más cinco años de predicción.\nLa función utilizada Easter de la librería timeDate difiere de la función easter de forecast.\nA continuación, con timeSequence se crea una serie diaria desde el 1 de enero de 1996 hasta el 31 de diciembre de 2024.\nLas dos siguientes líneas eliminan de la serie diaria los festivos y los fines de semana, (función isBizday), para después dar a esta nueva serie el formato año-mes eliminando el día. De esta forma, la serie de días laborales tendrá el mismo identificador para todos los días del mismo mes.\nDespués, se crea una tabla que, por la naturaleza de la serie de días laborales, tendrá para cada año-mes el numero de días laborables. Por último fechamos la tabla, que es nuestra serie de días laborables y mostramos algunos datos.\nLas dos últimas líneas de código dividen la serie en el periodo muestral y el de predicción.\n\n\n\n\nAnoNuevo <- timeCalendar(d = 1, m = 1, y = 1996:2024)\nReyes <- timeCalendar(d = 6, m = 1, y = 1996:2024)\nViernesSanto <- Easter(1996:2024, shift = -2)\nDiaTrabajo <- timeCalendar(d = 1, m = 5, y = 1996:2024)\nAsuncion <- timeCalendar(d = 15, m = 8, y = 1996:2024)\nHispanidad <- timeCalendar(d = 12, m = 10, y = 1996:2024)\nTodoSantos <- timeCalendar(d = 1, m = 11, y = 1996:2024)\nConstitucion <- timeCalendar(d = 6, m = 12, y = 1996:2024)\nInmaculada <- timeCalendar(d = 8, m = 12, y = 1996:2024)\nNavidad <- timeCalendar(d = 25, m = 12, y = 1996:2024)\n\nFestivosNacionales <- c(AnoNuevo, Reyes, ViernesSanto,\n                        DiaTrabajo, Asuncion,  Hispanidad, TodoSantos, \n                        Constitucion, Inmaculada, Navidad)\n\nfechaDiaria <- timeSequence(from = \"1996-01-01\", to = \"2024-12-31\")\nbiz <- fechaDiaria[isBizday(fechaDiaria, holidays = FestivosNacionales)]\nbizdays <- format(biz, format = \"%Y-%m\")\n\nDiasLaborables <- table(bizdays)\nDiasLaborables <- ts(DiasLaborables, start = 1996, frequency = 12)\n\nsubset(DiasLaborables, start = 289) #Mostramos solo los 5 últimos años\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n2020  21  20  22  21  20  22  23  21  22  21  21  21\n2021  19  20  23  21  21  22  22  22  22  20  21  21\n2022  20  20  23  20  22  22  21  22  22  20  21  20\n2023  21  20  23  19  22  22  21  22  21  21  21  18\n2024  22  21  20  22  22  20  23  21  21  23  20  20\n\npDiasLaborables <- subset(DiasLaborables, start = length(DiasLaborables) - 59)\nDiasLaborables <- subset(DiasLaborables, end = length(DiasLaborables) - 60)\n\nEs conveniente indicar que la identificación de las festividades nacionales dista de ser perfecta por varios motivos:\n\nalgunos festivos nacionales, si caen en domingo, se pasan a lunes (por ejemplo Reyes y la Inmaculada de 2019), aspecto que no se ha tenido en cuenta.\nalgunos festivos nacionales pueden ser sustituidos por otros días por las Comunidades Autónomas, por ejemplo Reyes o Jueves Santo.\n\n\n\n\n\nAnálisis gráfico de la estacionalidad\nVeamos ahora una descriptiva detallada de la estacionalidad de la serie Pasajeros, haciendo especial hincapié en el efecto de las vacaciones (verano y Semana Santa) y el número de días laborables. Para ello, mostraremos gráficamente las subseries definidas por el mes tanto para Pasajeros como para Pasajeros por día laborable, esta segunda resultado de dividir Pasajeros por DiasLaborables.\n\nPasajerosDL <- Pasajeros/DiasLaborables\n\nggsubseriesplot(Pasajeros) +\n  ylab(\"Millones de pasajeros\") +\n  xlab(\"\") +\n  ggtitle(\"\")\n\nggsubseriesplot(PasajerosDL) +\n  ylab(\"Millones de pasajeros\") +\n  xlab(\"\") +\n  ggtitle(\"\")\n\n\n\n\n\n\n\n(a) Pasajeros\n\n\n\n\n\n\n\n\n\n(b) Pasajeros por día laborable\n\n\n\n\nFigura 3: Estacionalidad de la serie Pasajeros\n\n\n\nLas Figura 3 a) y b) muestran para cada mes la serie de pasajeros (total o por día laborable) y el valor medio (línea azul horizontal). En ambos casos se identifica perfectamente el efecto de los periodos vacacionales sobre el transporte urbano de pasajeros. En las vacaciones de verano se observa una fuerte caída en el número de pasajeros, especialmente en agosto y, en menor medida, en julio y septiembre. Por otro lado, las subseries de marzo y abril muestran mucha más irregularidad que las de otros meses debido a que el volumen de pasajeros depende de cómo ha caído la Semana Santa. Si un año esta cae en marzo, ese mes presentará un volumen de pasajeros inferior al de los meses de marzo sin Semana Santa, mientras que en abril se dará el efecto contrario. Diciembre, para ser un mes de 31 días, presenta también un reducido número de pasajeros debido a las vacaciones navideñas.\nLa Figura 3 a) muestra el efecto estacional total debido al número de días del mes y de días laborales. Por ejemplo, en febrero, el mes con menos días y por tanto con menos días laborales, en media se transportan menos pasajeros, comparado con enero o marzo. Octubre, un mes con 31 días, muestra un volumen medio de pasajeros mayor que noviembre de 30 días.\nEn la Figura 3 b) se ha eliminado el efecto de los días laborables al trabajar con la serie de pasajeros transportados por día laborable. Si la comparamos con la Figura 3 a), destaca que las diferencias entre las medias (lineas azules) se han reducido: prácticamente no hay diferencias entre los meses de enero a junio, o entre los meses de octubre a diciembre.\nCabe pensar que al excluir de la serie de días laborables la Semana Santa, en la Figura 3 b) las subseries de marzo y abril deberían ser tan suaves como las observadas para otro meses, pero no es así. Claramente la simple exclusión de los festivos nacionales de Semana Santa no es suficiente para recoger bien su efecto sobre el transporte urbano. La razón hay que buscarla en las vacaciones escolares de este periodo, que en algunas comunidades autónomas tiene lugar durante la propia semana de Semana Santa, mientras que en otras comunidades tiene lugar en la semana posterior. De esta forma, el efecto sobre el transporte urbano de Semana Santa no es homogéneo en el territorio nacional y resulta difícil incluirlo en el análisis de la serie Pasajeros.\n\n\n\n\nAnálisis numérico de la estacionalidad\nPodemos obtener la componente estacional de forma sencilla para poder valorar numéricamente la componente estacional y ver que efecto tiene el número de días laborables. Previamente, debemos determinar el esquema, aditivo o multiplicativo, de la serie.\nLa gráfica media-desviación típica (Figura 4) refuerza la impresión que se obtenía de la gráfica de la serie (Figura 1), que el esquema es aditivo.\n\nMediaAnual <- aggregate(Pasajeros, FUN = mean)\nDesviacionAnual <- aggregate(Pasajeros, FUN = sd)\n\nggplot() +\n  geom_point(aes(x = MediaAnual, y = DesviacionAnual), size = 2) +\n  xlab(\"Media de pasajeros por año\") + \n  ylab(\"Desviación típica de pasajeros por año\") + \n  ggtitle(\"\")\n\n\n\n\nFigura 4: Identificación del tipo de esquema\n\n\n\n\n\nPasajerosMedia <- tapply(Pasajeros - mean(Pasajeros), \n                         cycle(Pasajeros), \n                         mean)\n\nPasajerosDLMedia <- tapply((PasajerosDL - mean(PasajerosDL)), \n                           cycle(PasajerosDL), \n                           mean)\n\ndatos <- cbind(PasajerosMedia, PasajerosDLMedia)\ncolnames(datos) <- c(\"Pasajeros\", \"Pasajeros por día laborable\")\nrownames(datos) <- meses\n\nkable(datos, \n      digits = 2)\n\n\n\nTabla 1: Efecto estacional\n\n\n\nPasajeros\nPasajeros por día laborable\n\n\n\n\nEne\n3.19\n0.32\n\n\nFeb\n-0.36\n0.46\n\n\nMar\n17.71\n0.47\n\n\nAbr\n3.36\n0.35\n\n\nMay\n19.11\n0.70\n\n\nJun\n6.30\n0.17\n\n\nJul\n-15.09\n-1.22\n\n\nAgo\n-71.64\n-3.51\n\n\nSep\n-7.75\n-0.50\n\n\nOct\n27.60\n1.05\n\n\nNov\n15.36\n0.97\n\n\nDic\n2.20\n0.74\n\n\n\n\n\n\nLa Tabla 1 pone en cifras el efecto estacional sobre los Pasajeros (primera columna): en agosto la caída en el número de pasajeros, respecto de la media anual, se cifra en 72 millones de pasajeros. En julio, septiembre y en menor medida febrero también el uso del transporte urbano es inferior a la media anual, en el caso de los dos primeros meses por las vacaciones de verano y en febrero debido a ser el mes con menos días del año. Por otro lado, destaca el elevado número de pasajeros en los meses de marzo, mayo y octubre, por tener 31 días, y noviembre, por razones desconocidas.\nTras la corrección por el número de días laborales, el efecto estacional es más suave (véase la segunda columna en la Tabla 1). Ahora, los meses de febrero y marzo tienen un efecto similar, al igual que octubre y noviembre. También se observa que las diferencias entre marzo y abril se han reducido enormemente."
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#descomposición-de-la-serie",
    "href": "03-14-Ejemplo-Pasajeros.html#descomposición-de-la-serie",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "2.3 Descomposición de la serie",
    "text": "2.3 Descomposición de la serie\nYa hemos realizado una detallada descripción de las principales componentes de la serie, tendencia y estacionalidad. Ahora vamos a proceder a descomponerla a fin de analizar, aunque sea de forma gráfica, el error y tener ya una primera impresión sobre la relevancia de la componente de intervención en Pasajeros.\nDado que la serie presenta un esquema aditivo, usaremos el método de descomposición por regresiones locales ponderadas, asumiendo una componente estacional constante y considerando la presencia de posibles valores extremos.\n\nPasajerosStl <- stl(Pasajeros[,1], \n                    s.window = \"periodic\", \n                    robust = TRUE)\n\nerror <- remainder(PasajerosStl)\nsderror <- sd(error)\n\nautoplot(error,\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\",\n         colour = \"darkblue\") +\n  geom_hline(yintercept = c(3, 2, -2, -3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"),\n             lty = 2) + \n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\n\n\n\nFigura 5: Error + Intervención. Descomposición de Pasajeros\n\n\n\n\nLa Figura 5 muestra el error de la descomposición y los intervalos de confianza al 95% (líneas verdes) y el 99.7% (líneas rojas). Se aprecian claramente múltiples valores extremos (superan las tres desviaciones típicas) en forma de compensación (dos errores extremos consecutivos de signo opuesto) que corresponden a los meses de marzo y abril de 1997, 2002, 2008 y 2013, y otro valor extremo en abril de 2005. Además, en marzo y abril de 2016 hay dos valores atípicos. Nótese que todos los valores identificados corresponden a los meses de marzo y abril, y en todos los casos el error negativo tiene lugar en marzo y el positivo en abril. Si miramos un calendario veremos que tienen lugar en los años en que Semana Santa cayó en marzo.\nSi repetimos este análisis para la serie de Pasajeros por día laborable, los resultados son bien diferentes (véase Figura 6). Ahora solo se detectan dos valores extremos en diciembre de 2000 y 2006. También destaca el error de diciembre de 2017. Los errores en diciembre se dan cuando Navidad cae en lunes, de forma que la caída en el transporte urbano debida a la nochebuena coincide con la de cualquier domingo. Así, estos meses de diciembre presentan más transporte urbano que los meses de diciembre donde la nochebuena cae entre semana.\n\nPasajerosStl <- stl(PasajerosDL[,1], \n                    s.window = \"periodic\", \n                    robust = TRUE)\n\nerror <- remainder(PasajerosStl)\nsderror <- sd(error)\n\nautoplot(error,\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\",\n         colour = \"darkblue\") +\n  geom_hline(yintercept = c(3, 2, -2, -3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"),\n             lty = 2) + \n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\n\n\n\nFigura 6: Error + Intervención. Descomposición de Pasajeros por día laborable\n\n\n\n\nPara la identificación de los valores extremos se ha hecho uso de las funciones easter del paquete forecast y dayOfWeek del paquete timeDate."
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#conclusión",
    "href": "03-14-Ejemplo-Pasajeros.html#conclusión",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "2.4 Conclusión",
    "text": "2.4 Conclusión\nLa serie de pasajeros en transporte urbano muestra una tendencia creciente solo interrumpida entre 2008 y 2013 debido a la Gran Recesión.\nLos principales determinantes de la estacionalidad de la serie Pasajeros son los grandes periodos vacacionales en España (Semana Santa y verano) y el número de días laborales del mes. Sin embargo, en la serie Pasajeros corregida por días laborables la componente estacional se ha suavizado y prácticamente queda determinada por las vacaciones.\nLa intervención tiene lugar en los meses de marzo y abril debido al carácter móvil de la Semana Santa, y en diciembre cuando el día de Navidad cae en lunes de forma que la caída de pasajeros de nochebuena se solapa con la de cualquier domingo."
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#análisis-de-la-serie-pasajeros",
    "href": "03-14-Ejemplo-Pasajeros.html#análisis-de-la-serie-pasajeros",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "4.1 Análisis de la serie Pasajeros",
    "text": "4.1 Análisis de la serie Pasajeros\n\n\n\nEstimación e interpretación\nEl modelo óptimo, estimado con la función ets sin imponer ninguna restricción, es ETS(M,Ad,A): pendiente aditiva con amortiguamiento, estacionalidad aditiva y residuo multiplicativo. \\[y_{t+1} = (l_t + \\phi b_t + s_{t+1-m}) \\cdot (1 + \\varepsilon_{t+1}).\\]\n\nPasajerosEts <- ets(Pasajeros)\nsummary(PasajerosEts) \n\nETS(M,Ad,A) \n\nCall:\n ets(y = Pasajeros) \n\n  Smoothing parameters:\n    alpha = 0.1374 \n    beta  = 0.017 \n    gamma = 1e-04 \n    phi   = 0.9438 \n\n  Initial states:\n    l = 203.1964 \n    b = -0.4508 \n    s = 2.0753 14.0423 27.0229 -8.7953 -72.369 -15.0625\n           6.6935 19.5129 4.2863 18.0168 0.373 4.2039\n\n  sigma:  0.0333\n\n     AIC     AICc      BIC \n2823.866 2826.408 2889.799 \n\nTraining set error measures:\n                    ME     RMSE      MAE       MPE     MAPE      MASE\nTraining set 0.5929553 7.492818 5.654414 0.1765693 2.447442 0.6844865\n                   ACF1\nTraining set -0.1434247\n\n\nEl valor de \\(\\phi=\\) 0.94 indica que la inclusión de amortiguamiento en el modelo mejora sensiblemente su ajuste a los datos. Por otro lado, \\(\\gamma\\) es técnicamente cero, indicando que el efecto estacional se mantiene constante en el tiempo. Sin embargo, el valor de \\(\\beta\\), reducido pero no nulo, indica que la pendiente cambia en el tiempo de forma muy lenta.\nLa calidad del ajuste es bastante buena, con un error porcentual del 2.4% o un error de 7.5 millones de pasajeros (RMSE). La aplicación del método de alisado supone una reducción de un punto en el error porcentual respecto del método ingenuo, o una reducción de 3.5 millones de pasajeros. Es decir, el modelo de alisado exponencial supone una mejora en la calidad del ajuste del 32% respecto del método ingenuo con estacionalidad visto en el epígrafe previo (MASE). El indicador ACF1 revela que las fórmulas usadas para el intervalo de confianza no son válidas.\nEl efecto estacional, que recordemos se mantiene constante en el tiempo, es prácticamente idéntico al estimado en la descriptiva y viene determinado por los periodos vacacionales y el número de días del mes (y por consiguiente el número de días laborables). Véase la Figura 8.\nEn verano (julio a septiembre) el uso del transporte urbano es inferior a la media anual, destacando agosto con un descenso de 72 millones de pasajeros. Por el contrario, octubre destaca por ser el mes con mayor incremento en el volumen de pasajeros (27 millones) respecto de la media anual.\n\nPasajerosEtsEst <- PasajerosEts$states[nrow(PasajerosEts$states), 14:3]\nnames(PasajerosEtsEst) <- meses\n\nround(PasajerosEtsEst, 2)\n\n   Ene    Feb    Mar    Abr    May    Jun    Jul    Ago    Sep    Oct    Nov \n  4.21   0.37  18.02   4.29  19.51   6.69 -15.06 -72.37  -8.79  27.02  14.04 \n   Dic \n  2.07 \n\nggplot() +\n  geom_line(aes(x = 1:12, y = PasajerosEtsEst), colour = \"darkblue\") + \n  geom_hline(yintercept = 0, colour = \"black\", lty = 2) +\n  ggtitle(\"\") +\n  xlab(\"\") +\n  ylab(\"Efecto estacional\") +\n  scale_x_continuous(breaks= 1:12, \n                     labels = meses)\n\n\n\n\nFigura 8: Componente estacional estimada con Alisado exponencial\n\n\n\n\n\n\n\n\nPredicción\nPodemos ahora pedir los valores de predicción para los próximos cinco años y su intervalo de confianza al 95% –aunque ya sabemos que no será muy fiable. No mostramos los resultados numéricos, pero si gráficos (Figura 9). Las predicciones muestran una tendencia creciente amortiguada y, por tanto, no tan acusada como la observada en los años precedentes.\n\nPasajerosEtsPre <- forecast(PasajerosEts, \n                            h = 60, \n                            level = 95)\n\nautoplot(PasajerosEtsPre,\n         xlab = \"\",\n         ylab = \"Millones de pasajeros\",\n         main = \"\") \n\n\n\n\nFigura 9: Pasajeros (1996-2019) y predicción (2020-2024). Método de alisado exponencial\n\n\n\n\nEn el año 2020 se esperan 3153 millones de pasajeros, un 1.6% más que en 2019.2\n\n\n\n\nAnálisis del error\nEl residuo del modelo (Figura 10) muestra varios valores que pueden ser considerados como atípicos y que se dan siempre en los meses de marzo y abril para los años donde la Semana Santa recayó en marzo.\n\nerror <- residuals(PasajerosEts)\nsderror <- sd(error)\n\nautoplot(error,\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\",\n         colour = \"darkblue\") +\n  geom_hline(yintercept = c(-3, -2, 2 ,3)*sderror, \n             colour = c(\"red\", \"green\", \"green\", \"red\"), lty = 2) + \n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\n\n\n\nFigura 10: Error + Intervención. Método de alisado"
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#otras-alternativas-de-análisis",
    "href": "03-14-Ejemplo-Pasajeros.html#otras-alternativas-de-análisis",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "4.2 Otras alternativas de análisis",
    "text": "4.2 Otras alternativas de análisis\nEn la descriptiva se ha visto que la serie de pasajeros por día laborable tiene un comportamiento más suave (la componente estacional era más plana) y presentaba un menor número de valores atípicos que la serie original Pasajeros. Cabe esperar, por tanto, que esta serie presente un mejor ajuste con los métodos de alisado exponencial y ofrezca mejores predicciones.\nPor otro lado, siempre vale la pena analizar la transformación logarítmica de la serie y ver si ofrece mejores resultados que la serie original. La transformación logarítmica es especialmente eficaz para series no lineales, así que para Pasajeros posiblemente no suponga ningún mejora.\nLas transformaciones indicadas en los dos párrafos precedentes son solo dos de las posibles. También se pude analizar la serie de pasajeros por día del mes o la transformación óptima de Box-Cox. La idea es no quedarse con lo inmediato –la serie tal cual nos la han ofrecido–, sino probar otras alternativas. Por ejemplo, la serie de Pasajeros es el agregado del número de pasajeros que viajan en transporte urbano según el tipo de transporte (autobús, metro, tranvía…). Se podría proceder a analizar cada serie por separado (pasajeros en autobús, pasajeros en metro, etc.), para luego agregar los resultados y ver si este enfoque da mejores resultados que el análisis directo de la serie agregada Pasajeros.\nEn este epígrafe se analizarán tres de las transformaciones indicadas: la transformación logarítmica, los pasajeros por día laborable y los pasajeros por día del mes. El objetivo es ver si es posible mejorar la calidad de las predicciones obtenidas para Pasajeros. Se usará como criterio de bondad el error de las predicciones extra-muestrales según el horizonte temporal, obtenido con el procedimiento origen de predicción móvil. Asumiremos que son necesarios 12 años para obtener una buena estimación del modelo y el horizonte temporal se fijará en 12 meses (\\(k = 144, h = 12\\)). Previamente, hay que crear la serie Pasajeros por día del mes, e identificar el mejor modelo para las series transformadas.\n\nPasajerosDM <- Pasajeros/monthdays(Pasajeros)\nets(Pasajeros, lambda = 0)$method\n\n[1] \"ETS(A,Ad,A)\"\n\nets(PasajerosDL)$method\n\n[1] \"ETS(M,Ad,A)\"\n\nets(PasajerosDM)$method\n\n[1] \"ETS(A,Ad,A)\"\n\n\n\n\n\nk <- 144                 \nh <- 12                  \nTT <- length(Pasajeros)  \ns <- TT - k - h          \n\nmapeAlisadoPas <- matrix(NA, s + 1, h)\nmapeAlisadolPas <- matrix(NA, s + 1, h)\nmapeAlisadoPasDL <- matrix(NA, s + 1, h)\nmapeAlisadoPasDM <- matrix(NA, s + 1, h)\n\nfor (i in 0:s) {\n  train.set <- subset(Pasajeros, start = i + 1, end = i + k)\n  test.set <-  subset(Pasajeros, start = i + k + 1, end = i + k + h)\n  \n  trainDL.set <- subset(PasajerosDL, start = i + 1, end = i + k)\n  testDL.set <-  subset(PasajerosDL, start = i + k + 1, end = i + k + h)\n  \n  trainDM.set <- subset(PasajerosDM, start = i + 1, end = i + k)\n  testDM.set <-  subset(PasajerosDM, start = i + k + 1, end = i + k + h)\n  \n  fit <- ets(train.set, model = \"MAA\", damped = TRUE)\n  fcast <- forecast(fit, h = h)\n  mapeAlisadoPas[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n  \n  fit <- ets(train.set, model = \"AAA\", damped = TRUE, lambda = 0)\n  fcast <- forecast(fit, h = h)\n  mapeAlisadolPas[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n  \n  fit <- ets(trainDL.set, model = \"MAA\", damped = TRUE)\n  fcast <- forecast(fit, h = h)\n  mapeAlisadoPasDL[i + 1,] <- 100*abs(testDL.set - fcast$mean)/testDL.set\n  \n  fit <- ets(trainDM.set, model = \"AAA\", damped = TRUE)\n  fcast <- forecast(fit, h = h)\n  mapeAlisadoPasDM[i + 1,] <- 100*abs(testDM.set - fcast$mean)/testDM.set\n}\n\nerrorAlisadoPas <- colMeans(mapeAlisadoPas)\nerrorAlisadolPas <- colMeans(mapeAlisadolPas)\nerrorAlisadoPasDL <- colMeans(mapeAlisadoPasDL)\nerrorAlisadoPasDM <- colMeans(mapeAlisadoPasDM)\n\ndatos <- data.frame(\n  factor = c(rep(\"Pasajeros\", 12), \n             rep(\"Pasajeros por día laborable\", 12), \n             rep(\"Pasajeros por día del mes\", 12), \n             rep(\"Pasajeros (log)\", 12)),\n  x = c(1:12, 1:12, 1:12, 1:12),\n  y = c(errorAlisadoPas, errorAlisadoPasDL, errorAlisadoPasDM, errorAlisadolPas)\n)\n\n\nggplot(datos, aes(x = x, y = y,  colour= factor)) + \n  geom_line() +\n  ggtitle(\"\") +\n  xlab(\"Horizonte temporal de predicción\") +\n  ylab(\"%\") +\n  scale_x_continuous(breaks= 1:12) +\n  scale_y_continuous(breaks= seq(2.6, 4, .2)) +\n  guides(colour = guide_legend(title = \"Métodos\")) + \n  theme(legend.position=c(0.02,0.98), legend.justification=c(0,1))\n\n\n\n\nFigura 11: Error de predicción (MAPE) según horizonte temporal y enfoque. Método de Alisado\n\n\n\n\nAntes de pasar al análisis de los resultados, indicar que en las predicciones sobre el logaritmo no se ha pedido corrección por sesgo, y que al trabajar con errores porcentuales no es necesario pasar la predicción de pasajeros por día (laborable o del mes) a predicción de pasajeros.\nLa Figura 11 muestra los errores de predicción según el horizonte temporal para las tres aproximaciones. En todos los casos el error aumenta con el horizonte temporal de predicción, de forma que las predicciones a doce meses vista tienen un error un punto porcentual superior a las predicciones a un mes vista.\nPor otro lado, para predicciones hasta 8 meses vista las predicciones realizadas sobre el logaritmo de la serie original Pasajeros son las más ajustadas. Para predicciones de 9 a 12 meses, las mejores predicciones se obtienen con Pasajeros por día del mes, seguidas de las predicciones realizadas sobre la serie sin transformar. En contra de lo esperado, la predicción a partir de la serie de pasajeros por día laborable es la que mayor error porcentual presenta."
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#conclusión-1",
    "href": "03-14-Ejemplo-Pasajeros.html#conclusión-1",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "4.3 Conclusión",
    "text": "4.3 Conclusión\nLos modelos de Alisado exponencial resultan excelentes para predecir la serie Pasajeros. El error de ajuste, del 2.4%, es un punto inferior al error obtenido con el método ingenuo con estacionalidad. Además, en las predicciones extra-muestrales a 12 meses vista el error porcentual sigue manteniéndose bajo, no superando el 4%.\nLa transformación logarítmica de la serie pasajeros y la serie Pasajeros por día del mes han dado mejores predicciones por Alisado que el análisis directo de la serie."
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#transformación-de-la-serie-pasajeros",
    "href": "03-14-Ejemplo-Pasajeros.html#transformación-de-la-serie-pasajeros",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.1 Transformación de la serie Pasajeros",
    "text": "5.1 Transformación de la serie Pasajeros\nPor un lado, el análisis por Alisado exponencial ha puesto de relieve el carácter lineal de Pasajeros y la efectividad que podría tener usar la transformación logarítmica para mejorar la calidad de las predicciones.\nPor otro lado, tras un análisis preliminar por modelos ARIMA se puede ver que la transformación logarítmica mejora la identificación del modelo y facilitaba su interpretación.\nAsí, optamos por aplicar la transformación logarítmica a Pasajeros.\nLas FAC del logaritmo de la serie y algunas de sus diferenciaciones (Figura 12) indican que es necesaria la doble diferenciación regular y estacional para alcanzar las hipótesis de estacionariedad y ergodicidad: \\(\\log(Pasajeros) \\sim I(1)I_{12}(1)\\). Los resultados ofrecidos por las funciones ndiffs y nsdiffs apoyan esta conclusión.\n\nggAcf(log(Pasajeros), lag = 48, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(log(Pasajeros)), lag = 48, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(log(Pasajeros), lag = 12), lag = 48, xlab = \"\", ylab = \"\", main = \"\")\nggAcf(diff(diff(log(Pasajeros), lag=12)), lag = 48, xlab = \"\", ylab = \"\", main = \"\")\n\n\n\n\n\n\n\n(a) Log serie\n\n\n\n\n\n\n\n(b) Dif. regular log serie\n\n\n\n\n\n\n\n\n\n(c) Dif. estacional log serie\n\n\n\n\n\n\n\n(d) Dif. regular y estacional log serie\n\n\n\n\nFigura 12: FAC para Pasajeros\n\n\n\n\nndiffs(log(Pasajeros))\n\n[1] 1\n\nnsdiffs(log(Pasajeros))\n\n[1] 1\n\n\nLa Figura 13 muestra la serie original \\(y_t\\) y la serie transformada \\(\\nabla \\nabla_{12} \\log(y_t)\\). En la serie transformada destacan las compensaciones asociadas a la intervención de Semana Santa.\n\nseries <- cbind(\"Original\" = Pasajeros,\n                \"Dif reg. y est. de log\" = diff(diff(log(Pasajeros), lag = 12)))\nautoplot(series, facets = TRUE,\n         xlab = \"\",\n         ylab = \"\",\n         main = \"\")\n\n\n\n\nFigura 13: Serie original de Pasajeros y su transformación"
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#identificación-de-la-serie-pasajeros",
    "href": "03-14-Ejemplo-Pasajeros.html#identificación-de-la-serie-pasajeros",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.2 Identificación de la serie Pasajeros",
    "text": "5.2 Identificación de la serie Pasajeros\nVamos a identificar los valores de \\(p\\), \\(q\\), \\(P\\) y \\(Q\\) del proceso ARIMA. Para ello, solicitaremos con auto.arima y seas una identificación automática, en el primer caso incluyendo todos los efectos calendario ya identificados.\n\n\n\nIdentificación automática con auto.arima\nPara ayudar a la función auto.arima en el proceso de identificación vamos a definir previamente todas las variables de intervención que en el desarrollo del análisis de la serie hemos ido identificando: días del mes, días laborables del mes, meses de diciembre con el día de Navidad en lunes y Semana Santa:\n\nLa variables días laborables del mes ya ha sido definida previamente como DiasLaborables.\nLa variable Días del mes se puede definir directamente con la función monthdays de la librería forecast. En lugar de días del mes, consideraremos la variable días no laborables del mes, resultante de restar a los días del mes los días laborables.\nLos meses de diciembre en que el día de Navidad cae en lunes requiere un poco más de trabajo. La idea general es generar un rango de fechas diarias que cubra todo el periodo de análisis (variable fechas), identificar los lunes de Navidad (variable dicotómica lunesNavidad), eliminar el identificador del día del rango de fechas con la función format y, por último, con tapply sumar para cada mes-año los lunes de Navidad, que lógicamente solo tendrán lugar algunos meses de diciembre y una sola vez. En los objetos definidos con la función as.POSIXlt los meses van de 0 a 11 (enero a diciembre) y los días de la semana de 0 a 6 (domingo a sábado).\nLa creación de las variables de intervención que estiman el efecto de la Semana Santa es aún más complejo. El efecto del viernes de Semana Santa ya queda recogido en la variable DiasNoLaborables. Lo que vamos a hacer ahora es crear una variable que permita estimar el efecto de las vacaciones escolares (y de muchos padres y madres) de lunes a Jueves Santo en aquellas comunidades donde así es; y otra variable para estimar el efecto de las vacaciones escolares que tienen lugar la semana posterior al Domingo de Resurrección, de lunes a viernes tras Semana Santa. Estas nuevas variables (DiasPreSanta y DiasPascua) valdrán cero para los meses distintos de marzo y abril, pero para marzo y abril valdrán la proporción de días vacacionales que recaen en el correspondiente mes.\n\nDías no laborables\nGeneramos la variables para DiasNoLaborables y se muestra su valor para los últimos 5 años.\n\nDiasNoLaborables <- monthdays(DiasLaborables) - DiasLaborables\npDiasNoLaborables <- monthdays(pDiasLaborables) - pDiasLaborables\ntail(DiasNoLaborables, n = 60)\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n2015  11   8   9   9  11   8   8  10   8  10   9  10\n2016  12   8   9   9   9   8  10   9   8  11   9  11\n2017  10   8   8  11   9   8  10   9   9  10   9  13\n2018   9   8  10   9   9   9   9   9  10   9   9  12\n2019   9   8  10   9   9  10   8  10   9   8  10  11\n\n\nNavidad cae en lunes\nGeneramos la variable que identifica los mes de diciembre en los que la Navidad cayó en lunes.\n\nfechas <- as.POSIXlt(seq(from = as.Date(\"1996-1-1\"), \n                         to = as.Date(\"2024-12-31\"), \n                         by = 1))\nLunesNavidad <- 1*(fechas$wday == 1 & fechas$mon == 11 & fechas$mday == 25)\nfechas <- format(fechas, format = \"%Y-%m\")\nLunesNavidad <- tapply(LunesNavidad, fechas, sum)\nLunesNavidad <- ts(LunesNavidad, start = 1996, frequency = 12)\npLunesNavidad <- subset(LunesNavidad, start = length(LunesNavidad) - 59)\nLunesNavidad <- subset(LunesNavidad, end = length(LunesNavidad) - 60)\nLunesNavidad[LunesNavidad == 1]\n\n2000-12 2006-12 2017-12 \n      1       1       1 \n\n\nSemana Santa\nSe generan las variables DiasPreSanta y DiasPascua y se muestra su valor para los últimos 5 años.\n\nLunSanto <- Easter(1996:2024, shift = -6)\nMarSanto <- Easter(1996:2024, shift = -5)\nMieSanto <- Easter(1996:2024, shift = -4)\nJueSanto <- Easter(1996:2024, shift = -3)\n\nPreSanta <- c(LunSanto, MarSanto, MieSanto, JueSanto)\nbiz <- fechaDiaria[isBizday(fechaDiaria, holidays = PreSanta, wday = 0:6)]\nbizdays <- format(biz, format = \"%Y-%m\")\n\nDiasPreSanta <- table(bizdays)\nDiasPreSanta <- ts(DiasPreSanta, start = 1996, frequency = 12)\nDiasPreSanta <- (monthdays(DiasPreSanta) - DiasPreSanta)/4\n\npDiasPreSanta <- subset(DiasPreSanta, start = length(DiasPreSanta) - 59)\nDiasPreSanta <- subset(DiasPreSanta, end = length(DiasPreSanta) - 60)\n\nLunPascua <- Easter(1996:2024, shift = 1)\nMarPascua <- Easter(1996:2024, shift = 2)\nMiePascua <- Easter(1996:2024, shift = 3)\nJuePascua <- Easter(1996:2024, shift = 4)\nViePascua <- Easter(1996:2024, shift = 5)\n\nPascua <- c(LunPascua, MarPascua, MiePascua, JuePascua, ViePascua)\nbiz <- fechaDiaria[isBizday(fechaDiaria, holidays = Pascua, wday = 0:6)]\nbizdays <- format(biz, format = \"%Y-%m\")\n\nDiasPascua <- table(bizdays)\nDiasPascua <- ts(DiasPascua, start = 1996, frequency = 12)\nDiasPascua <- (monthdays(DiasPascua) - DiasPascua)/5\n\npDiasPascua <- subset(DiasPascua, start = length(DiasPascua) - 59)\nDiasPascua <- subset(DiasPascua, end = length(DiasPascua) - 60)\n\ntail(DiasPreSanta, n = 60)\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n2015 0.0 0.0 0.5 0.5 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2016 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2017 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2018 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2019 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n\ntail(DiasPascua, n = 60)\n\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n2015 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2016 0.0 0.0 0.8 0.2 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2017 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2018 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n2019 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0\n\n\nAhora tenemos todos los elementos para pedir la identificación automática con auto.arima.\n\nauto.arima(Pasajeros, \n           lambda = 0,\n           d = 1, \n           D = 1,\n           xreg = cbind(DiasLaborables, DiasNoLaborables, \n                        LunesNavidad, DiasPreSanta, DiasPascua))\n\nSeries: Pasajeros \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1  DiasLaborables  DiasNoLaborables  LunesNavidad\n      -0.5775  -0.4194          0.0352            0.0159         0.028\ns.e.   0.0496   0.0531          0.0057            0.0057         0.008\n      DiasPreSanta  DiasPascua\n           -0.0577     -0.0248\ns.e.        0.0042      0.0070\n\nsigma^2 = 0.0003214:  log likelihood = 718.25\nAIC=-1420.51   AICc=-1419.97   BIC=-1391.58\n\n\nLa identificación automática muestra el proceso de las aerolíneas. Además, parece que todas las variables de intervención son significativas.\n\n\n\n\nIdentificación automática con seas\nLa función seas de seasonal incluye automáticamente durante la identificación las variables de intervención necesarias.\n\nsummary(seas(log(Pasajeros)))\n\n\nCall:\nseas(x = log(Pasajeros))\n\nCoefficients:\n                   Estimate Std. Error z value Pr(>|z|)    \nLeap Year          0.026067   0.005643   4.620 3.84e-06 ***\nWeekday            0.005285   0.000265  19.946  < 2e-16 ***\nEaster[1]         -0.086964   0.003186 -27.296  < 2e-16 ***\nAO2005.Jul        -0.054099   0.013221  -4.092 4.28e-05 ***\nAR-Nonseasonal-01 -0.980370   0.271938  -3.605 0.000312 ***\nAR-Nonseasonal-02 -0.597933   0.121438  -4.924 8.49e-07 ***\nAR-Nonseasonal-03 -0.305587   0.086942  -3.515 0.000440 ***\nMA-Nonseasonal-01 -0.561895   0.281101  -1.999 0.045619 *  \nMA-Seasonal-12     0.382738   0.055910   6.846 7.61e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSEATS adj.  ARIMA: (3 1 1)(0 1 1)  Obs.: 288  Transform: none\nAICc: -1375, BIC: -1339  QS (no seasonality in final):    0  \nBox-Ljung (no autocorr.): 54.28 *** Shapiro (normality): 0.9895 *\n\n\nEn este caso el proceso identificado en la parte regular es más complejo que el obtenido con auto.arima, ARIMA(3,1,1). Además, se han incluido variables de intervención asociadas a los años bisiestos, la Semana Santa y días laborables. Conjuntamente estas variables de intervención recogen los mismos efectos considerados por nosotros.\nConcluimos que el modelo de partida para Pasajeros será \\(\\log(Pasajeros) \\sim ARIMA_{12}(0, 1, 1)(0, 1, 1) + AI\\)."
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#estimación-del-modelo-e-identificación-de-otras-componentes-de-intervención",
    "href": "03-14-Ejemplo-Pasajeros.html#estimación-del-modelo-e-identificación-de-otras-componentes-de-intervención",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.3 Estimación del modelo e identificación de otras componentes de intervención",
    "text": "5.3 Estimación del modelo e identificación de otras componentes de intervención\nVamos a estimar el modelo identificado y a analizar la presencia de otros valores atípicos en el residuo.\n\nPasajerosAri <- Arima(Pasajeros, \n                      lambda = 0,\n                      order = c(0, 1, 1),  \n                      seasonal = c(0, 1, 1),\n                      xreg = cbind(DiasLaborables, DiasNoLaborables, \n                                   LunesNavidad, DiasPreSanta, DiasPascua))\nPasajerosAri\n\nSeries: Pasajeros \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1  DiasLaborables  DiasNoLaborables  LunesNavidad\n      -0.5775  -0.4194          0.0352            0.0159         0.028\ns.e.   0.0496   0.0531          0.0057            0.0057         0.008\n      DiasPreSanta  DiasPascua\n           -0.0577     -0.0248\ns.e.        0.0042      0.0070\n\nsigma^2 = 0.0003214:  log likelihood = 718.25\nAIC=-1420.51   AICc=-1419.97   BIC=-1391.58\n\n\n\nerror <- residuals(PasajerosAri)\nsderror <- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 0, 2, 3)*sderror, \n             colour = c(\"red\", \"blue\", \"black\", \"blue\", \"red\"), \n             lty = 2) + \n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\n\n\n\nFigura 14: Error + Intervención. Modelo ARIMA\n\n\n\n\nEn la Figura 14 identificamos tres meses en los que el error supera o casi alcanza las tres desviaciones típicas y son candidatos a valores atípicos: abril de 2002, agosto de 2005 y marzo de 2010. No es fácil conocer las causas para estos valores atípicos.\nTras incluir las correspondientes variables artificiales en el modelo y estimarlo, identificamos otro valor extremo en agosto de 2006 y procedemos a incluirlo en el modelo y repetir el análisis. En esta ocasión ya no identificamos más valores atípicos (véase Figura 15).\n\nd0402 <- 1*(trunc(time(Pasajeros)) == 2002 & cycle(Pasajeros) == 4)\nd0805 <- 1*(trunc(time(Pasajeros)) == 2005 & cycle(Pasajeros) == 8)\nd0806 <- 1*(trunc(time(Pasajeros)) == 2006 & cycle(Pasajeros) == 8)\nd0310 <- 1*(trunc(time(Pasajeros)) == 2010 & cycle(Pasajeros) == 3)\n\nPasajerosAri <- Arima(Pasajeros,\n                      lambda = 0,\n                      order = c(0, 1, 1),  \n                      seasonal =  c(0, 1, 1),\n                      xreg = cbind(DiasLaborables, DiasNoLaborables, \n                                   LunesNavidad, DiasPreSanta, DiasPascua,\n                                   d0402, d0805, d0806, d0310))\nPasajerosAri\n\nSeries: Pasajeros \nRegression with ARIMA(0,1,1)(0,1,1)[12] errors \nBox Cox transformation: lambda= 0 \n\nCoefficients:\n          ma1     sma1  DiasLaborables  DiasNoLaborables  LunesNavidad\n      -0.5276  -0.3752          0.0343            0.0158        0.0259\ns.e.   0.0539   0.0591          0.0051            0.0052        0.0072\n      DiasPreSanta  DiasPascua   d0402   d0805   d0806   d0310\n           -0.0579     -0.0253  0.0333  0.0644  0.0284  0.0377\ns.e.        0.0042      0.0067  0.0130  0.0126  0.0126  0.0126\n\nsigma^2 = 0.0002842:  log likelihood = 737.61\nAIC=-1451.23   AICc=-1450.03   BIC=-1407.82\n\n\n\nerror <- residuals(PasajerosAri)\nsderror <- sd(error)\n\nautoplot(error, series=\"Error\",\n         colour = \"black\",\n         xlab = \"\",\n         ylab = \"Error\",\n         main = \"\") +\n  geom_hline(yintercept = c(-3, -2, 0, 2, 3)*sderror, \n             colour = c(\"red\", \"blue\", \"black\", \"blue\", \"red\"), \n             lty = 2) + \n  scale_x_continuous(breaks= seq(1996, 2020, 2))\n\n\n\n\nFigura 15: Error + Intervención. Modelo ARIMA\n\n\n\n\nAntes de finalizar el proceso de identificación vamos a confirmar la significatividad de todos los parámetros estimados haciendo uso del estadístico de Wald (véase Tabla 2).\n\ndatos <- NULL\nfor(i in 1:length(coef(PasajerosAri))) {\n  datos <- rbind(datos,\n                 data.frame(\n                   \"Coeficiente\" = names(coef(PasajerosAri))[i],\n                   \"Valor de p\" = wald.test(b = coef(PasajerosAri), \n                                            Sigma = vcov(PasajerosAri), \n                                            Terms = i)$result$chi2[3])\n                 )\n}\n\n\nkable(datos, digits = 4, row.names = FALSE)\n\n\n\nTabla 2: Contrastes de significatividad\n\n\nCoeficiente\nValor.de.p\n\n\n\n\nma1\n0.0000\n\n\nsma1\n0.0000\n\n\nDiasLaborables\n0.0000\n\n\nDiasNoLaborables\n0.0023\n\n\nLunesNavidad\n0.0003\n\n\nDiasPreSanta\n0.0000\n\n\nDiasPascua\n0.0001\n\n\nd0402\n0.0106\n\n\nd0805\n0.0000\n\n\nd0806\n0.0246\n\n\nd0310\n0.0028"
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#validación-del-modelo",
    "href": "03-14-Ejemplo-Pasajeros.html#validación-del-modelo",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.4 Validación del modelo",
    "text": "5.4 Validación del modelo\nEn el proceso de validación analizaremos la calidad de ajuste y predicción del modelo estimado.\n\n\n\nCalidad del ajuste\nAnalizando los criterios de bondad de ajuste (sobre el error de predicción intra-muestral a un periodo vista) se tiene un error medio (ME) de -0.05 millones de pasajeros, que es prácticamente cero por lo que no parece que haya sesgo en las predicciones; en media nos equivocamos 3.7 millones de pasajeros (RMSE) y el error porcentual medio (MAPE) es 1.3%, muy bajo. Para ambos indicadores de bondad de ajuste el error obtenido es la mitad que el visto con alisado.\n\n\n                ME RMSE  MAE  MPE MAPE MASE ACF1\nTraining set -0.05 3.72 2.92 0.01 1.26 0.35 0.02\n\n\n\n\n\n\nCalidad de las predicciones\nSe completará el proceso de validación estimado el error de predicción extra muestral según el horizonte temporal. Se considerarán 12 años para el periodo de estimación y un año para el de predicción.\n\nk <- 144                  \nh <- 12                   \nT <- length(Pasajeros)    \ns<-T - k - h            \n\nmapeArima <- matrix(NA, s + 1, h)\n\nX <- cbind(DiasLaborables, DiasNoLaborables, \n           LunesNavidad, DiasPreSanta, DiasPascua,\n           d0402, d0805, d0806, d0310)\n\nfor (i in 0:s) {\n  train.set <- subset(Pasajeros, start = i + 1, end = i + k)\n  test.set <-  subset(Pasajeros, start = i + k + 1, end = i + k + h) \n  \n  X.train <- X[(i + 1):(i + k),]\n  hay <- colSums(X.train)\n  X.train <- X.train[, hay>0]\n  \n  X.test <- X[(i + k + 1):(i + k + h),]\n  X.test <- X.test[, hay>0]\n  \n  fit <- try(Arima(train.set, \n                   lambda = 0,\n                   order = c(0, 1, 1),\n                   seasonal = c(0, 1, 1),\n                   xreg=X.train), silent = TRUE)\n  \n  if (!is.element(\"try-error\", class(fit))) {\n    fcast <- forecast(fit, h = h, xreg = X.test)\n    mapeArima[i + 1,] <- 100*abs(test.set - fcast$mean)/test.set\n  }\n}\n\nerrorArima <- colMeans(mapeArima, na.rm = TRUE)\nround(errorArima, 2)\n\n [1] 1.39 1.53 1.61 1.72 1.87 1.96 2.08 2.22 2.35 2.48 2.62 2.79\n\n\nEl error es creciente en el horizonte temporal de predicción. Para predicciones extra-muestrales a un periodo vista vale 1.4%, algo superior al error de estimación, pero realmente bajo. Incluso para predicciones a doce meses vista, el error sigue siendo reducido, 2.8%. Recordemos que para alisado era de 3.6%."
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#interpretación-del-modelo-estimado",
    "href": "03-14-Ejemplo-Pasajeros.html#interpretación-del-modelo-estimado",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.5 Interpretación del modelo estimado",
    "text": "5.5 Interpretación del modelo estimado\nEl modelo estimado y validado corresponde al modelo de las aerolíneas con intervención: \\(ARIMA_{12}(0,1,1)(0,1,1) + AI\\). La ecuación teórica completa del modelo es: \\[(1-L)(1-L^{12})\\log(Pasajeros) = (1+\\theta_1 L)(1 + \\theta_{12} L^{12})\\varepsilon_t+\\] \\[\\gamma_1 DiasLaborables +\\gamma_2 DiasNoLaborables +\\gamma_3 LunesNavidad+\\] \\[\\gamma_4 DiasPreSanta + \\gamma_5 DiasPascua +\\] \\[\\gamma_6 d0402 +\\gamma_7 d0805 +\\gamma_8 d0806 +\\gamma_9 d0310.\\]\nSi se desarrolla el modelo y se deja en función de la tasa de variación anual del número de pasajero, queda (la parte de intervención no cambia):\n\\[TVAPasajeros_t = TVAPasajeros_{t-1} + \\theta_1 \\varepsilon_{t-1} + \\theta_{12} \\varepsilon_{t-12}+ \\theta_1 \\theta_{12} \\varepsilon_{t-13}+\\varepsilon_t + AI.\\] Finalmente, el modelo estimado es: \\[\\widehat{TVAPasajeros}_t = TVAPasajeros_{t-1} -0.53 \\varepsilon_{t-1} -0.37 \\varepsilon_{t-12}+ 0.20 \\varepsilon_{t-13} +\\] \\[0.034\\cdot DiasLaborables +0.016\\cdot DiasNoLaborables+ 0.026\\cdot LunesNavidad\\] \\[- 0.058\\cdot DiasPreSanta - 0.025\\cdot DiasPascua +\\] \\[0.033\\cdot d0402 +0.064\\cdot d0805 +0.028\\cdot d0806 +0.038\\cdot d0310.\\] Interpretación:\n\nLa tasa de variación anual del número de pasajeros en transporte urbano para un mes dado es la misma que la observada en el mes previo.\nSi hace uno, doce o trece meses se observó un número atípico de pasajeros, se debe tener en cuenta para corregir la predicción.\nCada día laborable adicional en un mes supone un incremento en el número de pasajeros de 3.4 p.p. y cada día no laborable un incremento adicional de 1.6 p.p.\nSi la Navidad cae en lunes y por tanto Nochebuena en domingo, ese mes de diciembre el número de pasajeros será 2.6 p.p. superior al de un mes de diciembre donde la Navidad no cae en lunes.\nSi los días laborables (lunes a jueves) de la Semana Santa caen íntegramente en marzo, ese mes el número de pasajeros cae 5.8 p.p. respecto de un marzo sin Semana Santa. Lo mismo pasaría con abril.\nDe la misma forma, si los días laborables (lunes a viernes) de la semana posterior a Domingo de Resurrección (semana de Pascua) caen en marzo, ese mes el número de pasajeros cae 2.5 p.p. respecto de un marzo sin Pascua. Lo mismo para abril.\nAdemas, para cuatro meses se observó una tasa de variación anual atípicamente superior a la esperada."
  },
  {
    "objectID": "03-14-Ejemplo-Pasajeros.html#predicción-del-número-de-pasajeros-en-transporte-urbano",
    "href": "03-14-Ejemplo-Pasajeros.html#predicción-del-número-de-pasajeros-en-transporte-urbano",
    "title": "Análisis de la serie Pasajeros en transporte urbano",
    "section": "5.6 Predicción del número de pasajeros en transporte urbano",
    "text": "5.6 Predicción del número de pasajeros en transporte urbano\nUna vez dado por válido el modelo, podemos pasar a realizar predicciones para los próximos años. Para las variables de intervención sujetas a fecha de calendario ya hemos ido creando sus valores previstos, para las demás los fijaremos a cero.\n\npPasajerosAri <- forecast(PasajerosAri, \n                          h = 60,\n                          xreg = cbind(pDiasLaborables, pDiasNoLaborables, \n                                       pLunesNavidad, pDiasPreSanta, pDiasPascua,\n                                       rep(0, 60), rep(0, 60), \n                                       rep(0 ,60), rep(0, 60)), \n                          level = 95)\nautoplot(pPasajerosAri, \n         xlab = \"\",\n         ylab = \"\",\n         main = \"\") +\n  scale_x_continuous(breaks= seq(1996, 2024, 4))\n\n\n\n\nFigura 16: Pasajeros (1996-2019) y predicción (2020-2024). Modelo ARIMA\n\n\n\n\nAsí, en 2020 se esperan 3180 millones de pasajeros y para 2021 un total de 3247 millones de pasajeros."
  },
  {
    "objectID": "04-01-Bootstrapping.html#idea-general",
    "href": "04-01-Bootstrapping.html#idea-general",
    "title": "Bootstrapping para obtener intervalos de predicción",
    "section": "2.1 Idea general",
    "text": "2.1 Idea general\nVeamos primero la idea general y luego los detalles:\n\nPartimos de una serie temporal \\(\\{y_t\\}_{t=1}^T\\) y un horizonte de predicción \\(h\\).\nA partir de la serie original vamos a generar una nueva serie que es similar a la original. Luego veremos como.\nAjustamos nuestro modelo a la nueva serie y obtenemos una predicción \\(h\\) periodos hacia adelante, que llamaremos \\(\\hat y_{T+h|T}^1\\).\nRepetimos el paso 2 y 3 un numero \\(n\\) de veces (típicamente \\(n=5000\\)), de forma que al final del proceso tenemos \\(n\\) predicciones \\(h\\) periodos hacia adelante: \\(\\hat y_{T+h|T}^1,\\; \\hat y_{T+h|T}^2,\\; \\ldots,\\; \\hat y_{T+h|T}^n\\).\nPor último, obtenemos los intervalos de predicción calculando los percentiles correspondientes a partir de estas \\(k\\) predicciones.\n\nEste proceso hay que repetirlo para cada horizonte de predicción en que estemos interesados."
  },
  {
    "objectID": "04-01-Bootstrapping.html#detalles",
    "href": "04-01-Bootstrapping.html#detalles",
    "title": "Bootstrapping para obtener intervalos de predicción",
    "section": "2.2 Detalles",
    "text": "2.2 Detalles\n\nPaso 2: nueva serie\nEl paso clave del proceso es el paso 2, donde se obtiene una nueva serie similar a la original. En lo que viene a continuación no voy a ser riguroso para no perdernos en cuestiones matemáticas, pero sí suficientemente preciso para entender bien el proceso.\n\nDada la serie original, la descomponemos (recuerda el tema 2) en sus tres componentes: tendencia, estacionalidad y error.\nA continuación, obtenemos una versión barajada de la componente del error. (Aquí es donde no estoy siendo preciso porque el proceso de barajado se tiene que hacer por bloques y es con reemplazamiento.)\nAhora se combinan –sumando o multiplicando, según el esquema– la tendencia, la estacionalidad y el error barajado para obtener una nueva serie que se parecerá a la original.\n\nVeamos un ejemplo muy sencillo, para una serie simulada de orden estacional 5.\n\nLa dos primeras columnas indican la estación de cada dato y el valor de la serie, para un total de 15 observaciones.\nLas columnas Tendencia, Estacionalidad y Error han sido obtenidas aplicando el método de descomposición por regresiones locales ponderadas. Observa que cada dato de la serie es la suma de estas tres componentes.\nLa columna ErrorBootstrapping se ha obtenido como un muestreo con reemplazamiento de los datos de la columna Error. Observa que como es una muestra con reemplazamiento hay algunos errores repetidos.\nPor último, la nueva serie (columna NuevaSerie) se ha obtenido sumando las columnas Tendencia, Estacionalidad y ErrorBootstrapping. Esta serie tiene la misma tendencia y estacionalidad que la serie original y solo se diferencia en el error, así que la nueva serie debería parecerse a la serie original.\n\n\n\n   Estacion Serie Tendencia Estacionalidad  Error ErrorBootstrapping NuevaSerie\n1         1 27.00     19.96           9.60  -2.56              -2.96      26.59\n2         2 16.72     25.12         -13.33   4.93               9.43      21.22\n3         3 15.08     30.14         -12.09  -2.96              -2.56      15.49\n4         4 18.79     34.77          -9.11  -6.87               3.10      28.76\n5         5 75.53     38.58          24.94  12.01              12.01      75.53\n6         1 63.31     39.24           9.60  14.47               3.10      51.94\n7         2 17.28     38.48         -13.33  -7.87               9.43      34.58\n8         3 18.00     34.84         -12.09  -4.75              -6.87      15.88\n9         4 24.84     30.85          -9.11   3.10              -0.40      21.34\n10        5 54.67     30.13          24.94  -0.40              -6.87      48.21\n11        1 30.85     31.11           9.60  -9.86              12.01      52.72\n12        2 22.02     30.52         -13.33   4.84              -9.86       7.32\n13        3 26.51     29.17         -12.09   9.43               3.10      20.18\n14        4 24.14     27.94          -9.11   5.31              -7.87      10.96\n15        5 41.31     26.54          24.94 -10.17              12.01      63.49\n\n\n\n\nPaso 5: Predicción por intervalos\nVamos a aclarar también el paso 5.\nPartimos de \\(n\\) predicciones a \\(h\\) periodos vista (\\(\\hat y_{T+h|T}^1,\\; \\hat y_{T+h|T}^2,\\; \\ldots,\\; \\hat y_{T+h|T}^n\\)) y queremos obtener a partir de ellas el intervalo de confianza.\nSupongamos que el nivel de confianza deseado es del 95%. Entonces, debemos calcular para las predicciones el percentil 2.5% y 97.5%. Recuerda que el percentil 2.5% es el valor numérico que deja un 2.5% de las predicciones por debajo de él; y que el percentil 97.5% es el valor numérico que deja un 97.5% de las predicciones por debajo de él. La función de R quantile() permite obtener estos valores.\nSi denominamos \\(l_h\\) al percentil 2.5% y \\(u_h\\) al percentil 97.5%, el intervalo de confianza de la predicción a \\(h\\) periodos vista es \\([l_h,\\; u_h]\\).\n\n\n¿Y la prediccion puntual?\nPara la predicción puntual tenemos dos opciones: obtener la predicción a partir de la serie original (como hemos visto en clase); u obtenerla como media de las \\(n\\) predicciones obtenidas\n\\[\\frac{1}{n}\\sum_{j=1}^n \\hat y_{T+h|T}^j\\]\nEste segundo método es el usual y se denomina bagging de bootstrap aggregating."
  },
  {
    "objectID": "05-Recursos-R.html",
    "href": "05-Recursos-R.html",
    "title": "Recursos de la asignatura",
    "section": "",
    "text": "Durante el curso usaremos diferentes ficheros de datos para los ejemplos y para el código en R. Desde esta página puedes descargarte todo el material\n\n\n\n\n\n\nFicheros de datos\n\nTítulos publicados: Títulos publicados en España (fuente Instituto Nacional de Estadística). Es una serie anual de 1993 a 2019.\nNacimientos: Nacimientos en España (fuente Instituto Nacional de Estadística). Serie mensual de enero de 1975 a diciembre de 2019.\nConsumo eléctrico: Consumo eléctrico en España en GWh (fuente Red Eléctrica de España). Es una serie diaria desde el 1 de enero de 2021 hasta el 31 de diciembre de 2021.\nAforo de vehículos en Oropesa: Aforo de vehículos por Oropesa, carretera N-340, km. 996,48 (fuente Ministerio de Fomento). La serie es anual de 1960 a 2019.\nConsumo de alimentos per cápita: Consumo alimentario en hogar per cápita en España. Esta serie está construida a partir de la serie de consumo alimentario en hogar (fuente Ministerio de Agricultura, Alimentación y Medio Ambiente), y la serie de población (fuente Instituto Nacional de Estadística). Es una serie anual de 1987 a 2021 y la unidad es el Kg per cápita.\nExportaciones de España a la UE27: volumen, en millones de euros, de exportaciones de bienes desde España hacía la UE27 (conjunto de 27 países de la Unión Europea, con Reino Unido ya ha excluido), desde enero de 1999 hasta diciembre de 2021.\nProducción de Chocolate en Australia: Producción de chocolate en Australia desde enero de 1958 hasta diciembre de 1994.\nPernoctaciones: Número de pernoctaciones que los turistas extranjeros realizan en España en alojamientos turísticos autorizados (fuente Eurostat). Es una serie mensual de enero de 2000 a diciembre de 2019.\nPasajeros en transporte urbano: Número de pasajeros en transporte urbano en España (fuente Instituto Nacional de Estadística). Serie mensual de enero 1996 a diciembre de 2021.\n\n\n\n\nTodos los ficheros de datos en un único fichero comprimido\n\n\n\n\n\n\nCódigo R\nTienes el código para los temas de teoría aquí:\n\nCódigo para el tema 2\nCódigo para el tema 3\nCódigo para el tema 4\nCódigo para el tema 5\nCódigo para el tema 6\nCódigo para el tema 7\n\n\nPara el ejemplo de Pernoctaciones tienes el código aquí:\n\nCódigo para el ejemplo del tema 2\nCódigo para el ejemplo del tema 3\nCódigo para el ejemplo del tema 4\nCódigo para el ejemplo del tema 5\nCódigo para el ejemplo del tema 6\nCódigo para el ejemplo del tema 7\n\nY para el ejemplo de Pasajeros en transporte urbano aquí:\n\nCódigo para el ejemplo Pasajeros en transporte urbano\n\n\n\nY si quieres todos los ficheros de código de golpe aquí:\n\nTodos los ficheros de código en un único fichero comprimido"
  },
  {
    "objectID": "04-03-Redes_neuronales.html",
    "href": "04-03-Redes_neuronales.html",
    "title": "Autorregresión con redes neuronales",
    "section": "",
    "text": "1 Antecedentes\nDurante este curso hemos visto tres grandes familias de modelos que permiten ajustar y predecir series temporales: medias móviles (tema 4), alisado exponencial (tema 5) y modelos ARIMA (temas 6 y 7). En los tres casos se ajusta un modelo a una serie temporal y el resultado del ajuste nos permite no solo predecir, sino aprender y entender el comportamiento de la serie. Por ejemplo, el resultado del ajuste por Alisado nos permite saber si la pendiente de la serie cambia en el tiempo (parámetro \\(\\beta\\) del ajuste) o el tipo de esquema de la serie según que la estacionalidad sea aditiva o multiplicativa. Con los modelos ARIMA podemos estimar el impacto en la serie de un efecto calendario (Semana Santa, días laborables…).\nOtra familia de modelos muy versátiles que permiten predecir con todo tipo de datos –transversales, series temporales, imágenes, espacio-temporales…– son las redes neuronales. Estos modelos son el embrión del Deep Learning y el motor de muchas AI y los estudiaréis en detalle el próximo año en la asignatura Técnicas Avanzadas de Predicción en Negocios.\nVamos a ver muy, pero que muy por encima en que consisten las redes neuronales y como se pueden aplicar para predecir series temporales. Ya tendrás oportunidad el próximo curso de profundizar en esta materia. Esto es una pequeña píldora.\n\n\n2 Arquitectura de una red neuronal de una capa\nUna red neuronal puede ser entendida como una red de neuronas dispuestas en capas. Siempre hay una capa de entrada de los datos y una capa de salida de la respuesta. Entre estas dos capas se pueden disponer de tantas capas intermedias (ocultas) como se considere necesario.\nCada capa está formada por un número determinado y potencialmente diferente de neuronas o nodos. Los nodos de una capa están conectadas a los nodos de la siguiente. Por simplicidad asumiremos que todos los nodos de una capa se conectan con los nodos de la capa siguiente.\nAquí vamos a considerar solo redes neuronales con una capa intermedia y donde la capa de salida tiene solo una neurona. La Figura 1 es un ejemplo de este tipo de redes neuronales.\n\n\n\n\n\nFigura 1: Red neuronal con una sola capa intermedia\n\n\nEn esta red cada nodo de una capa recibe entradas de los nodos de la capa previa. Dicho de otra forma, las salidas de los nodos de una capa son las entradas de los nodos de la siguiente capa. Es lo que se denomina una multilayer feed-forward network.\nLas entradas que recibe cada nodo se combinan usando una función lineal ponderada. Por ejemplo, un nodo \\(j\\) de la capa intermedia recibe las dos entradas \\(x_1\\) y \\(x_2\\) de los nodos de la capa de entrada y los combina linealmente\n\\[z_j = b_j + \\sum_{i=1}^2 w_{i,j}x_i\\] Para los nodos de la capa intermedia el valor \\(z_j\\) se transforma usando una función no lineal, por ejemplo la sigmoidea:\n\\[s_j = \\frac{1}{1 + e^{-z_j}}\\] y este valor \\(s_j\\) es la salida del nodo \\(j\\) que va al nodo de la capa de salida.\nLos valores de los pesos \\(b_1\\), \\(b_2\\), \\(w_{1,1}\\), \\(w_{1,2}\\)…\\(w_{2,4}\\) se deben ajustar a partir de los datos. Estos valores suelen estar restringidos para evitar que sean demasiado grandes. El parámetro que restringe las ponderaciones se conoce como parámetro de decaimiento, y suele ser igual a \\(0.1\\).\nLos pesos toman valores aleatorios al principio y luego se actualizan con los datos observados en un proceso de aprendizaje. Por lo tanto, hay un elemento de aleatoriedad en las predicciones producidas por una red neuronal. Por este motivo, la red suele entrenarse varias veces utilizando diferentes puntos de partida aleatorios, y los resultados se promedian.\n\n\n3 Autoregresión de redes neuronales\nEn el contexto de series temporales, los valores de entrada pueden ser valores retardados de la serie y el valor de salida deseado el valor contemporáneo. De la misma forma que en un modelo AR usamos los datos pasados para predecir el futuro.\n\n\n\nFigura 2: Red neuronal para predecir una serie temporal. El dato del periodo \\(t\\) se predice a partir de los dos datos previos.\n\n\nVamos a extender estas ideas e ir añadiendo algo de notación.\nComo hemos indicado vamos a considerar solo redes simples con una capa intermedia y una capa de salida de un solo nodo, que denominaremos \\(NNAR\\). La notación \\(NNAR(p, k)\\) indica que hay \\(p\\) valores desfasados en la capa de entrada y \\(k\\) nodos en la capa intermedia. Por ejemplo, la red de la Figura 2 es modelo \\(NNAR(2,5)\\), donde \\(y_{t-1}\\) e \\(y_{t-2}\\) son usados para predecir \\(y_t\\). Así, un modelo \\(NNAR(p, 0)\\) sería equivalente a un modelo \\(ARIMA(p,0,0)\\).\nSi la serie tiene estacionalidad es conveniente que entre los datos de entrada estén las observaciones pasadas de la misma estación que se desea predecir. Por ejemplo, para la serie diaria de consumo eléctrico un modelo \\(NNAR(2, 1, k)\\) usaría como datos de entrada \\(y_{t-1}\\), \\(y_{t-2}\\) e \\(y_{t-7}\\) para predecir \\(y_t\\). En general, \\(NNAR(p,P,k)_m\\) usa como datos de entrada \\(y_{t-1}\\),\\(y_{t-2}\\),…,\\(y_{t-p}\\),\\(y_{t-m}\\), \\(y_{t-2m}\\),…,\\(y_{t-Pm}\\) y una capa intermedia de \\(k\\) neuronas. Por lo tanto, \\(NNAR(p,P,0)_m\\) es equivalente a \\(ARIMA(p,0,0)(P,0,0)_m\\).\n\n\n4 Aplicación\nLa función nnetar de la librería forecast permite estimar modelos \\(NNAR(p,P,k)_m\\). En su forma más sencilla el usuario no tiene que especificar los valor de los parámetros \\(p\\), \\(P\\) y \\(k\\) ya que la función los identifica según ciertos criterios.\nLa siguiente gráfica muestra el consumo eléctrico en España en GWh para 17 semanas desde febrero hasta mayo de 2021. Hay una fuerte componente estacional diaria de orden \\(7\\), donde el consumo es alto de lunes a viernes, algo mas reducido el sábado y aún menor el domingo.\n\nelectricidad <- read_csv2(\"./series/Consumo electrico.csv\")\n\nelectricidad <- ts(electricidad[, 2], \n                   start = c(1, 5),\n                   frequency = 7)\n\nelectricidad <- window(electricidad,\n                       start = c(6, 1),\n                       end = c(22, 7))\n\nautoplot(electricidad) + \n  ggtitle(\"\") +\n  ylab(\"GWh\") + \n  xlab(\"Semana\")\n\n\n\n\nFigura 3: Consumo eléctrico (febrero a mayo de 2021)\n\n\n\n\nLa Figura 4 muestra la serie y su predicción para los siguientes 14 días. El modelo ajustado es \\(NNAR(8,1,4)_7\\). Es decir, para predecir el consumo del día \\(t\\), \\(y_t\\), se usa el consumo de los ocho días previos \\(y_{t-1}\\) a \\(t_{t-8}\\), y de hace una semana \\(y_{t-7}\\), y la capa intermedia tiene cuatro nodos. Observa que en la capa de entrada, con 9 nodos, el valor de \\(y_7\\) entra en dos nodos.\n\nfit <- nnetar(electricidad)\n\naccuracy(fit)\n\n                       ME     RMSE      MAE         MPE      MAPE     MASE\nTraining set -0.008637599 6.542979 4.771908 -0.02324458 0.7129442 0.239674\n                    ACF1\nTraining set -0.09148154\n\npfit <- forecast(fit, h = 14)\n\nautoplot(pfit) +\n  ylab(\"GWh\") + \n  xlab(\"Semana\")\n\n\n\n\nFigura 4: Consumo eléctrico (febrero a mayo de 2021)\n\n\n\n\nEl cálculo de intervalos de confianza con redes neuronales es un proceso complejo y costoso temporalmente.\n\ntiempo <- Sys.time()\npfit <- forecast(fit, \n                 h = 14, \n                 level = 95,\n                 PI = TRUE)\n\nSys.time() - tiempo\n\nTime difference of 11.47418 secs\n\npfit\n\n         Point Forecast    Lo 95    Hi 95\n23.00000       660.4780 648.8390 672.9838\n23.14286       687.7069 670.7016 704.0489\n23.28571       692.8787 666.6536 713.5229\n23.42857       695.2311 656.6511 725.0782\n23.57143       691.3245 650.9579 715.1705\n23.71429       628.0373 592.9344 661.8500\n23.85714       578.2310 547.7317 605.9081\n24.00000       655.7185 609.6250 697.2030\n24.14286       684.3920 637.1656 714.2633\n24.28571       688.2651 640.7232 717.2609\n24.42857       689.6607 629.7401 732.6440\n24.57143       690.2667 626.0051 723.2540\n24.71429       634.5380 585.8338 691.7114\n24.85714       579.8414 542.9791 631.8322\n\n\nLa función nnetar admite la inclusión de variables de intervención de la forma usual a través del argumento xreg."
  }
]